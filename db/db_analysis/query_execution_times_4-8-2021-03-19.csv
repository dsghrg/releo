987476d881cb47a6c8add731c5b7eae3dc1f17ce530298ed8c4c939be984abac,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,137.432056903839,"duration: 137427.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15182950.11..15182950.12 rows=1 width=8) (actual time=130352.587..130352.588 rows=1 loops=1)
  ->  Gather  (cost=15182949.90..15182950.11 rows=2 width=8) (actual time=130344.810..137425.386 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15181949.90..15181949.91 rows=1 width=8) (actual time=130294.678..130294.678 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14820782.61 rows=144466917 width=0) (actual time=103970.434..129061.783 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12834053.50 rows=144466917 width=8) (actual time=103965.374..123072.472 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10846040.39 rows=144466917 width=8) (actual time=103940.880..114807.524 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=1281305.63..8485963.41 rows=150000000 width=8) (actual time=80414.144..98883.371 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..6423447.17 rows=150000000 width=16) (actual time=80412.865..93758.204 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7044.173..14289.394 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7042.054..12352.795 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.545..2540.771 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1467.342..1467.348 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.034..646.708 rows=1666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.017..2.018 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.995..1.997 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52641.368..52641.368 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.001..8094.106 rows=20000000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.234..1.235 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.975..1.138 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.438..237.439 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.390..106.557 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.003..24.004 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.662..11.878 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.707..4.707 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.559..2.530 rows=10000 loops=3)"
21c0a68a15c28e1a1ac90f3a0e3efaf12e07eff2ec3c3dbb0e486a38f3b19cf7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN category as cat
ON cat.id = sub.category_id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,92.9517555236816,"duration: 92942.121 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN category as cat
ON cat.id = sub.category_id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12582070.47..12582070.48 rows=1 width=8) (actual time=89365.837..89365.837 rows=1 loops=1)
  ->  Gather  (cost=12582070.25..12582070.46 rows=2 width=8) (actual time=89360.978..92941.922 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12581070.25..12581070.26 rows=1 width=8) (actual time=89295.497..89295.498 rows=1 loops=3)
              ->  Hash Join  (cost=537500.68..12219902.96 rows=144466918 width=0) (actual time=73653.692..87968.143 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537484.43..10233466.59 rows=144466918 width=8) (actual time=73652.231..82709.542 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440803.05..7393556.13 rows=144466918 width=16) (actual time=40683.620..62659.837 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=440766.05..2276982.38 rows=24077820 width=24) (actual time=40682.824..56389.230 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12377.092..24309.843 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.907..6029.790 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=456.674..456.674 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=57.516..329.591 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.994..106.686 rows=333333 loops=3)
                                                        ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=56.161..56.161 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                              ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.465..41.294 rows=50000 loops=3)
                                                                    Hash Cond: (sub.category_id = cat.id)
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.573..11.537 rows=50000 loops=3)
                                                                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.762..5.763 rows=10000 loops=3)
                                                                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.536..2.926 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6974.155..6974.155 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.095..2568.693 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.753..0.753 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.737..0.738 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2548.605..2548.605 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.067..500.954 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.120..1.120 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.775..0.939 rows=500 loops=3)"
a0eb7449f806d5c18e218f11f9f29ee732f5c0688e7e4e1e9da6927d10cbaeb4,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.076988458633,"duration: 111073.513 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11348123.75..11348123.76 rows=1 width=8) (actual time=107795.362..107795.363 rows=1 loops=1)
  ->  Gather  (cost=11348123.53..11348123.74 rows=2 width=8) (actual time=107791.146..111073.064 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11347123.53..11347123.54 rows=1 width=8) (actual time=107738.173..107738.173 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..10985956.24 rows=144466918 width=0) (actual time=98189.531..106366.180 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8428207.78 rows=144466918 width=8) (actual time=56267.714..90071.355 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=56266.913..84656.748 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=56261.266..78147.357 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56260.340..72071.944 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11801.163..37304.795 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11779.781..25904.097 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.836..5832.990 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.198..239.199 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.921..108.077 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.059..21.059 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.833..10.964 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6646.310..6646.310 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.636..2464.947 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.897..0.898 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.662..0.769 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.531..5.532 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.649..2.904 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.754..0.754 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.736..0.738 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.616..1238.616 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.754..519.305 rows=1666667 loops=3)"
791802e603b8afc358b23859310febfb5e808c25a79e5b6126cc6bf76fe22898,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,120.063565731049,"duration: 120060.959 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=115099.940..115099.941 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=115095.785..120059.625 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=115043.555..115043.555 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=72895.955..113290.251 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..8873876.90 rows=144466918 width=8) (actual time=72894.805..107203.146 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531437.75..3757303.15 rows=24077820 width=16) (actual time=72894.257..102590.360 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=72889.005..95584.689 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=72864.870..85508.931 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=45669.856..60949.599 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23072.888..37892.841 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.971..6911.427 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6829.453..6829.454 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2471.272 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.602..240.602 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.982..101.157 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1918.167..1918.167 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.860..498.008 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.779..23.779 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.550..12.084 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.148..5.148 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.516..2.773 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.526..0.526 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.505..0.507 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.843..0.843 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.531..0.662 rows=500 loops=3)"
51c504bb15d56442c9cfd2a953c93829cf67c0514021a9174fee90432a1adce8,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.454965829849,"duration: 114452.554 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11470155.42..11470155.43 rows=1 width=8) (actual time=110596.454..110596.454 rows=1 loops=1)
  ->  Gather  (cost=11470155.20..11470155.41 rows=2 width=8) (actual time=110592.219..114452.432 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11469155.20..11469155.21 rows=1 width=8) (actual time=110542.403..110542.403 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11107987.91 rows=144466918 width=0) (actual time=100776.153..109198.551 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8550239.45 rows=144466918 width=8) (actual time=46926.667..91879.594 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=46925.914..86198.442 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=46920.056..79413.779 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=46919.215..73344.973 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46891.933..61828.495 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24373.847..39240.099 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.827..6744.745 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7589.349..7589.350 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.836..2710.357 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.515..239.515 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.691..103.578 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.931..26.931 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.645..13.277 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.810..0.810 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.568..0.672 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.741..5.741 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.738..2.968 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.699..0.700 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.685 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1209.954..1209.954 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.741..479.943 rows=1666667 loops=3)"
29c1e106583631e0c304684b074d2863d2ab5d0b10dba37a9adfc3914d934fde,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.050093173981,"duration: 112045.334 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11348123.75..11348123.76 rows=1 width=8) (actual time=108226.291..108226.292 rows=1 loops=1)
  ->  Gather  (cost=11348123.53..11348123.74 rows=2 width=8) (actual time=108222.074..112044.703 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11347123.53..11347123.54 rows=1 width=8) (actual time=108163.645..108163.645 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..10985956.24 rows=144466918 width=0) (actual time=99511.025..106899.297 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8428207.78 rows=144466918 width=8) (actual time=55283.671..90407.467 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=55282.758..84792.176 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55281.624..79365.805 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55274.348..71738.421 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12122.784..37719.627 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12100.612..26268.553 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.070..6070.781 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.408..230.408 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.648..106.243 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.831..21.831 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.717..11.488 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7372.305..7372.305 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.638..2713.682 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.165..7.165 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.803..3.889 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.109..1.109 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.761..0.869 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.861..0.861 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.841 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1916.339..1916.339 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.923..542.240 rows=1666667 loops=3)"
2dafd56f0312ab9cae82afad5aa62b279fb7a8db82aa402be3bb188a38e03fd8,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.645943641663,"duration: 111643.155 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=108383.163..108383.163 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=108378.139..111642.948 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=108323.823..108323.823 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=88284.968..107148.500 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=88284.051..102548.910 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3587950.73 rows=24077820 width=16) (actual time=88278.368..97247.739 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=43318.980..78191.816 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=43294.883..65832.819 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43293.998..59684.850 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11834.688..25122.093 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.216..5871.252 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=256.627..256.631 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.940..113.923 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7632.693..7632.693 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.614..2742.773 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.855..0.855 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.673..0.760 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.746..23.746 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.868..12.393 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1223.569..1223.569 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.895..498.839 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.535..5.535 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.554..2.848 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.657..0.658 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.622..0.624 rows=4 loops=3)"
83e2795e24930c327e2e2e0aa041fa1684678d9595f9bf6c77482fde8f0d1e03,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.517893075943,"duration: 112514.868 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15223147.94..15223147.95 rows=1 width=8) (actual time=108880.819..108880.819 rows=1 loops=1)
  ->  Gather  (cost=15223147.73..15223147.94 rows=2 width=8) (actual time=108877.015..112514.376 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15222147.73..15222147.74 rows=1 width=8) (actual time=108821.601..108821.602 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14860980.43 rows=144466918 width=0) (actual time=87477.691..107502.752 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12874251.31 rows=144466918 width=8) (actual time=87472.814..101661.737 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531165.75..10887814.94 rows=144466918 width=16) (actual time=87471.948..96915.154 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=55416.533..77605.871 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55415.426..71048.025 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12407.774..37609.240 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12375.328..26357.458 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.054..6122.226 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=427.357..427.358 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.693..125.598 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.039..32.039 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.634..15.428 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7658.967..7658.967 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.945..2707.063 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.048..1.048 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.031..1.033 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1282.494..1282.494 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.903..512.796 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.583..0.697 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.522..4.522 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.573..2.584 rows=10000 loops=3)"
0609afee5fe67a2208fbee0bd134bc22b3cad61642249eff184c6f21c0f56eb9,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,151.370966434479,"duration: 151368.277 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16363524.52..16363524.53 rows=1 width=8) (actual time=141999.049..141999.049 rows=1 loops=1)
  ->  Gather  (cost=16363524.31..16363524.52 rows=2 width=8) (actual time=141993.077..151368.148 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16362524.31..16362524.32 rows=1 width=8) (actual time=141942.435..141942.435 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..16001357.02 rows=144466917 width=0) (actual time=131865.937..140595.445 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..13443608.57 rows=144466917 width=8) (actual time=92373.136..123727.233 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..11456879.46 rows=144466917 width=16) (actual time=92368.441..116484.338 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206344.25..9468866.35 rows=144466917 width=16) (actual time=92347.116..105937.261 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=72010.285..86453.790 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=5.415..7458.196 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.775..5262.949 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.549..2889.633 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.170..1.170 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.139..1.141 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.559..2.559 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=2.274..2.399 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52115.316..52115.317 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..7980.178 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.459..244.459 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.787..102.671 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.028..21.028 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.553..10.924 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.599..4.599 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.974..2.750 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1312.879..1312.879 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.778..503.921 rows=1666667 loops=3)"
ed1d7880afa84399c25ee19bc6cc352530766bd6a2b49bb52333a1b133bee13d,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.537393093109,"duration: 113524.892 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=109687.193..109687.193 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=109683.040..113524.415 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=109630.132..109630.132 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=92825.411..108215.632 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=92819.836..102157.406 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=56206.112..83992.836 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=56205.116..77716.283 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56204.636..72078.322 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11753.250..37844.625 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11729.325..26205.383 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.889..5814.548 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.022..228.023 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.834..101.516 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.496..23.496 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.836..12.356 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7050.987..7050.987 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.914..2586.315 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.451..0.451 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.443..0.444 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.963..0.964 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.729..0.841 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1154.383..1154.383 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.272..453.139 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.243..5.243 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.754..2.970 rows=10000 loops=3)"
055d7bdcb4358271c5bc8fa596973367d6afe2b5922eeb4c57984125326f6896,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,120.928335428238,"duration: 120925.125 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=117349.964..117349.964 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=117345.537..120924.593 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=117291.325..117291.325 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=101433.649..116033.753 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=101426.559..110256.911 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=44984.578..92034.318 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=44956.878..79310.031 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=44955.892..73889.809 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44955.324..68043.982 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11724.823..25823.151 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.958..5830.462 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=251.206..251.206 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.135..109.325 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7600.988..7600.989 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.698..2675.911 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.543..0.544 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.529..0.530 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.958..0.959 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.787..0.864 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.103..27.104 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.291..14.365 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1377.080..1377.080 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.959..516.086 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.633..6.633 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.592..3.497 rows=10000 loops=3)"
4bdc692a9d18102ab0b805756579d23d87f0660363a3e33aa02499d3bd5b06df,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,120.197854280472,"duration: 120195.140 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11175452.79..11175452.80 rows=1 width=8) (actual time=116395.361..116395.361 rows=1 loops=1)
  ->  Gather  (cost=11175452.57..11175452.78 rows=2 width=8) (actual time=116390.539..120194.564 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11174452.57..11174452.58 rows=1 width=8) (actual time=116330.315..116330.315 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10813285.28 rows=144466918 width=0) (actual time=93671.652..115018.150 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8826556.15 rows=144466918 width=8) (actual time=93666.071..108721.201 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=93665.469..103940.063 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=48080.050..82521.272 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=48055.447..70308.052 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48054.553..63837.206 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24513.829..40247.099 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.883..7287.886 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7240.961..7240.961 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2656.617 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.516..250.516 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.666..109.786 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.864..0.864 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.672..0.768 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.193..24.193 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.876..12.732 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2092.401..2092.401 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.901..544.266 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.568..0.569 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.552..0.554 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.274..5.274 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.812..3.024 rows=10000 loops=3)"
7f5c84fa8a18513a88eacc6ef1f71a9251b36af1e1882bdc96481dc5194d159a,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.991910219193,"duration: 111988.775 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108315.337..108315.337 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108311.973..111987.906 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=108260.859..108260.859 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99872.812..107051.166 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=42673.429..90831.741 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=42672.560..84356.257 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42668.420..77382.212 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42667.892..71722.714 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42645.410..59587.648 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11153.413..24754.356 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.057..5487.412 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=394.287..394.288 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..113.859 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7936.565..7936.565 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.910..2557.047 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.169..22.170 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.689..11.477 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.503..0.504 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.480..0.482 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.064..4.064 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.402..2.116 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.835..0.835 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.654..0.733 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1244.640..1244.640 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.857..503.328 rows=1666667 loops=3)"
233ba45253311ab5d033dcd2e7f3fcf470784826373e97f6802cd04d4f9682b2,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,116.871575117111,"duration: 116869.124 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9473076.69..9473076.70 rows=1 width=8) (actual time=113089.563..113089.563 rows=1 loops=1)
  ->  Gather  (cost=9473076.47..9473076.68 rows=2 width=8) (actual time=113086.224..116869.019 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9472076.47..9472076.48 rows=1 width=8) (actual time=113024.272..113024.272 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9110909.18 rows=144466918 width=0) (actual time=99312.617..111841.644 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3994335.43 rows=24077820 width=8) (actual time=99311.790..107352.513 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=48142.521..89471.029 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=48138.110..81730.787 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48137.480..75350.979 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48115.385..63514.619 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25511.556..40562.307 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.868..7156.640 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7533.533..7533.533 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.896..2792.561 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.045..247.045 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.757..104.984 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.832..21.832 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.453..11.084 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.607..0.607 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.439..0.513 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.326..4.326 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.707..2.410 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1948.432..1948.432 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.872..505.656 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.521..0.521 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.488..0.490 rows=4 loops=3)"
1cdd393657efa28081cf58e551a9aa137097875c197ad11247d2d3db678ffe4b,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,117.151449918747,"duration: 117149.121 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=112754.100..112754.100 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=112749.367..117148.418 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=112690.456..112690.456 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=97389.632..111439.989 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12714413.73 rows=144466918 width=8) (actual time=97388.566..106380.428 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=46853.083..87432.367 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=46848.108..79781.127 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=46847.632..74056.400 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46827.027..62453.533 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24043.205..39280.761 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.835..7114.475 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6676.557..6676.558 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.685..2457.125 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=216.148..216.149 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.611..93.123 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.315..20.315 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.430..10.545 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.448..0.448 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.440..0.442 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.881..4.881 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.636..2.561 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2181.696..2181.696 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.815..478.399 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.763..0.763 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.553..0.655 rows=500 loops=3)"
e79843d2d9dfc6085f99cc8ac0064a974dda9c09a55229810128653a61917da2,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,118.115305900574,"duration: 118110.730 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11100449.12..11100449.13 rows=1 width=8) (actual time=114098.734..114098.734 rows=1 loops=1)
  ->  Gather  (cost=11100448.90..11100449.11 rows=2 width=8) (actual time=114094.305..118110.172 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11099448.90..11099448.91 rows=1 width=8) (actual time=114041.663..114041.663 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10738281.61 rows=144466918 width=0) (actual time=73315.517..112318.573 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8751552.48 rows=144466918 width=8) (actual time=73310.924..105209.373 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=73310.299..100624.634 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=73309.359..94924.616 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=73286.755..85274.639 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44365.833..62492.591 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11991.394..25887.375 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.974..5954.221 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=274.933..274.933 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.630..122.005 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8249.237..8249.238 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.920..2747.063 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1293.067..1293.068 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.366..507.350 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.305..22.305 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.533 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.915..0.915 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.719..0.809 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.600..0.600 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.583..0.585 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.282..4.282 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.531..2.402 rows=10000 loops=3)"
6781fdce0915a058f337c646980a7e8c9b4aa2356bad90544725f7f17c99395b,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,97.5518019199371,"duration: 97548.515 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14333483.09..14333483.10 rows=1 width=8) (actual time=94065.309..94065.309 rows=1 loops=1)
  ->  Gather  (cost=14333482.88..14333483.09 rows=2 width=8) (actual time=94061.606..97548.414 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14332482.88..14332482.89 rows=1 width=8) (actual time=94008.394..94008.395 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=537220.18..13971315.58 rows=144466918 width=0) (actual time=85705.051..92821.399 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=440538.80..11413567.13 rows=144466918 width=8) (actual time=43594.738..77571.958 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=440522.55..9427130.75 rows=144466918 width=16) (actual time=43593.776..71588.997 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=43589.519..65013.563 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=43588.957..59277.294 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11719.448..25437.455 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.936..5643.412 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=414.639..414.639 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.174..290.027 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.021..90.864 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.843..22.844 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.535..11.787 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7164.444..7164.444 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.558..2609.189 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.540..0.540 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.531..0.533 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.180..4.180 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.496..2.264 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.923 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.739..0.830 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1175.493..1175.494 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.764..459.784 rows=1666667 loops=3)"
7c977abbf12dc23bb00a09fa9aebd86023d7ae004eae366938f3312168e17769,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,122.084437608719,"duration: 122082.085 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14533180.98..14533180.99 rows=1 width=8) (actual time=118283.873..118283.873 rows=1 loops=1)
  ->  Gather  (cost=14533180.77..14533180.98 rows=2 width=8) (actual time=118279.953..122080.927 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14532180.77..14532180.78 rows=1 width=8) (actual time=118227.314..118227.314 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14171013.47 rows=144466918 width=0) (actual time=74803.708..116397.730 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12184284.35 rows=144466918 width=8) (actual time=74797.333..108857.988 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..10197847.98 rows=144466918 width=16) (actual time=74796.565..103326.569 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8209834.85 rows=144466918 width=16) (actual time=74770.249..93020.761 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=74769.627..87873.363 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46737.406..62214.103 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23542.857..39030.815 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.160..7120.863 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6626.114..6626.114 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.938..2482.221 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=208.478..208.478 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.232..85.622 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1859.495..1859.495 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.704..465.669 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.591..0.591 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.573..0.574 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.989..25.989 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.453..12.839 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.735..0.735 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.493..0.606 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.015..6.015 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.475..3.083 rows=10000 loops=3)"
df12f842aaa9ccca4c494f2ad937a390197be73d33df42ac43c54a8b717ab7e1,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.625209331512,"duration: 112622.466 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=109218.595..109218.595 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=109215.090..112621.993 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=109163.109..109163.109 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=75893.926..107649.389 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14529894.16 rows=144466918 width=8) (actual time=75892.360..102166.410 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..12543165.04 rows=144466918 width=16) (actual time=75887.569..95965.673 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10555151.91 rows=144466918 width=16) (actual time=75864.387..86668.756 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=43475.302..65596.886 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43474.538..59002.886 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11432.809..25263.693 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.993..5690.694 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.603..235.607 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.842..102.300 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8048.859..8048.859 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.703..2488.327 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.716..0.716 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.698..0.700 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1247.704..1247.704 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.275..479.995 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.804..22.804 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.555..11.317 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.699..4.699 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.551 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.366..1.366 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.117..1.224 rows=500 loops=3)"
11605056a6e549cff5e8b319fc76e82236910c486acc65f04fbaaf36c2949d3c,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.538009643555,"duration: 114530.244 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9473076.69..9473076.70 rows=1 width=8) (actual time=110859.829..110859.829 rows=1 loops=1)
  ->  Gather  (cost=9473076.47..9473076.68 rows=2 width=8) (actual time=110856.030..114530.096 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9472076.47..9472076.48 rows=1 width=8) (actual time=110798.252..110798.252 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9110909.18 rows=144466918 width=0) (actual time=96816.809..109600.128 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3994335.43 rows=24077820 width=8) (actual time=96815.924..105114.402 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=47548.915..87867.004 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..3102579.43 rows=24077820 width=24) (actual time=47547.903..81858.243 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47542.955..74261.398 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47518.175..62831.261 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24456.679..39791.465 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.077..6820.917 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8022.654..8022.657 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.860..2649.620 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.406..248.407 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.653..104.081 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.512..24.513 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.526..12.057 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.859..4.859 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.490..2.490 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.969..0.969 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.834 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1181.343..1181.343 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.889..458.640 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.587..0.587 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.559..0.562 rows=4 loops=3)"
d054e2c17ee260405138487cc3a8dd61f3dc90f8a977f6ecfb8f158ea786fc66,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,119.142732858658,"duration: 119140.078 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9567130.69..9567130.70 rows=1 width=8) (actual time=115432.532..115432.532 rows=1 loops=1)
  ->  Gather  (cost=9567130.47..9567130.68 rows=2 width=8) (actual time=115426.861..119139.267 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9566130.47..9566130.48 rows=1 width=8) (actual time=115372.106..115372.107 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9204963.18 rows=144466918 width=0) (actual time=73690.400..113625.911 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4088389.43 rows=24077820 width=8) (actual time=73689.554..107999.391 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3757303.15 rows=24077820 width=16) (actual time=73688.740..102981.690 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=73684.277..96109.803 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=73661.002..86163.878 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48386.190..63720.385 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25361.817..40583.623 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.883..7116.705 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8136.520..8136.520 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.039..2615.590 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.523..235.523 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.893..96.787 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1232.769..1232.769 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.432..480.451 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.872..22.872 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.548..11.435 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.344..4.344 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.563..2.386 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.793..0.793 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.597..0.684 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.592..0.592 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.561..0.563 rows=4 loops=3)"
24613616c4b0169664078213516916a8a302bb451043f140dd8e0fad876b28ce,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,161.328015327454,"duration: 161325.425 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=18617393.26..18617393.27 rows=1 width=8) (actual time=152125.276..152125.276 rows=1 loops=1)
  ->  Gather  (cost=18617393.04..18617393.25 rows=2 width=8) (actual time=152119.114..161324.578 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18616393.04..18616393.05 rows=1 width=8) (actual time=152059.845..152059.845 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18255225.75 rows=144466917 width=0) (actual time=130030.707..150831.456 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=1304911.38..16268789.39 rows=144466917 width=8) (actual time=130029.503..145732.399 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=1304602.38..14282060.28 rows=144466917 width=16) (actual time=130022.564..140125.370 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=94150.038..120136.617 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=94126.871..108675.782 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71826.679..86765.324 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.135..4770.265 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.078..2062.383 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.998..0.999 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.981..0.983 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52394.459..52394.460 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.876..8118.556 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=269.174..269.174 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.747..119.338 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.807..22.807 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.794..11.705 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1241.050..1241.050 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.942..485.833 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.824..6.824 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.611..3.471 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.856..0.857 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.567..0.698 rows=500 loops=3)"
c73e6ea15d309be34d7d3d946371ebf6df975504f689efea3f24253faa6403b4,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,120.949874401093,"duration: 120939.843 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=117200.820..117200.820 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=117196.293..120939.740 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=117144.034..117144.035 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=89342.387..115698.873 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8873584.15 rows=144466918 width=8) (actual time=89337.700..109650.010 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=89337.017..105306.032 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=89336.290..100236.486 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49452.964..78620.683 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49420.509..65784.377 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26772.903..41893.919 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.443..8745.437 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7553.514..7553.515 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.392..2790.654 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=263.949..263.949 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.843..114.893 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.045..32.045 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.707..15.268 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1354.619..1354.619 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.916..504.216 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.708..0.708 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.610 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.664..0.664 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.647..0.648 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.378..4.378 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.537..2.416 rows=10000 loops=3)"
935c00afb413eed659bbbee7e356439f3ed7232997c39ba58c70e1ef12808d83,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,101.905710220337,"duration: 101903.045 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=98435.485..98435.485 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=98430.876..101901.810 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=98380.489..98380.490 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=82425.137..97109.811 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=536911.18..10611398.36 rows=144466918 width=8) (actual time=82419.561..91359.854 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440229.80..7771487.91 rows=144466918 width=16) (actual time=44286.762..73012.185 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=44285.846..67021.128 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44284.882..60680.884 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13053.469..26090.152 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.982..6079.839 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=417.506..417.506 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.026..292.981 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.046..92.828 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.640..22.641 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.731..11.698 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7382.306..7382.306 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.638..2566.993 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.935..0.935 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.758..0.841 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.857..0.857 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.842..0.844 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1346.626..1346.626 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.947..487.854 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.194..5.194 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.555..2.808 rows=10000 loops=3)"
2fd57b6421e06c4a6ea69a000ecc339d1c3326111dc36414caead7fbf9b03435,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.267117977142,"duration: 114264.780 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11434007.39..11434007.40 rows=1 width=8) (actual time=110792.227..110792.227 rows=1 loops=1)
  ->  Gather  (cost=11434007.18..11434007.39 rows=2 width=8) (actual time=110788.437..114264.644 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11433007.18..11433007.19 rows=1 width=8) (actual time=110736.460..110736.460 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11071839.88 rows=144466918 width=0) (actual time=102068.255..109556.163 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8514091.43 rows=144466918 width=8) (actual time=55518.904..93347.616 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3397517.68 rows=24077820 width=16) (actual time=55518.176..88067.501 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3066138.65 rows=24077820 width=24) (actual time=55514.427..80818.438 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=55492.918..69854.025 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=27130.782..48750.940 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=27129.485..42277.084 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.981..9021.487 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6914.899..6914.899 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.801..2481.571 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.232..1.232 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.947..1.081 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=207.546..207.546 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.662..93.243 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.215..21.215 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.406..10.804 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=3.664..3.664 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.403..1.954 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.684..0.685 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.668..0.670 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1182.814..1182.815 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.000..491.488 rows=1666667 loops=3)"
37e30fe9e8b13bc3c3c7b3d602aa849307730032588ca74a332ea2de9ab16291,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,121.01774597168,"duration: 121014.129 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9520102.69..9520102.70 rows=1 width=8) (actual time=115877.064..115877.064 rows=1 loops=1)
  ->  Gather  (cost=9520102.47..9520102.68 rows=2 width=8) (actual time=115872.375..121013.925 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9519102.47..9519102.48 rows=1 width=8) (actual time=115817.082..115817.083 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9157935.18 rows=144466918 width=0) (actual time=93600.651..114562.370 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4041361.43 rows=24077820 width=8) (actual time=93599.726..109625.000 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=93595.092..103901.124 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=49205.628..83390.738 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=49185.074..71345.161 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49184.274..65066.941 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25740.953..41298.994 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.108..7246.936 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8425.837..8425.838 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.899..2645.333 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.779..221.779 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.513..90.529 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.768..0.768 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.609..0.679 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.236..20.236 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.730..10.759 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1200.665..1200.665 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.046..465.606 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.532..4.532 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.644..2.596 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.713..0.713 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.689..0.691 rows=4 loops=3)"
6273bf35acf9e65738b3ff0e1dd7b9cf164dfc7b68901e0d799e5341ec790515,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.172197341919,"duration: 111169.117 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=107730.392..107730.393 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=107726.380..111168.955 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=107674.720..107674.721 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=93142.547..106517.293 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=93137.219..101185.869 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=44591.186..84147.330 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=44589.899..78101.590 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=44589.219..72532.745 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44562.505..60896.628 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12760.151..26410.285 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.006..5813.803 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=998.317..998.318 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.978..116.950 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7273.652..7273.652 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.953..2678.150 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.281..26.282 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.660..13.411 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.649..0.649 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.636..0.637 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.246..1.246 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.011..1.121 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1177.023..1177.024 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.837..464.589 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.041..5.041 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.679 rows=10000 loops=3)"
37d9a26af79ea702038bb3a82c4beba93a31b05fc15dd8f3781a79d11be11523,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,125.28761100769,"duration: 125284.628 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14466588.70..14466588.71 rows=1 width=8) (actual time=120853.699..120853.699 rows=1 loops=1)
  ->  Gather  (cost=14466588.48..14466588.69 rows=2 width=8) (actual time=120848.321..125283.323 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14465588.48..14465588.49 rows=1 width=8) (actual time=120799.434..120799.434 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14104421.19 rows=144466917 width=0) (actual time=93856.526..119557.830 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12117692.08 rows=144466917 width=8) (actual time=93851.401..113410.784 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10129678.97 rows=144466917 width=8) (actual time=93828.389..104964.486 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7769602.00 rows=150000000 width=8) (actual time=75369.571..88540.674 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96734.63..3759830.63 rows=50000100 width=8) (actual time=9692.441..14820.750 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.342..5844.679 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.773..3849.348 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.770..1732.773 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.901..0.901 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.876..0.877 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.506..1.506 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.325..1.407 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1345.274..1345.274 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.711..549.630 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51308.595..51308.595 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.101..8114.562 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=271.746..271.746 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.106..122.011 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.690..22.690 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.523..11.447 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.836..4.836 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.528..2.573 rows=10000 loops=3)"
c563cc67852098c98b9407225929f03d113071715e0558529f6786ffe629302a,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,89.5986280441284,"duration: 89588.557 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8699547.31..8699547.32 rows=1 width=8) (actual time=85881.292..85881.293 rows=1 loops=1)
  ->  Gather  (cost=8699547.10..8699547.31 rows=2 width=8) (actual time=85877.291..89587.707 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8698547.10..8698547.11 rows=1 width=8) (actual time=85830.595..85830.595 rows=1 loops=3)
              ->  Hash Join  (cost=542542.35..8337379.80 rows=144466918 width=0) (actual time=66335.172..84623.794 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=542505.35..3220806.05 rows=24077820 width=8) (actual time=66334.462..79924.983 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=542489.10..2889719.78 rows=24077820 width=16) (actual time=66333.755..75258.956 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=445807.72..2282024.05 rows=24077820 width=24) (actual time=39383.713..54450.662 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12015.914..23652.408 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.086..5771.730 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=662.157..662.157 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                                  ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=27.654..496.258 rows=333333 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.651..354.296 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.753..107.878 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.525..21.525 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.766..11.143 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.862..4.863 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.816..2.749 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6790.788..6790.789 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.912..2482.092 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3899.981..3899.981 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.820..436.184 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.678..0.679 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.481..0.574 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.509..0.510 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.478..0.480 rows=4 loops=3)"
fb1c14f156eee00a1881d9d7bef1705126eb4839083ed93ae38cdd3fc3ad28b5,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,115.38885140419,"duration: 115383.676 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13125505.52..13125505.53 rows=1 width=8) (actual time=112089.665..112089.665 rows=1 loops=1)
  ->  Gather  (cost=13125505.30..13125505.51 rows=2 width=8) (actual time=112085.973..115383.559 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13124505.30..13124505.31 rows=1 width=8) (actual time=112029.489..112029.489 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12763338.01 rows=144466918 width=0) (actual time=103097.970..110817.980 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10205589.55 rows=144466918 width=8) (actual time=47771.719..94079.450 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..8219153.18 rows=144466918 width=16) (actual time=47770.784..87702.743 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434756.38..3102579.43 rows=24077820 width=24) (actual time=47770.331..82699.493 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47764.283..74963.957 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47740.745..63253.322 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25375.909..40289.401 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.761..6934.787 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6837.416..6837.417 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.893..2467.699 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=219.576..219.576 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.645..94.853 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.169..23.169 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.573..11.367 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.968..5.968 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.558..2.922 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.427..0.427 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.417..0.418 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.880..0.880 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.700..0.779 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1208.188..1208.188 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.164..486.829 rows=1666667 loops=3)"
809a0f1cf53f7c26284ca76f2755ccd91d1d085fe92aa432a63aed366f5e5d51,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,116.239619255066,"duration: 116236.690 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=113026.330..113026.331 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=113021.669..116236.051 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=112957.238..112957.238 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=84311.135..111442.552 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=84310.072..106294.179 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=84303.389..100472.300 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=84302.438..95207.720 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56204.368..72784.938 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11926.962..37432.118 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11902.947..25992.144 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.281..5949.892 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.117..240.118 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.366..106.140 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.664..23.664 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.779..12.135 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7266.256..7266.257 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.808..2666.786 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1927.047..1927.047 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.019..482.648 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.924 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.620..0.751 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.554..6.554 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.649..3.428 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.698 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.664..0.666 rows=4 loops=3)"
df8bac0b8d6b5bb7a08e2ac502b29916d61cbfb886b81b03705738c5d9d4584a,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,162.057901859283,"duration: 162055.699 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18439985.18..18439985.19 rows=1 width=8) (actual time=152531.138..152531.138 rows=1 loops=1)
  ->  Gather  (cost=18439984.97..18439985.18 rows=2 width=8) (actual time=152525.840..162055.454 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18438984.97..18438984.98 rows=1 width=8) (actual time=152468.855..152468.855 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18077817.68 rows=144466917 width=0) (actual time=117662.886..151013.986 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..16091088.57 rows=144466917 width=8) (actual time=117657.473..144572.432 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1304602.38..14104652.21 rows=144466917 width=16) (actual time=117656.735..139447.086 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..12116639.10 rows=144466917 width=16) (actual time=117629.772..129899.337 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=101781.234..111693.636 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=73334.516..91585.257 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.164..5317.006 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.907..2323.686 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.203..1.203 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.184..1.186 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53123.717..53123.718 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.166..8433.246 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1585.044..1585.045 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.967..490.755 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=253.864..253.864 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.049..109.514 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.613..26.613 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.455..13.399 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.691..0.691 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.486..0.570 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.970..4.970 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.697 rows=10000 loops=3)"
63e820d1fd67218f655ae25b8a6397d7a936b92142471c74a2368724cd0b0c68,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.504164457321,"duration: 112489.891 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108421.733..108421.733 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108418.030..112489.268 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=108367.442..108367.442 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99986.171..107162.426 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=58457.451..91523.149 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=58452.832..84593.478 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=58452.024..79481.602 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=58451.304..73973.043 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12334.254..39589.235 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12310.614..27454.155 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.715..6185.980 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=270.280..270.281 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.800..118.702 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.287..23.287 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.709..11.928 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7844.631..7844.631 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.807..2825.461 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.687..0.687 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.678..0.680 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.780..0.780 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.595..0.690 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.515..4.516 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.759..2.574 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1278.656..1278.656 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.929..526.018 rows=1666667 loops=3)"
66d8d654f7c854e3d3886394fdab82e70d1c5d50d73d4842616e4ad8a7a27cc7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.34073472023,"duration: 111337.957 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=107951.346..107951.346 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=107947.385..111337.204 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=107899.590..107899.591 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=73355.579..106403.365 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..17056868.61 rows=144466917 width=8) (actual time=73354.523..101044.183 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..15070139.50 rows=144466917 width=16) (actual time=73349.399..94959.947 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=73323.337..85562.567 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=57705.072..67532.469 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24169.374..46802.637 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24168.627..40193.173 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.986..6922.076 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6931.372..6931.372 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.594..2550.419 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.697 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.686..0.688 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1302.319..1302.319 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.897..501.435 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.609..227.609 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.393..104.840 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.728..25.728 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.632..12.803 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.989..4.989 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.699 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.575..0.693 rows=500 loops=3)"
abe4482a42ca0e7c73823786d3d929c8f5fef7cfafa1e09499d0e88bf7cb00c7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.459823846817,"duration: 111457.296 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=107774.191..107774.191 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=107770.341..111457.166 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=107717.069..107717.069 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=92686.020..106532.901 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=92680.446..101063.308 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=56125.499..82458.343 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=56124.508..76502.250 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56123.926..71078.346 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11799.111..38140.634 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11776.268..26574.744 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.160..5769.369 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.566..241.567 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.613..110.835 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.505..22.506 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.867..11.899 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7471.894..7471.894 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.872..2694.123 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.551..0.552 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.538..0.540 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.942..0.942 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.740..0.833 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2122.084..2122.084 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.932..516.502 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.273..5.274 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.500..2.778 rows=10000 loops=3)"
fad9351317d2580deff037458a8f1392a13f43c1bef6d8cea0d952363fd9615b,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.758647203445,"duration: 114756.471 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=110852.868..110852.868 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=110849.324..114755.960 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=110799.550..110799.550 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=90713.060..109479.520 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=90712.215..104720.117 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531437.75..3588243.48 rows=24077820 width=16) (actual time=90711.287..100017.073 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=56250.804..80683.234 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56245.285..72496.913 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11725.416..37747.319 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11703.804..26147.755 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.916..5801.276 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.279..235.280 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.626..106.156 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.166..21.167 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.758..11.173 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6978.320..6978.320 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2474.780 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.380..5.380 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.882..2.940 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1213.901..1213.901 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.971..495.793 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.907..0.907 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.670..0.775 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.630..0.630 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.607..0.609 rows=4 loops=3)"
4b4f3874a1fd4977982a098931426f9775a9f7f1bd690ade97b020b2ffb380be,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.788394927979,"duration: 112786.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109337.312..109337.313 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109333.460..112785.888 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109284.939..109284.940 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100546.819..108030.396 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=44714.261..91504.724 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=44708.968..83741.498 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=44708.317..78491.082 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=44685.568..67120.148 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44684.687..61113.004 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11887.383..25675.125 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.037..5887.882 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.073..243.074 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.012..111.936 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8261.436..8261.437 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.608..2696.366 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.850..0.850 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.660..0.745 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.425..22.426 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.570..11.758 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.622..0.622 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.613..0.614 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.189..5.189 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.001..3.034 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.641..1335.641 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.993..527.855 rows=1666667 loops=3)"
2e56872700bddc813f8f5cb77a6dcb948fc1704bd77c7d2311a4f08addbaa3e7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,115.656184196472,"duration: 115652.572 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=111883.501..111883.501 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=111878.590..115651.989 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=111824.395..111824.396 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=71228.966..110107.194 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=71223.666..103093.098 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=71222.886..98163.415 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=71222.351..92869.491 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=71196.697..83059.120 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43171.117..59976.683 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11863.004..25487.426 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.040..5919.953 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.641..243.644 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.806..110.122 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7633.791..7633.791 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.131..2621.449 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.196..1323.196 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.105..519.076 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.305..25.305 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.578..12.700 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.502..0.502 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.485..0.486 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.751..0.751 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.625 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.974..4.974 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.594..2.742 rows=10000 loops=3)"
a44630bc29da07d0477f5ee17e1dadc47b3fb4edbed11b124608e3fec168b5dd,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.32891702652,"duration: 114326.169 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=110305.103..110305.103 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=110301.533..114325.626 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=110246.976..110246.976 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=90485.470..108993.570 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=90484.394..104201.282 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531437.75..3588243.48 rows=24077820 width=16) (actual time=90483.489..99488.141 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55623.230..80468.863 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55618.827..72032.898 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11596.212..36906.263 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11572.834..25612.497 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.951..5747.873 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=279.315..279.316 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.808..108.245 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.934..22.934 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.772..12.190 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7964.778..7964.778 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.834..2673.839 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.304..4.304 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.742..2.472 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.869..1279.869 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.113..519.769 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.876..0.876 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.684..0.775 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.855..0.855 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.825..0.827 rows=4 loops=3)"
be7a2d2c93b56065047c7fba82c18be3f9a18f9280d82a7afa919655fd318bf5,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,108.533212661743,"duration: 108524.325 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=17082916.44..17082916.45 rows=1 width=8) (actual time=105449.259..105449.260 rows=1 loops=1)
  ->  Gather  (cost=17082916.23..17082916.44 rows=2 width=8) (actual time=105445.076..108523.672 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=17081916.23..17081916.24 rows=1 width=8) (actual time=105392.303..105392.303 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..16720748.94 rows=144466917 width=0) (actual time=96628.810..104177.254 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..14163000.49 rows=144466917 width=8) (actual time=57931.691..88587.131 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..12176271.38 rows=144466917 width=16) (actual time=57927.033..81561.773 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=432907.63..10188258.27 rows=144466917 width=16) (actual time=57904.715..71246.675 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=25355.263..51863.481 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25353.984..46471.591 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25353.026..40495.919 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.049..6998.024 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7846.563..7846.563 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.831..2542.821 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.925..0.925 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.715..0.817 rows=500 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.224..1.225 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.206..1.208 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.943..247.943 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.113..109.938 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.989..21.989 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.608..11.309 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.547..4.547 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.950..2.629 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1284.387..1284.388 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.902..496.780 rows=1666667 loops=3)"
148df2c959a8c8521383e2098ab43c5a2d02c263b4a520160ecaa6b0db8ac62c,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,116.016170024872,"duration: 116013.730 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12794654.86..12794654.87 rows=1 width=8) (actual time=111688.313..111688.313 rows=1 loops=1)
  ->  Gather  (cost=12794654.64..12794654.85 rows=2 width=8) (actual time=111684.602..116012.609 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12793654.64..12793654.65 rows=1 width=8) (actual time=111631.119..111631.119 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12432487.35 rows=144466918 width=0) (actual time=77906.372..110096.473 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10445758.23 rows=144466918 width=8) (actual time=77901.775..103600.543 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8457745.10 rows=144466918 width=8) (actual time=77878.710..94494.404 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=529552.00..3341171.35 rows=24077820 width=16) (actual time=77877.999..89887.341 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=53327.548..67245.050 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24899.531..46494.073 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24898.079..39944.210 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.825..7038.887 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7956.116..7956.117 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.964..2622.619 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.404..1.408 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.122..1.239 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=267.047..267.047 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.904..120.061 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.380..1280.380 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.816..516.298 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.672..0.672 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.652..0.654 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.667..22.667 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.537..11.454 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.295..4.295 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.358 rows=10000 loops=3)"
c51df208ba2c3bc00688f3b484040a9e1e18f2459765bd4262827cfd52d75741,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.676067113876,"duration: 112673.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12765088.18..12765088.19 rows=1 width=8) (actual time=108759.275..108759.275 rows=1 loops=1)
  ->  Gather  (cost=12765087.96..12765088.17 rows=2 width=8) (actual time=108751.402..112673.131 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12764087.96..12764087.97 rows=1 width=8) (actual time=108698.322..108698.323 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12402920.67 rows=144466918 width=0) (actual time=74628.635..107084.620 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10416191.55 rows=144466918 width=8) (actual time=74623.190..100611.902 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8428178.42 rows=144466918 width=8) (actual time=74599.894..91643.716 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=529552.00..3311604.67 rows=24077820 width=16) (actual time=74599.164..86908.298 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507832.00..2849633.34 rows=25000000 width=16) (actual time=58636.706..68704.908 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25437.722..48841.431 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25436.731..41705.275 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.911..6995.250 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7437.730..7437.730 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.709..2681.925 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.948..0.948 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.717..0.819 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1330.847..1330.848 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.982..497.588 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.254..229.254 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.856..108.669 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.695..0.696 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.678..0.679 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.982..22.982 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.468..11.622 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.134..5.134 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.455..2.736 rows=10000 loops=3)"
0d737d95439f58372e0372b057bbc9a4cca6c46283e59a19e32a6bfb1041244f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.84937286377,"duration: 111846.393 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=108048.820..108048.821 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=108043.857..111845.851 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=107990.974..107990.974 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=93691.286..106789.630 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..14247732.16 rows=144466918 width=8) (actual time=93690.257..101950.738 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..11407821.70 rows=144466918 width=16) (actual time=42555.798..84449.457 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..9421092.58 rows=144466918 width=24) (actual time=42551.447..76287.764 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42530.344..64630.340 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42529.466..59222.567 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11803.530..25552.521 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.188..5850.140 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=254.947..254.948 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.095..115.197 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6947.635..6947.635 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.733..2525.021 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.848..0.848 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.830..0.831 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.796..20.797 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.561..10.720 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.237..4.237 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.790..2.448 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.057..1304.057 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.947..565.323 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.822..0.822 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.538..0.665 rows=500 loops=3)"
d87ce7c2a97b0f422e860d3c309aff658db7e79ba0e3792ffe56bfa09d7e6025,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,108.274425983429,"duration: 108271.215 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=13238607.85..13238607.86 rows=1 width=8) (actual time=104521.844..104521.844 rows=1 loops=1)
  ->  Gather  (cost=13238607.63..13238607.84 rows=2 width=8) (actual time=104517.884..108271.064 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13237607.63..13237607.64 rows=1 width=8) (actual time=104463.173..104463.173 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12876440.34 rows=144466918 width=0) (actual time=88939.678..103138.098 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..10890003.96 rows=144466918 width=8) (actual time=88938.501..97897.886 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..8050093.51 rows=144466918 width=16) (actual time=60413.147..80492.235 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=434756.38..2933519.76 rows=24077820 width=24) (actual time=60412.278..74664.743 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=11347.845..43032.918 rows=20000000 loops=3)
                                            Hash Cond: (sub.category_id = cat.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11342.136..35733.443 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11318.708..25019.270 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.069..5607.182 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.626..221.626 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.545..100.474 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.956..22.957 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.596..11.727 rows=50000 loops=3)
                                            ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.567..5.568 rows=10000 loops=3)
                                                  Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                  ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.901..3.117 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6900.517..6900.517 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.708..2511.575 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.810..0.811 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.796..0.798 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.918..1318.918 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.035..559.670 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.916 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.604..0.751 rows=500 loops=3)"
1f9ff0d0d7483fa88b3b127dbf8560be20cd6664cca2a954429cc5c1ab674f85,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,99.4408171176911,"duration: 99438.141 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10797796.48..10797796.49 rows=1 width=8) (actual time=95968.891..95968.891 rows=1 loops=1)
  ->  Gather  (cost=10797796.26..10797796.47 rows=2 width=8) (actual time=95961.954..99437.637 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10796796.26..10796796.27 rows=1 width=8) (actual time=95910.078..95910.079 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10435628.97 rows=144466918 width=0) (actual time=54837.334..94243.092 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8448899.84 rows=144466918 width=8) (actual time=54831.203..87307.963 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3332326.09 rows=24077820 width=16) (actual time=54830.365..82911.751 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=721452.79..3001239.82 rows=24077820 width=24) (actual time=54829.386..77213.063 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=54804.284..67520.136 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=33592.922..47351.372 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.135..7014.493 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16672.559..16672.559 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7528.960..12383.674 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.718..2586.076 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1420.673..1420.674 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.001..549.955 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.179..247.179 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.927..108.920 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.689..24.689 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.728..12.975 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.959..0.959 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.733..0.845 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.806..0.806 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.785..0.786 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.778..5.778 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.740..3.090 rows=10000 loops=3)"
2f5d0c8289761f401118f7bc61058756fa169ac2e5902cff44431656fc523510,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.160712480545,"duration: 113158.716 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109730.667..109730.668 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109726.120..113158.054 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109672.903..109672.903 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100634.653..108374.528 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=44546.676..91997.412 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=44542.397..84101.048 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=44541.774..78772.192 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=44520.563..67176.828 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44519.601..61064.099 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12458.418..26031.408 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.155..6189.009 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.681..247.681 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.033..107.740 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7722.845..7722.845 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.618..2701.692 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.923 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.724..0.814 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.901..20.902 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.450..10.577 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.598..0.599 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.587..0.588 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.169..4.170 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.795..2.402 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1203.760..1203.760 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.875..483.646 rows=1666667 loops=3)"
c8cc7bfe87e48d73ed494a7374162f56bf6f94d849209d860b3eedd781febe0f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,157.024754524231,"duration: 157022.194 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=148347.816..148347.816 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=148343.073..157021.421 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=148292.308..148292.308 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=139396.263..147091.163 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=91787.481..130274.418 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1208230.00..13146716.94 rows=144466917 width=16) (actual time=91786.483..124438.047 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=91781.761..117171.862 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91759.302..106221.804 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69879.248..84947.914 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.349..4810.328 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.652..2087.053 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.645..0.646 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.631 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50621.458..50621.458 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.902..8259.038 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.396..229.397 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.662..99.848 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.105..22.105 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..11.278 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.600..4.600 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.437 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.959..0.960 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.732..0.830 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2178.598..2178.598 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..479.444 rows=1666667 loops=3)"
ca68cb416c534ff1d92af4ed1ca9904efa9f6c1abf8f1944c22e23bc49405894,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.882196187973,"duration: 114870.939 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16718367.71..16718367.72 rows=1 width=8) (actual time=110501.616..110501.616 rows=1 loops=1)
  ->  Gather  (cost=16718367.50..16718367.71 rows=2 width=8) (actual time=110496.511..114870.830 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16717367.50..16717367.51 rows=1 width=8) (actual time=110450.974..110450.974 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16356200.20 rows=144466918 width=0) (actual time=95761.012..109220.401 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..14369763.83 rows=144466918 width=8) (actual time=95760.007..104257.092 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..11529853.37 rows=144466918 width=16) (actual time=47385.533..86640.691 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..9543124.25 rows=144466918 width=24) (actual time=47381.269..78558.767 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7555111.13 rows=144466918 width=24) (actual time=47358.348..67614.283 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47357.266..62256.406 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25152.728..39897.285 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.556..7109.366 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7439.171..7439.171 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.755..2708.159 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.907..226.907 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.791..101.542 rows=333333 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.051..1.051 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.039..1.040 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.563..22.563 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.748..11.878 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.171..4.171 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.717..2.383 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1478.545..1478.545 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.813..499.729 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.798..0.798 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.526..0.649 rows=500 loops=3)"
dc2181098426812ebf520e9e658033d27d64cbbf25d00c88ed1b1adbb3a2b4e0,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.942742824554,"duration: 112940.318 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109471.320..109471.320 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109467.222..112939.883 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109414.611..109414.611 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100795.901..108168.723 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=43003.099..91960.384 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=42998.202..83824.091 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=42997.761..78890.963 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42997.152..72679.835 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42974.233..60343.081 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12021.704..25548.950 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..5920.577 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.232..241.233 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.820..105.352 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7445.877..7445.877 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.839..2724.377 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.603..22.603 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.409..11.549 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.585..0.586 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.387..0.475 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.412..0.412 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.402..0.403 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.784..4.784 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.492 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1186.629..1186.629 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.050..489.337 rows=1666667 loops=3)"
1e01855d2b6b20c3e30faee7b29ea75724ad9a734b91a6cc0a34d8943ab44fbf,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,117.338158130646,"duration: 117335.773 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=112545.872..112545.872 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=112542.449..117335.648 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=112484.037..112484.037 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=103335.926..111261.039 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=47227.468..93602.291 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..9874210.53 rows=144466918 width=16) (actual time=47223.230..85760.874 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=47222.599..80164.988 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47221.989..74477.245 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47201.057..62763.865 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24899.882..39727.526 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.961..7105.451 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7111.275..7111.275 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.000..2612.786 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.886..226.886 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.739..101.409 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.651..20.651 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.416..10.675 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.590..0.591 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.582..0.583 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.608..0.609 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.439..0.516 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.144..4.144 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.702..2.354 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.999..1236.999 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.060..498.618 rows=1666667 loops=3)"
237c60922a9bc8d23372372fcbaec345b1ec4124c870225c4ad21cecb90ecbb6,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.164611816406,"duration: 113162.333 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109950.860..109950.860 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109945.952..113161.646 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109890.123..109890.124 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=101086.180..108625.567 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=42623.858..91086.883 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..8097121.51 rows=144466918 width=16) (actual time=42622.835..84528.096 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=42622.254..79590.387 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42617.832..71774.241 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42596.007..59588.441 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11827.336..25287.192 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.787..5839.141 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.342..237.343 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.814..106.163 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7579.584..7579.585 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.806..2833.820 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.533..21.534 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..11.127 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.335..4.336 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.530..2.353 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.562..0.562 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.548..0.549 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.947..0.947 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.752..0.840 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1234.760..1234.760 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.751..504.368 rows=1666667 loops=3)"
4d4afde41b8d1fafd5254433c61dd828ef9146f691abd37a965f008e8b23189d,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,94.5863273143768,"duration: 94583.881 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16229817.41..16229817.42 rows=1 width=8) (actual time=91126.508..91126.508 rows=1 loops=1)
  ->  Gather  (cost=16229817.19..16229817.40 rows=2 width=8) (actual time=91118.225..94583.364 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16228817.19..16228817.20 rows=1 width=8) (actual time=91035.502..91035.502 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..15867649.90 rows=144466917 width=0) (actual time=65260.504..89792.641 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..13880920.79 rows=144466917 width=8) (actual time=65255.989..83803.737 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=719913.04..11892907.68 rows=144466917 width=8) (actual time=65232.534..75629.324 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=698193.04..9532830.71 rows=150000000 width=8) (actual time=34569.087..59568.233 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=34568.023..53898.208 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34567.307..48624.590 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.102..6844.577 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=18176.489..18176.490 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8552.857..13612.501 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.290..3345.170 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1370.794..1370.794 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.049..510.309 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.686..0.687 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.679..0.680 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.032..1.032 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.815..0.915 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.251..239.251 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.946..107.459 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.143..23.143 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.553..11.810 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.229..4.229 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.553..2.429 rows=10000 loops=3)"
687b2d15bdf203624dbde787a12c8cc7f7d6d15b7eb829d7b57f05ada8710a34,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.398421287537,"duration: 114395.924 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=110424.010..110424.010 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=110420.473..114395.289 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=110373.610..110373.610 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=82988.563..108887.955 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..10407195.33 rows=144466918 width=8) (actual time=82987.524..103593.413 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=82982.492..98038.120 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=82981.940..93333.723 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56220.059..72442.381 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12294.386..38618.575 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12272.754..26902.105 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.903..6015.290 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.221..228.222 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.651..101.546 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.276..21.276 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.713..11.265 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7213.068..7213.068 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.734..2656.231 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.008..1259.008 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.953..510.223 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.526..0.526 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.507..0.508 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.935..4.935 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.629 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.822..0.822 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.558..0.681 rows=500 loops=3)"
c76c5f1c985c47064eb66f16bc405e6bcf932fe574831822a35403c6ad1a95fb,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,157.895568847656,"duration: 157894.146 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=148247.805..148247.805 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=148243.734..157894.007 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=148183.930..148183.930 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=139173.788..146968.705 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=92745.544..131134.909 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=92739.029..123827.682 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=1206344.25..11158411.08 rows=144466917 width=16) (actual time=92716.112..113240.995 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=92714.469..107367.566 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71310.067..85935.761 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.099..4748.049 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.835..2063.803 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.204..1.205 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.178..1.181 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52366.421..52366.421 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.735..8094.994 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.990..245.990 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.576..100.268 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.608..1.609 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.421..1.503 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.498..22.498 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.753..11.634 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.358..6.358 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.043..3.558 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1241.436..1241.436 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.997..474.989 rows=1666667 loops=3)"
15aad04da9a6cb319ace34d9bace8ce2a22816b9e92f918454e64e36405a9055,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,99.4810190200806,"duration: 99471.996 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9119758.17..9119758.18 rows=1 width=8) (actual time=95648.357..95648.357 rows=1 loops=1)
  ->  Gather  (cost=9119757.95..9119758.16 rows=2 width=8) (actual time=95644.312..99471.060 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9118757.95..9118757.96 rows=1 width=8) (actual time=95560.654..95560.654 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8757590.66 rows=144466918 width=0) (actual time=68364.708..94106.353 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=537183.18..3641016.91 rows=24077820 width=8) (actual time=68363.925..89113.325 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=537166.93..3309930.63 rows=24077820 width=16) (actual time=68363.172..84312.353 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=536857.93..2978551.61 rows=24077820 width=24) (actual time=68358.641..78473.899 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42123.254..57579.034 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11655.372..24628.845 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.701..5535.202 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=782.553..782.553 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.809..305.369 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.289..92.827 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.148..22.149 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.773..11.720 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7505.848..7505.848 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.561..2739.485 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1475.900..1475.900 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.819..511.545 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.420..4.420 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..2.442 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.729..0.729 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.503..0.616 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.540..0.540 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.515..0.517 rows=4 loops=3)"
5a931b4ef37cd5a0ab698ae3b6f14ee4a9897840a3d56a3d78e4c3ce1443b3b7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.831794977188,"duration: 114829.621 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=111174.732..111174.732 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=111169.263..114829.239 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=111119.000..111119.001 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=81798.113..109549.709 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=81797.350..104284.647 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3635271.48 rows=24077820 width=16) (actual time=81796.557..99141.062 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=81791.259..92922.831 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55755.802..71855.640 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12647.356..38246.718 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12625.165..26846.106 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..6058.367 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=514.898..514.898 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.608..103.847 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.827..21.827 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.659..11.184 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7547.603..7547.604 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.145..2612.211 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1299.652..1299.652 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.794..479.373 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.213..5.213 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.522..2.805 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.766..0.766 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.511..0.625 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.541..0.541 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.512..0.514 rows=4 loops=3)"
57a1b21f7b815ef719e517fce3c648748484dffb16eaf1e786c6b922f664af9f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,92.1004514694214,"duration: 92097.835 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10499930.01..10499930.02 rows=1 width=8) (actual time=88870.550..88870.550 rows=1 loops=1)
  ->  Gather  (cost=10499929.80..10499930.01 rows=2 width=8) (actual time=88864.747..92097.312 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10498929.80..10498929.81 rows=1 width=8) (actual time=88811.509..88811.509 rows=1 loops=3)
              ->  Hash Join  (cost=811984.61..10137762.50 rows=144466918 width=0) (actual time=55790.711..87377.392 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=811675.61..8151033.38 rows=144466918 width=8) (actual time=55785.914..81135.103 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=811638.61..3034459.63 rows=24077820 width=16) (actual time=55785.337..76557.814 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=810045.61..2701796.61 rows=24077820 width=16) (actual time=55762.064..67335.015 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=35716.604..49141.157 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.858..7333.037 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=18272.199..18272.200 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9115.134..13656.476 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.560..3973.181 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.900..1619.971 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.618..0.618 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.444..0.523 rows=500 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2508.348..2508.348 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.960..499.948 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.042..225.042 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.915..99.377 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.936..22.936 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.526..11.654 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.550..0.550 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.532..0.533 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.516..4.516 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.763..2.636 rows=10000 loops=3)"
6349701bca9130ffd8fe7cdd67e6b5d229edd7330e07611b2f228a32dd739175,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,108.93790769577,"duration: 108935.044 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11188564.96..11188564.97 rows=1 width=8) (actual time=105347.502..105347.502 rows=1 loops=1)
  ->  Gather  (cost=11188564.74..11188564.95 rows=2 width=8) (actual time=105343.915..108934.867 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11187564.74..11187564.75 rows=1 width=8) (actual time=105284.548..105284.549 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=637936.57..10826397.45 rows=144466918 width=0) (actual time=95872.278..103975.735 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=541255.19..8268648.99 rows=144466918 width=8) (actual time=48694.282..87491.362 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=541218.19..3152075.24 rows=24077820 width=16) (actual time=48693.372..82054.511 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=540909.19..2820696.22 rows=24077820 width=24) (actual time=48688.554..74544.342 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=48666.839..63218.889 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26806.997..41066.633 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.966..6862.096 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9434.595..9434.596 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.861..4480.898 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.842..1899.720 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.982..0.982 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.779..0.866 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=318.114..318.115 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.573..104.345 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.428..21.429 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.616..10.706 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.734..4.735 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.587..2.524 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.842..0.842 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.828..0.830 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1234.332..1234.332 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.026..484.767 rows=1666667 loops=3)"
a61526b6ce13bd2bc78e6a505639f90d87bb6c85a9bfe1110ec7d659a8df00e6,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,93.4391782283783,"duration: 93435.831 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8844579.92..8844579.93 rows=1 width=8) (actual time=90457.221..90457.221 rows=1 loops=1)
  ->  Gather  (cost=8844579.70..8844579.91 rows=2 width=8) (actual time=90452.239..93435.282 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8843579.70..8843579.71 rows=1 width=8) (actual time=90403.316..90403.316 rows=1 loops=3)
              ->  Hash Join  (cost=811984.61..8482412.41 rows=144466918 width=0) (actual time=54212.031..88829.031 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=811947.61..3365838.66 rows=24077820 width=8) (actual time=54211.223..83541.553 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=811638.61..3034459.63 rows=24077820 width=16) (actual time=54206.369..76984.988 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=810045.61..2701796.61 rows=24077820 width=16) (actual time=54184.760..66925.116 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=34965.051..48224.623 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.908..7099.365 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=17325.680..17325.680 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8805.118..13266.243 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.879..3895.372 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.921..1588.859 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.904..0.905 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.617..0.737 rows=500 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1345.891..1345.891 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.141..485.546 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.181..228.181 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.884..97.413 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.280..21.280 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..10.936 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.758..4.758 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.580 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.512..0.512 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.483..0.485 rows=4 loops=3)"
9eb3e63a1e92c0b585f15ae610dcf0633c9a25c90f5f7b0f688429330a30c1fe,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.186400651932,"duration: 114183.803 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=110038.127..110038.127 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=110034.073..114183.297 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=109981.718..109981.718 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=93795.356..108694.733 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=93790.706..102820.365 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=42863.618..84131.118 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..9421092.58 rows=144466918 width=24) (actual time=42862.553..77264.553 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42837.593..65585.889 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42836.455..59943.117 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11647.076..24733.259 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.036..5783.849 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.526..237.530 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.943..104.191 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7341.675..7341.676 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.609..2489.741 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.106..1.106 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.092..1.093 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.667..24.668 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.494..12.454 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.022..1.022 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.789..0.898 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1189.647..1189.647 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.868..465.632 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.368..4.368 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.604..2.481 rows=10000 loops=3)"
9c7df3c8ec74a1d07a83ba47a7e7f962e6d94041e2afd858b1286fd6220e8bd9,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.926347494125,"duration: 113923.558 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13371519.49..13371519.50 rows=1 width=8) (actual time=110305.447..110305.447 rows=1 loops=1)
  ->  Gather  (cost=13371519.28..13371519.49 rows=2 width=8) (actual time=110303.277..113923.419 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13370519.28..13370519.29 rows=1 width=8) (actual time=110241.716..110241.716 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..13009351.98 rows=144466918 width=0) (actual time=93216.002..108924.236 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..11022622.86 rows=144466918 width=8) (actual time=93210.579..102821.327 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..8182712.40 rows=144466918 width=16) (actual time=53462.471..84599.648 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..3066138.65 rows=24077820 width=24) (actual time=53461.678..78346.925 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=53439.541..67457.630 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24366.394..45655.632 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24365.405..39194.550 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.954..7107.555 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6817.570..6817.573 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.712..2498.606 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.944..0.944 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.773..0.851 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.689..227.689 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.601..100.912 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.870..21.870 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.464..11.070 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.752..0.752 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.735..0.737 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1164.468..1164.468 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.780..467.244 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.095..5.096 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.485..2.731 rows=10000 loops=3)"
96dd2fc20d87ce3c7e31876dbb04415e53874f389de23bb5f167aa518fd04d94,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,107.983098506927,"duration: 107975.073 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19188584.37..19188584.38 rows=1 width=8) (actual time=104531.916..104531.916 rows=1 loops=1)
  ->  Gather  (cost=19188584.15..19188584.36 rows=2 width=8) (actual time=104527.171..107974.835 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19187584.15..19187584.16 rows=1 width=8) (actual time=104480.371..104480.372 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18826416.86 rows=144466917 width=0) (actual time=79804.949..103313.725 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..16839687.75 rows=144466917 width=8) (actual time=79800.074..97579.195 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..14851674.64 rows=144466917 width=8) (actual time=79776.457..89837.345 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=507869.00..12491597.67 rows=150000000 width=8) (actual time=59115.908..74705.864 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=59114.767..69459.955 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=25165.197..48775.704 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25164.353..41897.586 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.005..7173.164 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8049.993..8049.994 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.869..2616.290 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.798..0.799 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.781..0.783 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1414.857..1414.857 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..521.223 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.105..1.105 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.885..0.976 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.575..237.575 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.947..104.563 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.290..23.290 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.622..11.832 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.591..4.591 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..2.511 rows=10000 loops=3)"
37d9a26af79ea702038bb3a82c4beba93a31b05fc15dd8f3781a79d11be11523,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,130.455079555511,"duration: 130451.555 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14466588.70..14466588.71 rows=1 width=8) (actual time=123004.847..123004.847 rows=1 loops=1)
  ->  Gather  (cost=14466588.48..14466588.69 rows=2 width=8) (actual time=122999.856..130450.980 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14465588.48..14465588.49 rows=1 width=8) (actual time=122946.089..122946.089 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14104421.19 rows=144466917 width=0) (actual time=94760.920..121668.819 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12117692.08 rows=144466917 width=8) (actual time=94756.171..115237.144 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10129678.97 rows=144466917 width=8) (actual time=94731.417..106397.997 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7769602.00 rows=150000000 width=8) (actual time=76682.717..89533.953 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96734.63..3759830.63 rows=50000100 width=8) (actual time=9934.860..14370.354 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=2.924..6158.476 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.410..4047.830 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.738..1803.007 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.611..0.612 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.599..0.600 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.478..1.478 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.305..1.381 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1261.187..1261.187 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.168..508.596 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52419.733..52419.734 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.660..8028.347 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.981..247.981 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..106.074 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.369..24.369 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..11.907 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.424..4.424 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.517..2.399 rows=10000 loops=3)"
2a2e6d51369e6e8f98d976d24266a26b82c68135f6596926f2594cb606000dc8,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.314197301865,"duration: 114300.982 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16843623.15..16843623.16 rows=1 width=8) (actual time=110508.277..110508.278 rows=1 loops=1)
  ->  Gather  (cost=16843622.93..16843623.14 rows=2 width=8) (actual time=110504.075..114300.213 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16842622.93..16842622.94 rows=1 width=8) (actual time=110455.091..110455.091 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16481455.64 rows=144466917 width=0) (actual time=75671.372..108973.237 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14494726.53 rows=144466917 width=8) (actual time=75666.782..102484.560 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..12508290.17 rows=144466917 width=16) (actual time=75666.029..97417.073 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10520277.06 rows=144466917 width=16) (actual time=75640.645..87916.948 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=507852.75..7867232.09 rows=150000000 width=16) (actual time=53566.810..69872.928 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=53565.861..64688.834 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25454.093..41759.167 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.895..7058.131 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7662.959..7662.960 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.219..2749.413 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1569.242..1569.242 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.856..506.117 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.911..0.911 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.890..0.892 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=329.217..329.218 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.586..131.377 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.104..25.104 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.580..12.884 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.735..0.735 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.544..0.631 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.307..4.307 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.638..2.496 rows=10000 loops=3)"
53461a3b61532a275d5191c3a4167e8abd52e9e43d7e19e229776c4c7f7e1ce9,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,108.705956220627,"duration: 108702.906 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=104567.676..104567.676 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=104563.685..108702.330 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=104513.367..104513.367 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=95789.421..103237.372 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=54800.275..87876.844 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=54799.284..82096.569 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=54795.162..75807.168 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=54794.674..70290.322 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11739.889..36783.228 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11713.767..25598.823 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.136..5802.072 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.232..243.232 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.855..106.539 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.778..25.778 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.712..12.613 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7223.775..7223.775 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.616..2591.566 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.461..0.462 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.450..0.452 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.035..4.035 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.518..2.199 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.951..0.951 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.711..0.808 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1243.236..1243.237 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.936..483.618 rows=1666667 loops=3)"
39b4ca6710fdc57478bf890b0b7625268def7725b9c9af48ad6b0dd1f91b8321,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,99.4075081348419,"duration: 99403.039 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=95784.579..95784.579 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=95781.129..99402.391 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=95728.410..95728.410 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=81486.696..94504.773 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537203.93..10611691.11 rows=144466918 width=8) (actual time=81485.592..89674.709 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440522.55..7771780.66 rows=144466918 width=16) (actual time=44251.992..72612.172 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440485.55..2655206.91 rows=24077820 width=24) (actual time=44251.141..66973.109 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44245.986..59818.540 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12989.591..26618.462 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.969..6794.423 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=416.874..416.874 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.335..289.468 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.029..91.404 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.944..21.945 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.580..11.255 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7286.189..7286.190 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.718..2587.285 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.064..5.065 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.791..2.783 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.797..0.807 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.783..0.786 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1243.702..1243.702 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.082..488.990 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.852..0.852 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.609..0.721 rows=500 loops=3)"
6ec813d0971801f7946a429064fbd49f46fe1bc46ab84aae6844d63f13723b96,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,153.794629096985,"duration: 153792.054 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18223097.07..18223097.08 rows=1 width=8) (actual time=144637.794..144637.795 rows=1 loops=1)
  ->  Gather  (cost=18223096.86..18223097.07 rows=2 width=8) (actual time=144633.758..153791.458 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18222096.86..18222096.87 rows=1 width=8) (actual time=144577.438..144577.438 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17860929.57 rows=144466917 width=0) (actual time=117155.686..143312.923 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..15874200.46 rows=144466917 width=8) (actual time=117149.650..137020.529 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..13886187.35 rows=144466917 width=8) (actual time=117116.290..128379.559 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=1281305.63..11526110.38 rows=150000000 width=8) (actual time=97024.324..112056.205 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=97023.369..106804.128 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71488.177..87069.879 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.068..4782.863 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.893..2092.328 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.113..1.114 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.085..1.090 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52085.630..52085.630 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.641..9100.871 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2388.297..2388.298 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..496.210 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.916 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.754..0.829 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=270.823..270.823 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.199..122.089 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.016..33.016 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.561..16.670 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.615..5.615 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.620..3.071 rows=10000 loops=3)"
39ef60827c73007ce0b6232372754ae2277edef989d2783b612e7246f39321b3,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,103.240973711014,"duration: 103228.834 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=99184.370..99184.370 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=99179.825..103228.701 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=99126.845..99126.846 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=77030.826..97831.070 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..12548910.46 rows=144466918 width=8) (actual time=77024.785..91778.497 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=77023.888..86816.830 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=44799.885..67056.069 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44799.021..60451.961 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13775.115..26533.232 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.946..7395.402 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=432.272..432.272 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.234..299.285 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.904..97.151 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.032..22.033 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.502..11.418 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7390.259..7390.259 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.401..2598.776 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.823..0.823 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.803..0.805 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.955..1226.955 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.881..487.897 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.874..0.874 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.618..0.738 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.632..5.632 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.945 rows=10000 loops=3)"
30645911a20499818f593aec78ea9c2048ae1e4dda465ee9f5099b8808091e0c,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,101.904955387115,"duration: 101902.339 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9072730.17..9072730.18 rows=1 width=8) (actual time=98075.125..98075.125 rows=1 loops=1)
  ->  Gather  (cost=9072729.95..9072730.16 rows=2 width=8) (actual time=98071.001..101901.749 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9071729.95..9071729.96 rows=1 width=8) (actual time=98007.408..98007.409 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8710562.66 rows=144466918 width=0) (actual time=76810.685..96769.079 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=537183.18..3593988.91 rows=24077820 width=8) (actual time=76809.357..91944.598 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=536874.18..3262609.88 rows=24077820 width=16) (actual time=76801.945..86369.319 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=42874.085..66164.436 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42872.921..58982.255 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12423.322..25309.364 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..6139.033 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=440.053..440.053 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.786..307.934 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.992..96.443 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.455..22.456 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.605..11.487 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7648.198..7648.199 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.897..2808.941 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.117..1.117 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.936..1.018 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.322..1238.322 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.414..488.164 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.275..7.275 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.811..3.839 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.885..0.885 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.716..0.719 rows=4 loops=3)"
8db733a21575f9740925084c772264ff311cf7067f836c03ea52ef2b687c2324,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.231926202774,"duration: 114228.847 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15026869.59..15026869.60 rows=1 width=8) (actual time=110373.404..110373.404 rows=1 loops=1)
  ->  Gather  (cost=15026869.37..15026869.58 rows=2 width=8) (actual time=110368.474..114227.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15025869.37..15025869.38 rows=1 width=8) (actual time=110315.829..110315.829 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14664702.08 rows=144466918 width=0) (actual time=94445.726..109071.154 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12677972.96 rows=144466918 width=8) (actual time=94440.563..103320.595 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9838062.50 rows=144466918 width=16) (actual time=54823.924..85754.775 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..7850049.38 rows=144466918 width=16) (actual time=54801.143..74548.717 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=54800.467..69198.949 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=26005.503..47898.764 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26004.527..41274.432 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.147..7409.201 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8202.058..8202.058 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.703..2720.779 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.927..0.927 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.723..0.817 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=268.989..268.990 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.570..109.050 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.631..0.631 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.621..0.622 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.439..22.439 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.871..11.786 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.955..1255.956 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.143..486.535 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.861..4.862 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.798..2.744 rows=10000 loops=3)"
055d7bdcb4358271c5bc8fa596973367d6afe2b5922eeb4c57984125326f6896,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,114.228091716766,"duration: 114224.639 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=110216.500..110216.500 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=110212.637..114224.121 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=110156.966..110156.966 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=94401.770..108885.767 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=94397.034..103154.025 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=45150.796..84932.657 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=45123.627..72919.325 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=45122.438..67523.551 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=45121.727..61700.680 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11395.897..25452.422 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.064..5777.475 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.200..234.201 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.879..104.891 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7932.789..7932.789 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.888..2683.485 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.682..0.682 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.667..0.669 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.148..1.148 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.828..0.977 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.832..26.832 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.640..13.243 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1201.009..1201.009 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.786..473.032 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.446..4.446 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.544..2.459 rows=10000 loops=3)"
53461a3b61532a275d5191c3a4167e8abd52e9e43d7e19e229776c4c7f7e1ce9,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,109.492675065994,"duration: 109489.512 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=105740.950..105740.951 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=105737.076..109488.846 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=105683.296..105683.296 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=97389.914..104500.736 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=54439.685..88630.565 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=54438.384..82635.526 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=54432.923..76066.041 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=54432.116..70398.730 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11949.661..36610.295 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11929.586..25625.655 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.080..5971.961 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=206.996..206.997 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.648..92.166 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=19.725..19.725 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..10.379 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7003.835..7003.835 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.762..2557.539 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.770..0.770 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.756..0.757 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.357..5.357 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.763..2.954 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.244..1.244 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.016..1.118 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.455..1226.455 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.018..496.137 rows=1666667 loops=3)"
a7100e0e8c7a271f399a990e5ed73fa9f8d2725e87e5069c66145a53ce252105,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,156.638083934784,"duration: 156635.774 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=147596.994..147596.995 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=147592.710..156635.530 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=147500.166..147500.167 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=137989.166..146195.940 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=91949.149..129999.439 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=91943.737..122786.415 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=1206344.25..11158411.08 rows=144466917 width=16) (actual time=91921.176..112321.086 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91920.212..106484.798 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69991.646..85016.546 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.174..4906.461 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.922..2128.830 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.179..1.179 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.163..1.165 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51047.979..51047.979 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.011..8210.745 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.542..231.542 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.821..102.353 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.931..0.931 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.757..0.835 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.215..22.215 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..11.701 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.303..5.304 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.865..2.939 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1205.266..1205.266 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.984..489.883 rows=1666667 loops=3)"
dadc1385c30de63bd4c1861f9af159b964928c4e701cc94e16f34228c9ade0bd,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,102.226700305939,"duration: 102218.527 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9208945.55..9208945.56 rows=1 width=8) (actual time=98479.282..98479.282 rows=1 loops=1)
  ->  Gather  (cost=9208945.33..9208945.54 rows=2 width=8) (actual time=98473.559..102218.326 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9207945.33..9207945.34 rows=1 width=8) (actual time=98422.974..98422.974 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8846778.04 rows=144466918 width=0) (actual time=65711.623..96981.229 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3730204.29 rows=24077820 width=8) (actual time=65710.685..92156.123 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3398825.26 rows=24077820 width=16) (actual time=65706.055..86195.128 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3066162.24 rows=24077820 width=16) (actual time=65678.775..77072.456 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=49879.714..59938.993 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25029.699..40327.093 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.392..6955.377 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8345.213..8345.213 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.035..4176.921 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.153..1761.639 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.845..0.846 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.671..0.746 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1324.867..1324.867 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.025..482.194 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=216.814..216.814 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.030..98.536 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.884..26.884 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..13.238 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.511..4.511 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.662..2.471 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.712..0.712 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.681..0.683 rows=4 loops=3)"
753c4b54a13bb66fa788c30dfd513263d388cdec76a7a2f1581091b9feaa22e8,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,128.514479875565,"duration: 128512.479 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13121099.68..13121099.69 rows=1 width=8) (actual time=121684.858..121684.859 rows=1 loops=1)
  ->  Gather  (cost=13121099.46..13121099.67 rows=2 width=8) (actual time=121678.357..128511.940 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13120099.46..13120099.47 rows=1 width=8) (actual time=121628.633..121628.634 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..12758932.17 rows=144466917 width=0) (actual time=94859.491..120398.314 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..10772203.06 rows=144466917 width=8) (actual time=94853.609..114237.881 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..8784189.95 rows=144466917 width=8) (actual time=94820.441..105842.995 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=76762.263..89700.515 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8865.463..15702.955 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8863.252..13898.160 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.712..4281.138 rows=6666667 loops=3)
                                                        Hash Cond: (ord.discount_id = dis.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.782..1734.162 rows=6666667 loops=3)
                                                        ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.862..0.866 rows=500 loops=3)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                              ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.664..0.761 rows=500 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1370.699..1370.700 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.087..491.824 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.117..2.117 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.096..2.098 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51373.098..51373.098 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.696..8199.484 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.716..231.716 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.320..102.634 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.697..32.697 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.687..15.164 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.441..5.441 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.648..2.986 rows=10000 loops=3)"
4fb83664ef3e3b0cfb9dbe50ad36c1a985928bce8eac6871fd866e2238d8041d,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,111.293873071671,"duration: 111280.191 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108051.549..108051.556 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108047.163..111279.418 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=107996.190..107996.191 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99719.488..106765.165 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=42485.324..89833.372 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=42484.285..83529.632 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42480.113..76708.431 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42479.494..71184.960 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42456.893..59178.425 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11745.451..25316.511 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.924..5861.709 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.896..236.896 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.749..104.254 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7195.971..7195.971 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.324..2577.114 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.283..22.284 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.554..11.384 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.592..0.592 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.583..0.584 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.088..4.088 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.278 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.002..1.003 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.820..0.901 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2512.104..2512.104 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.873..501.731 rows=1666667 loops=3)"
ded1ac11045361aa3ecfc6df2bf3a91a70f87f8fb38e934e547d024f24322728,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,101.21050786972,"duration: 101207.825 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=97699.793..97699.793 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=97695.162..101207.667 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=97636.066..97636.067 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=76464.120..96412.372 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..12548910.46 rows=144466918 width=8) (actual time=76459.398..90606.254 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=76458.636..85868.081 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=43932.993..66186.967 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=43932.217..59635.062 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11851.456..25536.100 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.135..5796.037 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=438.666..438.666 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=27.498..303.050 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..97.478 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.347..26.347 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.510..13.081 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7877.191..7877.191 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.845..2633.764 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.730..0.730 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.703..0.706 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1291.682..1291.682 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..513.442 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.742..0.742 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.508..0.607 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.434..4.434 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.534..2.448 rows=10000 loops=3)"
0e14a9513cbeb5f88ac56129430874660c8f4de389d03244740feeff18fea48f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,109.242608785629,"duration: 109239.299 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9238512.23..9238512.24 rows=1 width=8) (actual time=104680.110..104680.110 rows=1 loops=1)
  ->  Gather  (cost=9238512.01..9238512.22 rows=2 width=8) (actual time=104677.191..109238.119 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9237512.01..9237512.02 rows=1 width=8) (actual time=104587.994..104587.994 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8876344.72 rows=144466918 width=0) (actual time=71193.610..103109.533 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3759770.97 rows=24077820 width=8) (actual time=71192.836..98118.103 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=71187.015..91879.112 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3095728.92 rows=24077820 width=16) (actual time=71160.221..82399.654 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=47400.632..61224.961 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25847.712..40154.268 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.801..6772.136 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8591.078..8591.079 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.149..4328.355 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.951..1830.266 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.158..1.158 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.924..1.021 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.951..249.951 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.873..106.666 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1900.815..1900.815 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.271..469.952 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.472..26.472 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..13.354 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.709..5.709 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..3.443 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.543..0.543 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.516..0.518 rows=4 loops=3)"
8f39d9a06fe46e0cfdc0dbaa744fb22144f7c135c8d9e9d710cb5716611dfa80,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.987496852875,"duration: 112984.640 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19300718.55..19300718.56 rows=1 width=8) (actual time=109080.634..109080.634 rows=1 loops=1)
  ->  Gather  (cost=19300718.34..19300718.55 rows=2 width=8) (actual time=109076.819..112984.538 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19299718.34..19299718.35 rows=1 width=8) (actual time=108986.380..108986.380 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18938551.05 rows=144466917 width=0) (actual time=93307.410..107795.891 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..16951821.94 rows=144466917 width=8) (actual time=93301.895..102289.124 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..14111911.49 rows=144466917 width=16) (actual time=53666.187..84686.377 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..12123898.38 rows=144466917 width=16) (actual time=53645.060..73679.733 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=432891.38..10137462.02 rows=144466917 width=24) (actual time=53644.207..67964.414 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24873.258..46609.668 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24872.400..40356.703 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.774..7030.049 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6998.723..6998.723 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.899..2551.441 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.812..0.812 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.795..0.796 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.126..232.126 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.723..105.029 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.817..0.817 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.631..0.715 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.813..20.813 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.570..10.684 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1157.093..1157.093 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.070..479.279 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.101..5.101 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.710..2.891 rows=10000 loops=3)"
10983bc69f48731ddf1388566edcd168aa7af5dcd3e52d12f6c890ca86f0a95d,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,109.21356344223,"duration: 109210.843 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=105653.347..105653.347 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=105648.393..109210.491 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=105598.166..105598.166 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=74424.189..104138.015 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14529601.41 rows=144466918 width=8) (actual time=74419.062..98036.478 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..12541588.29 rows=144466918 width=8) (actual time=74395.534..89631.723 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=529572.75..10555151.91 rows=144466918 width=16) (actual time=74394.659..84904.803 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42690.825..64404.576 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42690.039..57939.068 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12311.436..25622.228 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.008..5882.567 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.632..249.633 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.141..112.302 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7248.941..7248.941 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.791..2566.429 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.739..0.740 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.719..0.720 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1176.532..1176.532 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.958..465.330 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.834..0.834 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.629..0.736 rows=500 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.202..23.202 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.600..11.907 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.839..4.840 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.518..2.613 rows=10000 loops=3)"
cd4b042e5ef45d3f36b98f1ffd755ad84371ea1c6cbbc7d79e3e177cc3721f33,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.726698875427,"duration: 113720.747 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=110320.511..110320.512 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=110315.367..113720.127 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=110265.931..110265.931 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=70525.955..108504.449 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=70519.951..101330.366 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8418889.46 rows=144466918 width=8) (actual time=70491.338..92362.918 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=529552.00..3302315.71 rows=24077820 width=16) (actual time=70490.579..87875.899 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=70489.703..82584.431 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43749.357..60153.351 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11856.755..25588.342 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.814..5870.680 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.791..243.791 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.014..112.038 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7317.799..7317.799 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.801..2505.179 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.071..1236.072 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.850..498.995 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.827..0.827 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.584..0.679 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.719..0.719 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.707..0.708 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.220..28.220 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.687..14.079 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.654..5.654 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.521..2.934 rows=10000 loops=3)"
b9fc1d34537d5a573de24bc2d55b506d38eea1b0ec3d93019bb00bddd560796d,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,116.083564519882,"duration: 116080.588 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11470155.42..11470155.43 rows=1 width=8) (actual time=112367.120..112367.121 rows=1 loops=1)
  ->  Gather  (cost=11470155.20..11470155.41 rows=2 width=8) (actual time=112362.087..116080.401 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11469155.20..11469155.21 rows=1 width=8) (actual time=112311.983..112311.983 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11107987.91 rows=144466918 width=0) (actual time=103143.656..111073.359 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8550239.45 rows=144466918 width=8) (actual time=49138.158..94522.597 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=49137.263..88846.863 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=49132.502..81971.722 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49131.799..75877.375 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49108.208..64396.366 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24653.102..40006.004 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.880..7093.865 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7089.779..7089.780 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.947..2571.480 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1545.812..1545.813 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.691..124.252 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.223..23.223 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.445..11.351 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.679..0.679 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.485..0.569 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.666..4.666 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..2.428 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.846..0.846 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.833..0.835 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1198.074..1198.074 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.858..469.768 rows=1666667 loops=3)"
c6d20f16e16d7149814fbdef2e9b069eb40dc5ddf4f8df4d95d42889126ddecb,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.141779184341,"duration: 112139.014 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15223147.94..15223147.95 rows=1 width=8) (actual time=107984.833..107984.833 rows=1 loops=1)
  ->  Gather  (cost=15223147.73..15223147.94 rows=2 width=8) (actual time=107980.133..112138.839 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15222147.73..15222147.74 rows=1 width=8) (actual time=107929.886..107929.886 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14860980.43 rows=144466918 width=0) (actual time=87105.523..106734.882 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12874251.31 rows=144466918 width=8) (actual time=87100.850..101045.812 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531165.75..10887814.94 rows=144466918 width=16) (actual time=87100.124..96408.154 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42713.339..77331.865 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42712.558..70988.800 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42686.801..59246.415 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11526.779..25280.186 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.966..5741.022 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.162..222.163 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.841..101.805 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6774.467..6774.467 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.635..2513.240 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.443..25.443 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.482..12.501 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.729..0.729 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.709..0.711 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1229.549..1229.549 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.783..498.200 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.696..0.697 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.489..0.578 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.334..4.334 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.494..2.369 rows=10000 loops=3)"
0e14a9513cbeb5f88ac56129430874660c8f4de389d03244740feeff18fea48f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,104.878410339355,"duration: 104875.038 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9238512.23..9238512.24 rows=1 width=8) (actual time=101582.685..101582.685 rows=1 loops=1)
  ->  Gather  (cost=9238512.01..9238512.22 rows=2 width=8) (actual time=101578.967..104874.154 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9237512.01..9237512.02 rows=1 width=8) (actual time=101527.261..101527.261 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8876344.72 rows=144466918 width=0) (actual time=69128.058..100072.731 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3759770.97 rows=24077820 width=8) (actual time=69127.175..95176.060 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=69121.608..89121.726 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3095728.92 rows=24077820 width=16) (actual time=69095.284..79976.952 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=46491.122..60044.772 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25405.170..39620.089 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.006..7118.353 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8300.571..8300.571 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.890..4088.756 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.029..1744.011 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.818..0.818 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.612..0.711 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=258.510..258.511 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.025..110.375 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1224.142..1224.143 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.951..504.735 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.950..25.950 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.534..13.269 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.454..5.454 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.892 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.573..0.573 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.548..0.550 rows=4 loops=3)"
39b4ca6710fdc57478bf890b0b7625268def7725b9c9af48ad6b0dd1f91b8321,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,98.4250347614288,"duration: 98421.621 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=94540.639..94540.639 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=94536.630..98421.071 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=94484.708..94484.708 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=80605.864..93291.931 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537203.93..10611691.11 rows=144466918 width=8) (actual time=80604.920..88579.595 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440522.55..7771780.66 rows=144466918 width=16) (actual time=42054.517..69801.474 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440485.55..2655206.91 rows=24077820 width=24) (actual time=42053.606..64289.916 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42048.859..57329.130 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11838.068..25434.912 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.040..5753.154 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=447.141..447.141 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.165..310.591 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.816..103.253 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.044..21.044 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..10.982 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6710.311..6710.312 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.714..2491.123 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.651..4.651 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.486 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.853..0.853 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.841 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2444.961..2444.961 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..483.030 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.723..0.723 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.501..0.597 rows=500 loops=3)"
95bbe40338fe9d7c6fcc5573b10378b4f415529d6048c10cd2a8b3f8a64c2544,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,131.365815401077,"duration: 131362.691 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13710293.49..13710293.50 rows=1 width=8) (actual time=124047.597..124047.597 rows=1 loops=1)
  ->  Gather  (cost=13710293.27..13710293.48 rows=2 width=8) (actual time=124041.684..131361.503 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13709293.27..13709293.28 rows=1 width=8) (actual time=123990.288..123990.288 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..13348125.98 rows=144466917 width=0) (actual time=97732.254..122695.763 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..11361396.87 rows=144466917 width=8) (actual time=97726.556..116706.501 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..9373383.76 rows=144466917 width=8) (actual time=97702.511..108502.507 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7013306.79 rows=150000000 width=8) (actual time=79094.422..92387.553 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..3003535.42 rows=50000100 width=8) (actual time=7647.636..17181.437 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7645.215..15128.817 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7644.162..13349.697 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.417..2598.126 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.076..1323.077 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.145..526.891 rows=1666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.006..1.007 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.984..0.987 rows=4 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.355..2.356 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=2.088..2.204 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52849.052..52849.052 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.785..8090.912 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=272.603..272.603 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.002..124.355 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.646..23.646 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.537..11.989 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.379..5.379 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.486..2.888 rows=10000 loops=3)"
66d8d654f7c854e3d3886394fdab82e70d1c5d50d73d4842616e4ad8a7a27cc7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,112.42693066597,"duration: 112413.985 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=109035.706..109035.706 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=109028.008..112413.760 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=108975.898..108975.898 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=74581.357..107428.243 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..17056868.61 rows=144466917 width=8) (actual time=74580.273..102077.356 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..15070139.50 rows=144466917 width=16) (actual time=74575.692..95986.998 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=74552.074..86520.709 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=58515.072..68558.631 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24987.282..47724.378 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24986.318..41067.122 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.674..6993.529 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7662.925..7662.926 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.648..2726.908 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.912..0.912 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.889..0.891 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2103.322..2103.322 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.876..508.853 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=266.001..266.001 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.260..117.143 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.272..23.272 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.852..12.147 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.477..4.477 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.602..2.561 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.849..0.849 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.635..0.739 rows=500 loops=3)"
3dc0f797227e495f3b700c67c17af1340866bd15487cb97db66af6bbec95869b,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,99.6210732460022,"duration: 99618.085 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=95178.942..95178.942 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=95173.576..99617.514 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=95122.345..95122.345 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=73666.676..93886.514 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=537203.93..12549203.21 rows=144466918 width=8) (actual time=73665.581..88794.257 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=73661.127..83256.422 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=42008.783..64025.180 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42007.911..57575.266 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12000.938..24797.010 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..5852.703 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=442.040..442.040 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.071..307.979 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.099..104.174 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.594..22.595 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.683..11.869 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7169.293..7169.293 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.811..2481.607 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.817..0.817 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.799..0.801 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1369.125..1369.126 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.964..618.053 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.357..4.357 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.595..2.496 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.893..0.893 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.689..0.786 rows=500 loops=3)"
bb7be922fc9a7e653d2c22158ee47436432bbd93b526f19dc904ccd2bafb01d7,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.10986495018,"duration: 113106.929 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=109404.047..109404.047 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=109399.158..113106.843 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=109342.783..109342.783 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=101012.082..108185.861 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=47287.929..92373.401 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=47286.773..86161.152 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=47281.454..79266.877 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47280.958..73619.791 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47257.360..62142.436 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24498.679..39590.856 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.870..7052.928 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6932.834..6932.835 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.825..2554.769 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.270..238.270 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.700..105.885 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.229..23.229 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.529..11.809 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.471..0.472 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.453..0.454 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.228..5.229 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.641..2.751 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.105..1.106 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.879..0.968 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1212.422..1212.423 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.066..503.376 rows=1666667 loops=3)"
3302cc5484cdabefe727c5524134590a7771fcf22bb801e0612f421907cd2125,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,159.348202466965,"duration: 159346.259 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=18335231.26..18335231.27 rows=1 width=8) (actual time=150753.290..150753.290 rows=1 loops=1)
  ->  Gather  (cost=18335231.04..18335231.25 rows=2 width=8) (actual time=150749.276..159346.098 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18334231.04..18334231.05 rows=1 width=8) (actual time=150699.838..150699.838 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17973063.75 rows=144466917 width=0) (actual time=135531.503..149458.585 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1304911.38..15986627.39 rows=144466917 width=8) (actual time=135530.461..144497.275 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1208230.00..13146716.94 rows=144466917 width=16) (actual time=93053.579..126613.657 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=93046.140..118616.184 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=93022.335..107719.147 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71405.535..86129.535 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.429..4775.102 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.667..2071.065 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.718..0.719 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.698..0.700 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52391.518..52391.518 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.218..8099.940 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.806..235.806 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.734..100.203 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.349..23.349 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.278..12.339 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.283..7.283 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.402..4.222 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1449.671..1449.671 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.788..493.563 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.830..0.830 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.515..0.646 rows=500 loops=3)"
cbd552fcd13ebd9c9fdac01364434aae2f4e087f9f2f4925b771d59c8abe12c1,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,95.5410997867584,"duration: 95532.793 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12416998.55..12416998.56 rows=1 width=8) (actual time=91994.832..91994.832 rows=1 loops=1)
  ->  Gather  (cost=12416998.33..12416998.54 rows=2 width=8) (actual time=91987.410..95532.205 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12415998.33..12415998.34 rows=1 width=8) (actual time=91938.315..91938.315 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..12054831.04 rows=144466918 width=0) (actual time=59854.977..90451.368 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..10068101.92 rows=144466918 width=8) (actual time=59849.964..84351.189 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=719913.04..8080088.79 rows=144466918 width=8) (actual time=59827.573..75932.704 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=59826.830..71410.307 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=32763.975..53278.451 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=32763.055..47128.045 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.477..6824.509 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16048.276..16048.276 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6462.395..11560.293 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.834..2365.186 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1286.519..1286.519 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.795..488.787 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.889..0.889 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.731..0.804 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=864.465..864.465 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..103.832 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.716..0.716 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.696..0.698 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.076..22.076 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.550..11.543 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.678..4.678 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.611..2.624 rows=10000 loops=3)"
38f0aeb8e0966df123b774c83aa3abbda1b4fa95b51b736789c2a670c2e979f9,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,113.388756513596,"duration: 113386.406 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=109516.515..109516.515 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=109511.661..113386.296 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=109462.419..109462.419 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=81999.851..107930.104 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=81995.044..101858.091 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=81994.266..97103.121 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=81993.696..92405.676 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55371.483..71557.288 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12157.200..37581.950 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12132.591..26290.181 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.100..5664.566 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1005.847..1005.848 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.660..111.369 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.198..24.198 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.757..12.403 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7705.995..7705.996 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.942..2727.697 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.925..1226.925 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.805..495.669 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.545..0.545 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.526..0.527 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.754..0.755 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.626 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.535..4.535 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.527..2.505 rows=10000 loops=3)"
6397855d0a839d29afda23f1a787dd5cd2724db7c6da017a0489b966b53c1aab,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,115.203183174133,"duration: 115200.598 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9539364.01..9539364.02 rows=1 width=8) (actual time=111455.771..111455.772 rows=1 loops=1)
  ->  Gather  (cost=9539363.79..9539364.00 rows=2 width=8) (actual time=111449.149..115200.467 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9538363.79..9538363.80 rows=1 width=8) (actual time=111396.770..111396.770 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9177196.50 rows=144466918 width=0) (actual time=69808.364..109728.907 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4060622.75 rows=24077820 width=8) (actual time=69807.611..104327.407 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3729243.72 rows=24077820 width=16) (actual time=69803.159..98203.292 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529552.00..3396580.70 rows=24077820 width=16) (actual time=69778.588..88607.199 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3065494.42 rows=24077820 width=24) (actual time=69777.426..82988.091 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=51620.187..62864.086 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24190.705..40680.284 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.989..6995.995 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7461.511..7461.511 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.721..2614.467 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.534..1246.535 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.900..495.771 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.483..235.483 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.789..108.015 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.132..1.132 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.953..1.034 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.240..24.241 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.536..11.966 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.359..4.359 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.425 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.550..0.550 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.517..0.519 rows=4 loops=3)"
2946644dbbbab02b13333716e7d633926b907f997ec5817fb40a919e35f2f44f,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,100.033391237259,"duration: 100031.120 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14108496.67..14108496.68 rows=1 width=8) (actual time=96765.138..96765.138 rows=1 loops=1)
  ->  Gather  (cost=14108496.46..14108496.67 rows=2 width=8) (actual time=96758.026..100030.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14107496.46..14107496.47 rows=1 width=8) (actual time=96704.773..96704.773 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..13746329.16 rows=144466918 width=0) (actual time=54690.584..94999.410 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..11759600.04 rows=144466918 width=8) (actual time=54685.373..87957.905 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=721489.79..9773163.67 rows=144466918 width=16) (actual time=54684.460..82796.766 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=719896.79..7785150.54 rows=144466918 width=16) (actual time=54659.098..73100.419 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=54657.890..67882.809 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=33975.785..47852.743 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.998..6769.216 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17728.716..17728.716 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8151.472..13249.217 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.881..2578.360 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.262..1323.263 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.773..509.822 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=268.251..268.251 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.828..118.866 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.168..1.168 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.146..1.149 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.968..24.968 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..12.316 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.881..0.881 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.637..0.743 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.872..4.872 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.607..2.609 rows=10000 loops=3)"
fbcc4d38b25e446db752606ed010b2676ad11b0eb9cffa0abcd8b29dde977296,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,118.522948265076,"duration: 118518.693 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=17000529.71..17000529.72 rows=1 width=8) (actual time=114584.682..114584.682 rows=1 loops=1)
  ->  Gather  (cost=17000529.50..17000529.71 rows=2 width=8) (actual time=114579.900..118518.560 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16999529.50..16999529.51 rows=1 width=8) (actual time=114496.028..114496.028 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16638362.20 rows=144466918 width=0) (actual time=91874.980..113257.132 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14651925.83 rows=144466918 width=8) (actual time=91874.055..108034.855 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531165.75..12665196.71 rows=144466918 width=16) (actual time=91869.363..102335.066 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..9543124.25 rows=144466918 width=24) (actual time=47996.371..81803.540 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7555111.13 rows=144466918 width=24) (actual time=47974.741..69688.278 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47974.002..63878.742 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25260.598..40442.945 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.027..7087.594 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8088.297..8088.297 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.880..2624.146 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.616..239.616 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.585..104.999 rows=333333 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.697 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.683 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.318..21.318 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.720..11.160 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1222.251..1222.251 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.851..493.644 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.595..4.599 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.470..2.504 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.717..0.717 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.494..0.591 rows=500 loops=3)"
962fc6ebfc79c792bc8dfc19727cbe103d91fe2744641e8ba4ee760f495b5872,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,97.2957525253296,"duration: 97292.961 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10761648.45..10761648.46 rows=1 width=8) (actual time=94171.595..94171.596 rows=1 loops=1)
  ->  Gather  (cost=10761648.24..10761648.45 rows=2 width=8) (actual time=94165.963..97292.861 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10760648.24..10760648.25 rows=1 width=8) (actual time=94117.905..94117.905 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10399480.94 rows=144466918 width=0) (actual time=60794.587..92614.168 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8412751.82 rows=144466918 width=8) (actual time=60789.179..86232.934 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3296178.07 rows=24077820 width=16) (actual time=60788.622..81680.771 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=60765.171..72473.697 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=34398.190..54856.875 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34397.049..48684.491 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.892..6602.802 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17735.370..17735.370 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8319.764..13399.933 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.913..3224.858 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1906.998..1906.998 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.719..453.686 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.098..1.098 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.796..0.935 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.351..239.351 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.111..104.216 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.117..23.118 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.491..11.690 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.534..0.534 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.517..0.518 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.116..5.116 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.514..2.694 rows=10000 loops=3)"
b091c667f00234e670c0111d4457d2e962e38033d028ea516d51065ab3ba5a89,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,116.980152845383,"duration: 116977.721 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11175452.79..11175452.80 rows=1 width=8) (actual time=113281.580..113281.580 rows=1 loops=1)
  ->  Gather  (cost=11175452.57..11175452.78 rows=2 width=8) (actual time=113278.075..116976.686 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11174452.57..11174452.58 rows=1 width=8) (actual time=113226.244..113226.245 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10813285.28 rows=144466918 width=0) (actual time=79543.273..111728.499 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8826556.15 rows=144466918 width=8) (actual time=79538.096..105235.052 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=79537.505..100553.805 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529552.00..3377319.38 rows=24077820 width=16) (actual time=79513.005..91106.949 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=48200.146..70163.230 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48198.828..63121.350 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24735.460..39556.503 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.131..7000.130 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7923.055..7923.055 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.037..2535.925 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.340..249.340 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.853..103.707 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.263..1.263 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.997..1.105 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.663..1280.663 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.911..502.807 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.145..24.145 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.450..12.230 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.567..0.567 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.549..0.551 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.863..4.863 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.478..2.633 rows=10000 loops=3)"
f85c81492584af2269f707aa2b9e93625aaa0a86bc00b059eca52763ae33ae7a,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,117.791645050049,"duration: 117789.076 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=113574.133..113574.133 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=113568.342..117788.983 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=113518.238..113518.238 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=104193.166..112204.728 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=48644.654..94985.273 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=48643.634..88550.368 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=48639.139..81485.112 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48638.614..75680.658 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48612.001..63784.830 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25695.473..40797.614 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.901..7125.474 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8512.628..8512.629 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.820..2681.152 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=383.264..383.264 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.870..108.703 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.293..26.293 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.498..12.866 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.502..0.503 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.491..0.493 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.403..4.403 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.458..2.303 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.976..0.976 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.764..0.855 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.803..1309.803 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.929..506.879 rows=1666667 loops=3)"
1b39ca2a372b8db77fc31ae624b8065e49a7ccc57a573e40ab24148d12c11fef,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,110.927889108658,"duration: 110925.056 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16843623.15..16843623.16 rows=1 width=8) (actual time=107340.273..107340.274 rows=1 loops=1)
  ->  Gather  (cost=16843622.93..16843623.14 rows=2 width=8) (actual time=107335.699..110924.926 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16842622.93..16842622.94 rows=1 width=8) (actual time=107247.924..107247.924 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16481455.64 rows=144466917 width=0) (actual time=72921.790..105754.149 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14495019.28 rows=144466917 width=8) (actual time=72920.802..100439.874 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..12508290.17 rows=144466917 width=16) (actual time=72916.040..94406.384 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10520277.06 rows=144466917 width=16) (actual time=72892.903..85027.199 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=507852.75..7867232.09 rows=150000000 width=16) (actual time=51071.485..67252.267 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=51070.282..62056.645 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24400.442..40612.015 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.009..7003.541 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7426.768..7426.768 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.812..2674.524 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1224.976..1224.976 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.139..487.490 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.160..1.161 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.145..1.147 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.641..243.641 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..109.003 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.815..22.815 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.560..11.697 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.668..4.668 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.561 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.786..0.786 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.532..0.652 rows=500 loops=3)"
f64fcc7f4e8b0db46d7a2381d73fa8e102e25ea4fe9abb17820207bd504d18f1,"BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;","('customer', 'category', 'deliverer', 'discount', 'order', 'order_details', 'product', 'subcategory')",0.146198830409357,8,104.607976913452,"duration: 104605.284 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9208945.55..9208945.56 rows=1 width=8) (actual time=101170.643..101170.644 rows=1 loops=1)
  ->  Gather  (cost=9208945.33..9208945.54 rows=2 width=8) (actual time=101165.090..104604.629 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9207945.33..9207945.34 rows=1 width=8) (actual time=101110.805..101110.806 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8846778.04 rows=144466918 width=0) (actual time=67777.966..99641.373 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3730204.29 rows=24077820 width=8) (actual time=67776.930..94698.929 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3398825.26 rows=24077820 width=16) (actual time=67769.385..88585.811 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3066162.24 rows=24077820 width=16) (actual time=67735.041..79320.743 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=50963.152..60915.279 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=24932.832..40123.615 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.994..6780.007 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8223.531..8223.531 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.501..4145.425 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.798..1754.273 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.630..0.631 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.464..0.539 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.961..1255.961 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.878..483.116 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1349.223..1349.223 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.054..109.716 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.912..33.912 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..16.332 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.397..7.397 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.598..3.765 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.593..0.593 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.560..0.563 rows=4 loops=3)"
