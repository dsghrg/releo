2021-03-21 14:45:46.162 CET,,,380,,60574e0a.17c,1,,2021-03-21 14:45:46 CET,,0,LOG,00000,"ending log output to stderr",,"Future log output will go to log destination ""csvlog"".",,,,,,,""
2021-03-21 14:45:46.237 CET,,,1620,,60574e0a.654,1,,2021-03-21 14:45:46 CET,,0,LOG,00000,"database system was shut down at 2021-03-21 14:45:44 CET",,,,,,,,,""
2021-03-21 14:45:46.275 CET,,,380,,60574e0a.17c,2,,2021-03-21 14:45:46 CET,,0,LOG,00000,"database system is ready to accept connections",,,,,,,,,""
2021-03-21 14:45:46.305 CET,"postgres","shop_db",7608,"127.0.0.1:60370",60574e0a.1db8,1,"",2021-03-21 14:45:46 CET,,0,FATAL,57P03,"the database system is starting up",,,,,,,,,""
2021-03-21 14:47:00.179 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,1,"",2021-03-21 14:47:00 CET,4/10,0,WARNING,25001,"there is already a transaction in progress",,,,,,,,,""
2021-03-21 14:48:02.886 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,2,"",2021-03-21 14:47:00 CET,4/10,0,LOG,00000,"duration: 62682.354 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2418205.96..2418205.97 rows=1 width=8) (actual time=60060.403..60060.403 rows=1 loops=1)
  ->  Gather  (cost=2418205.74..2418205.95 rows=2 width=8) (actual time=60056.897..62681.857 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2417205.74..2417205.75 rows=1 width=8) (actual time=60004.923..60004.923 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2357011.19 rows=24077820 width=0) (actual time=50657.156..58804.561 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=501320.19..1944681.86 rows=25000000 width=8) (actual time=30157.796..42409.145 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.940..10302.182 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8235.996..8235.997 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.497..4202.235 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.691..1987.847 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.768..0.769 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.538..0.667 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=288.267..288.267 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.570..164.284 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 14:48:59.761 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,3,"",2021-03-21 14:47:00 CET,4/11,0,LOG,00000,"duration: 56853.432 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=54205.522..54205.522 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=54201.773..56853.337 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=54147.701..54147.702 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=42032.040..52837.299 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12025.903..24413.967 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.909..5917.450 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=251.768..251.768 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.052..107.500 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8122.366..8122.367 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.277..4079.132 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.527..1865.024 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.704..0.704 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.438..0.548 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:49:55.341 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,4,"",2021-03-21 14:47:00 CET,4/12,0,LOG,00000,"duration: 55545.855 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2418205.96..2418205.97 rows=1 width=8) (actual time=52334.102..52334.102 rows=1 loops=1)
  ->  Gather  (cost=2418205.74..2418205.95 rows=2 width=8) (actual time=52331.176..55545.380 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2417205.74..2417205.75 rows=1 width=8) (actual time=52282.028..52282.028 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2357011.19 rows=24077820 width=0) (actual time=41916.980..50967.541 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=501320.19..1944681.86 rows=25000000 width=8) (actual time=24701.409..36597.580 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.816..7069.767 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7371.498..7371.498 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.496..3772.995 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.723..1716.885 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.739..0.739 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.535..0.626 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.563..222.563 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.820..100.337 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 14:50:50.677 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,5,"",2021-03-21 14:47:00 CET,4/13,0,LOG,00000,"duration: 55304.805 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=52554.171..52554.172 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=52549.517..55304.725 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=52499.887..52499.887 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=41186.100..51240.533 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11931.620..23651.636 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.001..5818.862 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=226.515..226.516 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.915..98.712 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8500.079..8500.079 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.518..4744.652 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.708..2577.283 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.774..0.775 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.545..0.644 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:51:51.374 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,6,"",2021-03-21 14:47:00 CET,4/14,0,LOG,00000,"duration: 60655.284 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2663648.39..2663648.40 rows=1 width=8) (actual time=58098.309..58098.309 rows=1 loops=1)
  ->  Gather  (cost=2663648.18..2663648.39 rows=2 width=8) (actual time=58095.110..60654.609 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2662648.18..2662648.19 rows=1 width=8) (actual time=58045.137..58045.137 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=416187.63..2602453.63 rows=24077820 width=0) (actual time=48399.633..56798.300 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=394874.63..2190124.29 rows=25000000 width=8) (actual time=23925.069..42870.006 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23923.818..37279.195 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.908..6982.959 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=7262.803..7262.804 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.806..2646.624 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.202..1.203 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.927..1.041 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.454..211.454 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.860..94.253 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 14:52:47.871 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,7,"",2021-03-21 14:47:00 CET,4/15,0,LOG,00000,"duration: 56476.404 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=53524.125..53524.125 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=53519.194..56476.301 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=53470.433..53470.433 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=42023.077..52187.787 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12154.502..24622.535 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.937..5969.911 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=237.528..237.529 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.801..104.031 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8060.049..8060.049 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.351..4283.591 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.557..1974.482 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.729..0.729 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.513..0.600 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:53:51.907 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,8,"",2021-03-21 14:47:00 CET,4/16,0,LOG,00000,"duration: 64003.689 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2699796.42..2699796.43 rows=1 width=8) (actual time=60380.698..60380.698 rows=1 loops=1)
  ->  Gather  (cost=2699796.20..2699796.41 rows=2 width=8) (actual time=60375.905..64001.417 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2698796.20..2698796.21 rows=1 width=8) (actual time=60329.693..60329.693 rows=1 loops=3)
              ->  Hash Join  (cost=416187.63..2638601.65 rows=24077820 width=0) (actual time=43920.061..59028.389 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=416171.38..2307515.38 rows=24077820 width=8) (actual time=43919.007..53769.074 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23295.314..36957.017 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.995..7011.749 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6485.484..6485.485 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.877..2333.540 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.823..205.823 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.631..95.469 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.847..0.847 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.608..0.703 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:54:47.579 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,9,"",2021-03-21 14:47:00 CET,4/17,0,LOG,00000,"duration: 55650.410 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=52664.934..52664.934 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=52662.516..55650.326 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=52609.870..52609.870 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=41036.854..51293.246 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12134.428..24135.885 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.981..5793.503 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=212.847..212.848 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.696..90.546 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7769.507..7769.507 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.730..4049.221 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.685..1846.428 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.996..0.996 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.639..0.783 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:55:48.994 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,10,"",2021-03-21 14:47:00 CET,4/18,0,LOG,00000,"duration: 61377.859 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2663648.39..2663648.40 rows=1 width=8) (actual time=58894.350..58894.350 rows=1 loops=1)
  ->  Gather  (cost=2663648.18..2663648.39 rows=2 width=8) (actual time=58889.624..61377.476 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2662648.18..2662648.19 rows=1 width=8) (actual time=58837.086..58837.086 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=416187.63..2602453.63 rows=24077820 width=0) (actual time=49139.469..57568.557 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=394874.63..2190124.29 rows=25000000 width=8) (actual time=24611.507..43784.971 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=24610.337..38112.536 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.937..7028.162 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=7050.752..7050.753 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.653..2427.106 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.133..1.133 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.894..0.990 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.964..217.964 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.603..95.665 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 14:56:45.399 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,11,"",2021-03-21 14:47:00 CET,4/19,0,LOG,00000,"duration: 56391.824 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=52863.715..52863.715 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=52860.544..56391.718 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=52814.149..52814.149 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=41960.350..51604.991 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11905.957..23929.820 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.932..5875.571 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.660..221.661 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.697..97.226 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8825.046..8825.046 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.377..4107.089 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.594..1877.206 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.755..0.755 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.563..0.648 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:57:46.667 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,12,"",2021-03-21 14:47:00 CET,4/20,0,LOG,00000,"duration: 61235.832 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2699796.42..2699796.43 rows=1 width=8) (actual time=58763.811..58763.811 rows=1 loops=1)
  ->  Gather  (cost=2699796.20..2699796.41 rows=2 width=8) (actual time=58759.804..61233.916 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2698796.20..2698796.21 rows=1 width=8) (actual time=58710.724..58710.724 rows=1 loops=3)
              ->  Hash Join  (cost=416187.63..2638601.65 rows=24077820 width=0) (actual time=42455.537..57416.103 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=416171.38..2307515.38 rows=24077820 width=8) (actual time=42454.563..52167.285 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=22629.003..36438.045 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.827..6854.294 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6126.963..6126.964 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.707..2285.570 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=203.821..203.821 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.577..93.668 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.760..0.760 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.556..0.645 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:58:46.118 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,13,"",2021-03-21 14:47:00 CET,4/21,0,LOG,00000,"duration: 59432.082 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=56848.064..56848.064 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=56844.308..59432.011 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=56787.811..56787.811 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=44397.410..55403.488 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13053.612..25681.530 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.879..6223.363 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=277.685..277.686 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.939..104.495 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8438.080..8438.080 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.602..4244.149 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.717..1949.076 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.844..0.844 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.610..0.705 rows=500 loops=3)",,,,,,,,,""
2021-03-21 14:59:47.798 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,14,"",2021-03-21 14:47:00 CET,4/22,0,LOG,00000,"duration: 61646.327 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2628392.75..2628392.76 rows=1 width=8) (actual time=58488.596..58488.596 rows=1 loops=1)
  ->  Gather  (cost=2628392.53..2628392.74 rows=2 width=8) (actual time=58484.121..61646.246 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2627392.53..2627392.54 rows=1 width=8) (actual time=58434.178..58434.179 rows=1 loops=3)
              ->  Hash Join  (cost=416187.63..2567197.98 rows=24077820 width=0) (actual time=40582.376..57124.003 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=416171.38..2236111.71 rows=24077820 width=8) (actual time=40581.398..51837.922 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11728.308..23691.536 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.794..5787.438 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.586..217.586 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.958..94.785 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6524.948..6524.949 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.629..2393.775 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.727..0.727 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.484..0.593 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:00:42.691 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,15,"",2021-03-21 14:47:00 CET,4/23,0,LOG,00000,"duration: 54875.017 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=52210.451..52210.451 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=52206.102..54873.811 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=52160.822..52160.822 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=40471.849..50848.744 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11957.344..23646.143 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.876..5756.090 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=224.504..224.505 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.811..94.722 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7730.868..7730.868 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2624kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.301..4078.143 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.541..1862.460 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.700..0.700 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.454..0.563 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:01:43.589 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,16,"",2021-03-21 14:47:00 CET,4/24,0,LOG,00000,"duration: 60865.768 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2628392.75..2628392.76 rows=1 width=8) (actual time=57408.021..57408.021 rows=1 loops=1)
  ->  Gather  (cost=2628392.53..2628392.74 rows=2 width=8) (actual time=57405.206..60865.695 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2627392.53..2627392.54 rows=1 width=8) (actual time=57351.662..57351.663 rows=1 loops=3)
              ->  Hash Join  (cost=416187.63..2567197.98 rows=24077820 width=0) (actual time=40306.085..56126.123 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=416171.38..2236111.71 rows=24077820 width=8) (actual time=40305.001..51117.077 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11688.922..23734.202 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.897..5791.384 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.728..217.729 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.968..95.914 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=7117.549..7117.549 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.577..2390.556 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.848..0.848 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.622..0.718 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:02:40.956 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,17,"",2021-03-21 14:47:00 CET,4/25,0,LOG,00000,"duration: 57348.837 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2395630.29..2395630.30 rows=1 width=8) (actual time=53882.050..53882.062 rows=1 loops=1)
  ->  Gather  (cost=2395630.07..2395630.28 rows=2 width=8) (actual time=53876.025..57348.618 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2394630.07..2394630.08 rows=1 width=8) (actual time=53825.906..53825.906 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=522633.19..2334435.52 rows=24077820 width=0) (actual time=42352.578..52546.456 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13032.624..24894.414 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.743..6855.411 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.633..218.634 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.794..97.036 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7193.818..7193.818 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2624kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.414..3783.269 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.599..1722.118 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.779..0.779 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.534..0.636 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:03:46.633 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,18,"",2021-03-21 14:47:00 CET,4/26,0,LOG,00000,"duration: 65635.996 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2751682.98..2751682.99 rows=1 width=8) (actual time=62727.324..62727.324 rows=1 loops=1)
  ->  Gather  (cost=2751682.77..2751682.98 rows=2 width=8) (actual time=62722.582..65635.374 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2750682.77..2750682.78 rows=1 width=8) (actual time=62668.376..62668.376 rows=1 loops=3)
              ->  Hash Join  (cost=524633.19..2690488.22 rows=24077820 width=0) (actual time=43903.639..61482.152 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=523040.19..2357825.19 rows=24077820 width=8) (actual time=43872.834..54121.188 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=501320.19..1944681.86 rows=25000000 width=8) (actual time=25386.818..37243.287 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.962..7892.227 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7310.197..7310.197 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.609..3781.972 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.898..1737.344 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.685..0.685 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.522..0.597 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.693..222.693 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.197..101.994 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=30.122..30.122 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.723..18.056 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:04:42.242 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,19,"",2021-03-21 14:47:00 CET,4/27,0,LOG,00000,"duration: 55584.774 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53222.351..53222.351 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53217.474..55584.697 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53162.661..53162.661 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41779.847..51875.319 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12738.021..24697.247 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.889..6127.996 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=810.946..810.947 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=24.389..293.428 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.870..106.361 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.156..23.166 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.493..10.783 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7762.901..7762.901 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.539..4044.718 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.693..1841.124 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.813..0.814 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.595..0.686 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:05:46.455 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,20,"",2021-03-21 14:47:00 CET,4/28,0,LOG,00000,"duration: 64166.382 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2751682.98..2751682.99 rows=1 width=8) (actual time=61464.370..61464.370 rows=1 loops=1)
  ->  Gather  (cost=2751682.77..2751682.98 rows=2 width=8) (actual time=61458.082..64165.841 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2750682.77..2750682.78 rows=1 width=8) (actual time=61407.522..61407.522 rows=1 loops=3)
              ->  Hash Join  (cost=524633.19..2690488.22 rows=24077820 width=0) (actual time=42753.833..60222.234 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=523040.19..2357825.19 rows=24077820 width=8) (actual time=42727.800..52908.592 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=501320.19..1944681.86 rows=25000000 width=8) (actual time=25459.756..37366.942 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.896..8100.515 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7807.223..7807.223 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.646..4028.288 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.901..1828.907 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.717..0.718 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.545..0.627 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=319.149..319.149 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.997..129.780 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=25.325..25.325 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.509..11.510 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:06:41.039 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,21,"",2021-03-21 14:47:00 CET,4/29,0,LOG,00000,"duration: 54558.170 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=51750.008..51750.008 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=51745.132..54556.397 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=51689.016..51689.016 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=40919.782..50471.965 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11718.080..23583.519 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.969..5680.088 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=365.626..365.626 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=29.015..253.568 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.933..88.819 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=27.604..27.605 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.640..12.074 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7370.950..7370.950 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.734..3868.072 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.725..1769.895 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.970..0.970 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.687..0.805 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:07:52.471 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,22,"",2021-03-21 14:47:00 CET,4/30,0,LOG,00000,"duration: 71385.390 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2997125.42..2997125.43 rows=1 width=8) (actual time=68828.622..68828.622 rows=1 loops=1)
  ->  Gather  (cost=2997125.20..2997125.41 rows=2 width=8) (actual time=68821.405..71385.278 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2996125.20..2996125.21 rows=1 width=8) (actual time=68769.902..68769.903 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2935930.65 rows=24077820 width=0) (actual time=49866.884..67554.054 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=416594.63..2603267.63 rows=24077820 width=8) (actual time=49845.592..60179.751 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=394874.63..2190124.29 rows=25000000 width=8) (actual time=24065.328..43352.005 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=24064.326..37676.015 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.998..7080.843 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=7225.907..7225.908 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.757..2355.811 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.969..0.969 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.771..0.868 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.205..240.205 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.695..107.226 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.668..20.668 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.601..10.105 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:08:49.247 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,23,"",2021-03-21 14:47:00 CET,4/31,0,LOG,00000,"duration: 56747.359 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53913.983..53913.983 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53908.001..56747.285 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53855.219..53855.220 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=42133.660..52524.865 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11688.333..23600.714 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.976..5682.102 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=495.497..495.498 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=22.049..334.195 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.736..110.707 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.883..20.884 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.601..10.104 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8633.062..8633.063 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.472..4044.020 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.650..1849.627 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.795..0.795 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.544..0.654 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:10:03.024 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,24,"",2021-03-21 14:47:00 CET,4/32,0,LOG,00000,"duration: 73741.298 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=3033273.44..3033273.45 rows=1 width=8) (actual time=70528.960..70528.960 rows=1 loops=1)
  ->  Gather  (cost=3033273.23..3033273.44 rows=2 width=8) (actual time=70522.886..73740.837 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3032273.23..3032273.24 rows=1 width=8) (actual time=70467.870..70467.870 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2972078.68 rows=24077820 width=0) (actual time=44848.063..69218.734 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=416594.63..2639415.65 rows=24077820 width=8) (actual time=44815.556..61474.320 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=416578.38..2308329.38 rows=24077820 width=16) (actual time=44814.221..56434.656 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23708.443..37284.489 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.778..7160.207 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6388.499..6388.499 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.923..2306.076 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.729..229.729 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.789..102.638 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.298..1.298 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.115..1.196 rows=500 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=31.871..31.871 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.835..13.758 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:11:02.427 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,25,"",2021-03-21 14:47:00 CET,4/33,0,LOG,00000,"duration: 59381.835 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=56655.256..56655.256 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=56649.490..59379.931 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=56592.053..56592.053 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=43340.931..55206.041 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12500.586..25080.059 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.053..6021.855 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=445.429..445.430 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=37.143..314.137 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.889..100.880 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=35.837..35.837 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.533..15.854 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8131.622..8131.622 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.553..4114.285 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.693..1893.179 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.808..0.809 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.543..0.660 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:12:15.618 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,26,"",2021-03-21 14:47:00 CET,4/34,0,LOG,00000,"duration: 73151.042 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3033273.44..3033273.45 rows=1 width=8) (actual time=69924.626..69924.626 rows=1 loops=1)
  ->  Gather  (cost=3033273.23..3033273.44 rows=2 width=8) (actual time=69918.755..73150.535 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3032273.23..3032273.24 rows=1 width=8) (actual time=69868.256..69868.256 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2972078.68 rows=24077820 width=0) (actual time=44171.417..68632.754 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=418171.38..2640992.40 rows=24077820 width=8) (actual time=44170.409..63519.608 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=416578.38..2308329.38 rows=24077820 width=16) (actual time=44147.992..55804.539 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23789.346..37687.509 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.785..7136.539 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6702.739..6702.740 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.835..2387.416 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.663..234.663 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..104.385 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.076..22.077 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.530..10.599 rows=50000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.784..0.784 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.553..0.650 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:13:11.506 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,27,"",2021-03-21 14:47:00 CET,4/35,0,LOG,00000,"duration: 55863.151 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53142.215..53142.216 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53136.674..55863.082 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53081.540..53081.540 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41500.520..51777.599 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11466.970..23464.344 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.922..5557.400 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=424.327..424.327 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=19.630..295.148 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.859..93.736 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.509..18.509 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.560..9.229 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7538.474..7538.474 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.507..3988.619 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.634..1819.997 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.832..0.832 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.568..0.680 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:14:22.719 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,28,"",2021-03-21 14:47:00 CET,4/36,0,LOG,00000,"duration: 71172.761 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2997125.42..2997125.43 rows=1 width=8) (actual time=68058.518..68058.518 rows=1 loops=1)
  ->  Gather  (cost=2997125.20..2997125.41 rows=2 width=8) (actual time=68052.512..71172.267 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2996125.20..2996125.21 rows=1 width=8) (actual time=68002.409..68002.409 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2935930.65 rows=24077820 width=0) (actual time=48409.182..66741.420 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=416594.63..2603267.63 rows=24077820 width=8) (actual time=48376.008..59088.030 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=394874.63..2190124.29 rows=25000000 width=8) (actual time=23487.798..42979.172 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23486.635..37251.842 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.752..7130.168 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6562.792..6562.792 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.787..2213.003 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.106..1.107 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.887..0.994 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.432..231.433 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.239..101.873 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=32.483..32.484 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.569..14.342 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:15:18.264 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,29,"",2021-03-21 14:47:00 CET,4/37,0,LOG,00000,"duration: 55517.812 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=52926.748..52926.748 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=52921.824..55517.700 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=52868.619..52868.620 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41318.452..51557.237 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11995.864..23606.605 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..5782.154 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=391.515..391.516 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=21.538..266.258 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.006..93.417 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.225..20.225 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.656..10.055 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7494.115..7494.115 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.534..3862.121 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.721..1763.208 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.781..0.781 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.577..0.668 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:16:31.350 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,30,"",2021-03-21 14:47:00 CET,4/38,0,LOG,00000,"duration: 73049.086 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=3033273.44..3033273.45 rows=1 width=8) (actual time=70440.706..70440.707 rows=1 loops=1)
  ->  Gather  (cost=3033273.23..3033273.44 rows=2 width=8) (actual time=70434.147..73048.608 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3032273.23..3032273.24 rows=1 width=8) (actual time=70387.661..70387.661 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2972078.68 rows=24077820 width=0) (actual time=44238.679..69146.067 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=416594.63..2639415.65 rows=24077820 width=8) (actual time=44216.970..61218.052 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=416578.38..2308329.38 rows=24077820 width=16) (actual time=44215.736..56102.081 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=24042.338..37994.852 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.980..6964.788 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=7356.586..7356.587 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.717..2386.079 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.271..240.272 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.616..108.816 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.204..1.204 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.027..1.106 rows=500 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.215..21.215 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.621..10.323 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:17:27.580 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,31,"",2021-03-21 14:47:00 CET,4/39,0,LOG,00000,"duration: 56204.893 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53625.400..53625.400 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53618.675..56204.821 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53568.402..53568.402 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41889.538..52243.728 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12222.085..23999.366 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.820..5932.990 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=412.482..412.482 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=21.944..281.399 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..99.898 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.879..20.879 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.480..10.320 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8104.047..8104.048 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.365..4145.883 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.579..1877.033 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.744..0.745 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.613 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:18:41.719 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,32,"",2021-03-21 14:47:00 CET,4/40,0,LOG,00000,"duration: 74102.129 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3033273.44..3033273.45 rows=1 width=8) (actual time=70718.221..70718.221 rows=1 loops=1)
  ->  Gather  (cost=3033273.23..3033273.44 rows=2 width=8) (actual time=70712.120..74099.541 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3032273.23..3032273.24 rows=1 width=8) (actual time=70661.715..70661.715 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2972078.68 rows=24077820 width=0) (actual time=44047.671..69422.119 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=418171.38..2640992.40 rows=24077820 width=8) (actual time=44046.570..64183.772 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=416578.38..2308329.38 rows=24077820 width=16) (actual time=44023.753..56184.788 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=394858.38..1846358.04 rows=25000000 width=16) (actual time=23736.614..37437.213 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.920..7104.764 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6567.602..6567.603 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.745..2334.035 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=785.465..785.465 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.617..115.703 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.412..22.412 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.509..10.623 rows=50000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.791..0.791 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.574..0.664 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:19:37.286 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,33,"",2021-03-21 14:47:00 CET,4/41,0,LOG,00000,"duration: 55537.935 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=52778.834..52778.834 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=52772.677..55537.858 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=52723.298..52723.298 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=40690.767..51387.298 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11731.000..23701.355 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.996..5650.843 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=404.493..404.493 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=22.489..267.081 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.918..96.030 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.294..21.295 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.572..10.514 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7860.381..7860.381 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.396..4063.080 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.560..1853.820 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.793..0.793 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.510..0.630 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:20:52.365 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,34,"",2021-03-21 14:47:00 CET,4/42,0,LOG,00000,"duration: 75032.276 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=3008897.77..3008897.78 rows=1 width=8) (actual time=72421.642..72421.642 rows=1 loops=1)
  ->  Gather  (cost=3008897.56..3008897.77 rows=2 width=8) (actual time=72417.562..75032.183 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3007897.56..3007897.57 rows=1 width=8) (actual time=72367.459..72367.459 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2947703.01 rows=24077820 width=0) (actual time=44844.108..71139.217 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=416594.63..2615039.98 rows=24077820 width=8) (actual time=44815.549..63022.946 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=416578.38..2283953.71 rows=24077820 width=16) (actual time=44814.402..57961.331 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12878.404..26723.150 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.716..5998.269 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.102..240.103 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.737..107.906 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6705.908..6705.909 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.677..2327.266 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.104..1.104 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.867..0.970 rows=500 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=27.896..27.896 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.601..12.772 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:21:49.228 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,35,"",2021-03-21 14:47:00 CET,4/43,0,LOG,00000,"duration: 56839.337 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53534.793..53534.793 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53528.384..56839.252 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53479.778..53479.778 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41942.680..52173.042 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11931.181..23810.858 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.881..5866.950 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=389.284..389.284 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=24.289..267.960 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.099..95.844 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.710..22.710 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.841..11.188 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8306.545..8306.545 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.354..4110.763 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.577..1871.791 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.745..0.745 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.505..0.618 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:23:01.551 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,36,"",2021-03-21 14:47:00 CET,4/44,0,LOG,00000,"duration: 72280.615 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3008897.77..3008897.78 rows=1 width=8) (actual time=69754.241..69754.241 rows=1 loops=1)
  ->  Gather  (cost=3008897.56..3008897.77 rows=2 width=8) (actual time=69748.494..72280.521 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3007897.56..3007897.57 rows=1 width=8) (actual time=69698.727..69698.727 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2947703.01 rows=24077820 width=0) (actual time=42098.259..68457.321 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=418171.38..2616616.73 rows=24077820 width=8) (actual time=42097.323..63296.368 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=416578.38..2283953.71 rows=24077820 width=16) (actual time=42071.808..55217.851 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11963.976..25730.108 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.733..5844.038 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.108..242.112 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.811..104.708 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6166.568..6166.569 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=1.104..2292.782 rows=6666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=25.140..25.140 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.482..11.536 rows=50000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.702..0.702 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.495..0.587 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:23:57.889 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,37,"",2021-03-21 14:47:00 CET,4/45,0,LOG,00000,"duration: 56318.410 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53408.882..53408.882 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53404.073..56318.317 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53349.637..53349.637 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41586.644..52033.506 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12095.807..23848.272 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.941..5961.786 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=386.659..386.659 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=19.902..265.853 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.741..93.726 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.882..18.882 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.421..9.467 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8321.184..8321.184 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.425..4106.260 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.590..1862.513 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.801..0.801 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.560..0.667 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:25:09.007 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,38,"",2021-03-21 14:47:00 CET,4/46,0,LOG,00000,"duration: 71079.196 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2961869.77..2961869.78 rows=1 width=8) (actual time=68311.036..68311.036 rows=1 loops=1)
  ->  Gather  (cost=2961869.56..2961869.77 rows=2 width=8) (actual time=68305.791..71077.622 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2960869.56..2960869.57 rows=1 width=8) (actual time=68253.079..68253.079 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2900675.01 rows=24077820 width=0) (actual time=51030.509..67001.664 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=418171.38..2569588.73 rows=24077820 width=8) (actual time=51029.414..61981.724 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=11966.656..35343.616 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11946.329..25680.077 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.772..5922.709 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.132..231.133 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.612..104.928 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.958..19.958 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.712..10.185 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6237.682..6237.682 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.647..2196.186 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.770..0.770 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.548..0.645 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:26:04.523 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,39,"",2021-03-21 14:47:00 CET,4/47,0,LOG,00000,"duration: 55486.916 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=52137.518..52137.518 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=52132.025..55486.836 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=52078.262..52078.263 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=40404.262..50762.372 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11877.438..23535.521 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.263..5644.686 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=438.407..438.407 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=21.764..309.220 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.861..107.314 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.607..20.607 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.456..10.014 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7916.165..7916.165 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.368..3867.546 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.610..1770.070 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.730..0.730 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.611 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:27:18.610 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,40,"",2021-03-21 14:47:00 CET,4/48,0,LOG,00000,"duration: 74043.679 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=3008897.77..3008897.78 rows=1 width=8) (actual time=71380.063..71380.063 rows=1 loops=1)
  ->  Gather  (cost=3008897.56..3008897.77 rows=2 width=8) (actual time=71374.347..74041.458 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3007897.56..3007897.57 rows=1 width=8) (actual time=71320.812..71320.812 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2947703.01 rows=24077820 width=0) (actual time=43300.141..70062.560 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=416594.63..2615039.98 rows=24077820 width=8) (actual time=43278.987..61788.252 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=416578.38..2283953.71 rows=24077820 width=16) (actual time=43278.102..56626.926 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11816.733..25794.379 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.117..5843.417 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.842..238.842 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.846..103.893 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6464.090..6464.090 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.674..2252.063 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.859..0.859 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.659..0.758 rows=500 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.472..20.472 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.530..10.420 rows=50000 loops=3)",,,,,,,,,""
2021-03-21 15:28:13.120 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,41,"",2021-03-21 14:47:00 CET,4/49,0,LOG,00000,"duration: 54483.777 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=51918.569..51918.569 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=51912.475..54483.706 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=51858.558..51858.558 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=40322.968..50556.115 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11234.570..23130.550 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.866..5471.517 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=353.888..353.889 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=22.537..238.554 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.727..84.011 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.518..21.518 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.394..10.302 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8031.128..8031.128 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2624kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.514..3955.694 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.691..1806.661 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.766..0.766 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.501..0.599 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:29:28.444 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,42,"",2021-03-21 14:47:00 CET,4/50,0,LOG,00000,"duration: 75286.127 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3008897.77..3008897.78 rows=1 width=8) (actual time=72660.001..72660.002 rows=1 loops=1)
  ->  Gather  (cost=3008897.56..3008897.77 rows=2 width=8) (actual time=72654.941..75285.976 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3007897.56..3007897.57 rows=1 width=8) (actual time=72603.668..72603.668 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2947703.01 rows=24077820 width=0) (actual time=43262.069..71293.468 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=418171.38..2616616.73 rows=24077820 width=8) (actual time=43261.057..65817.241 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=416578.38..2283953.71 rows=24077820 width=16) (actual time=43239.182..57266.810 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11780.780..25714.306 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.023..5776.508 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.679..250.679 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.913..109.590 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6533.911..6533.911 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.881..2356.296 rows=6666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.563..21.563 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.669..10.875 rows=50000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.794..0.794 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.608..0.691 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:30:24.957 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,43,"",2021-03-21 14:47:00 CET,4/51,0,LOG,00000,"duration: 56485.831 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53739.738..53739.738 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53735.777..56485.748 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=53680.509..53680.509 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41784.265..52344.829 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12031.517..23941.381 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.888..5861.596 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=393.996..393.996 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=19.607..271.978 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.665..93.719 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.637..18.637 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.437..9.383 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8632.451..8632.451 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.419..3959.642 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.581..1801.644 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.801..0.801 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.482..0.632 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:31:36.381 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,44,"",2021-03-21 14:47:00 CET,4/52,0,LOG,00000,"duration: 71380.690 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2961869.77..2961869.78 rows=1 width=8) (actual time=68836.287..68836.287 rows=1 loops=1)
  ->  Gather  (cost=2961869.56..2961869.77 rows=2 width=8) (actual time=68831.031..71378.832 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2960869.56..2960869.57 rows=1 width=8) (actual time=68773.248..68773.248 rows=1 loops=3)
              ->  Hash Join  (cost=418187.63..2900675.01 rows=24077820 width=0) (actual time=52102.860..67546.820 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=418171.38..2569588.73 rows=24077820 width=8) (actual time=52101.681..62687.745 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=12057.149..35258.874 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12031.387..25695.636 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.884..5941.152 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.297..226.298 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.610..101.709 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=25.383..25.384 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.794..12.290 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6265.840..6265.841 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.595..2295.509 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.794..0.794 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.532..0.656 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:32:35.405 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,45,"",2021-03-21 14:47:00 CET,4/53,0,LOG,00000,"duration: 58996.374 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=55656.486..55656.486 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=55652.333..58996.284 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=55594.653..55594.653 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=43057.326..54204.316 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12055.353..24913.356 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.779..5824.882 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=462.737..462.737 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=21.331..319.884 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..99.121 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.195..20.196 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.501..9.678 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8320.670..8320.670 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.607..4079.659 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.704..1872.545 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.867..0.867 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.599..0.715 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:33:36.155 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,46,"",2021-03-21 14:47:00 CET,4/54,0,LOG,00000,"duration: 60701.826 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2635714.92..2635714.93 rows=1 width=8) (actual time=58583.194..58583.195 rows=1 loops=1)
  ->  Gather  (cost=2635714.71..2635714.92 rows=2 width=8) (actual time=58576.039..60700.301 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2634714.71..2634714.72 rows=1 width=8) (actual time=58526.295..58526.295 rows=1 loops=3)
              ->  Hash Join  (cost=423509.80..2574520.16 rows=24077820 width=0) (actual time=40658.605..57242.222 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=423493.55..2243433.88 rows=24077820 width=8) (actual time=40657.560..52098.054 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12082.921..23964.551 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.817..5787.463 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=408.626..408.627 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=27.534..285.495 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.957..100.301 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=26.205..26.205 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.561..12.774 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6531.015..6531.015 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.678..2383.143 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.833..0.833 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.590..0.696 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:34:31.981 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,47,"",2021-03-21 14:47:00 CET,4/55,0,LOG,00000,"duration: 55810.740 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=52255.377..52255.377 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=52249.515..55810.658 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=52202.178..52202.179 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=40683.899..50886.428 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12194.250..23909.496 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.025..5780.834 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=485.628..485.629 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=20.250..290.094 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.734..96.694 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.196..19.196 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.495..9.664 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=7348.983..7348.983 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.296..3721.556 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.518..1693.685 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.743..0.744 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.531..0.619 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:35:32.771 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,48,"",2021-03-21 14:47:00 CET,4/56,0,LOG,00000,"duration: 60747.333 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2635714.92..2635714.93 rows=1 width=8) (actual time=58564.214..58564.214 rows=1 loops=1)
  ->  Gather  (cost=2635714.71..2635714.92 rows=2 width=8) (actual time=58558.639..60747.226 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2634714.71..2634714.72 rows=1 width=8) (actual time=58509.791..58509.791 rows=1 loops=3)
              ->  Hash Join  (cost=423509.80..2574520.16 rows=24077820 width=0) (actual time=40630.690..57228.157 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=423493.55..2243433.88 rows=24077820 width=8) (actual time=40629.691..52021.023 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12267.938..24097.304 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.814..5895.917 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=440.581..440.581 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=29.724..310.356 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.904..100.254 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=28.431..28.432 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.520..12.772 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=16) (actual time=6272.491..6272.491 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.613..2368.938 rows=6666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.763..0.763 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.545..0.644 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:36:28.823 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,49,"",2021-03-21 14:47:00 CET,4/57,0,LOG,00000,"duration: 56033.787 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2402952.46..2402952.47 rows=1 width=8) (actual time=53041.833..53041.833 rows=1 loops=1)
  ->  Gather  (cost=2402952.24..2402952.45 rows=2 width=8) (actual time=53035.487..56033.670 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2401952.24..2401952.25 rows=1 width=8) (actual time=52982.265..52982.265 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529955.36..2341757.69 rows=24077820 width=0) (actual time=41252.278..51681.580 rows=20000000 loops=3)
                    Hash Cond: (ord_det.order_id = ord.id)
                    ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11799.925..23924.244 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.784..5739.065 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=405.923..405.923 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=23.941..277.814 rows=333333 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.679..93.173 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.930..22.930 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.540..10.606 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=8) (actual time=8043.341..8043.341 rows=6666667 loops=3)
                          Buckets: 131072  Batches: 512  Memory Usage: 2624kB
                          ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=8) (actual time=1.605..3949.346 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=16) (actual time=0.597..1784.918 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.979..0.980 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.754..0.855 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:37:59.220 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,50,"",2021-03-21 14:47:00 CET,4/58,0,LOG,00000,"duration: 90332.715 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10638158.38..10638158.39 rows=1 width=8) (actual time=85911.160..85911.160 rows=1 loops=1)
  ->  Gather  (cost=10638158.17..10638158.38 rows=2 width=8) (actual time=85905.953..90331.539 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10637158.17..10637158.18 rows=1 width=8) (actual time=85856.679..85856.679 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..10275990.88 rows=144466917 width=0) (actual time=76164.147..84588.505 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=614314.56..7916727.90 rows=150000000 width=8) (actual time=53178.283..69114.508 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=53177.376..64008.917 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26085.937..41603.403 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.167..7022.814 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9217.703..9217.704 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.784..4493.496 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.944..1909.583 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.804..0.805 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.563..0.675 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1691.545..1691.545 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.709..827.736 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.859..0.859 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.846..0.848 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.565..201.565 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.633..86.614 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:39:43.639 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,51,"",2021-03-21 14:47:00 CET,4/59,0,LOG,00000,"duration: 104394.608 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99306.512..99306.512 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99301.586..104392.734 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99252.837..99252.841 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86972.954..98033.941 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9112.853..15759.715 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9111.158..13954.161 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.531..4394.422 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.049..1822.685 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.372..1.372 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.126..1.226 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1839.796..1839.796 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.518..556.062 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.586..1.586 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.567..1.570 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61240.143..61240.143 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13039.946..27305.354 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.728..5920.613 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.547..205.547 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.635..92.205 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:41:11.367 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,52,"",2021-03-21 14:47:00 CET,4/60,0,LOG,00000,"duration: 87671.282 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12861917.79..12861917.80 rows=1 width=8) (actual time=83669.252..83669.252 rows=1 loops=1)
  ->  Gather  (cost=12861917.57..12861917.78 rows=2 width=8) (actual time=83666.128..87671.166 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12860917.57..12860917.58 rows=1 width=8) (actual time=83614.235..83614.235 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12499750.28 rows=144466917 width=0) (actual time=74244.501..82353.892 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=538946.19..9942001.83 rows=144466917 width=8) (actual time=52224.116..63656.607 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=25563.618..45469.417 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25562.750..39824.776 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.376..6962.096 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8216.247..8216.247 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.922..4126.265 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.180..1737.549 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.710..0.710 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.530..0.610 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.821..0.821 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.808..0.810 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=233.255..233.255 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.198..94.151 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4029.723..4029.723 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.608..554.614 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 15:42:58.617 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,53,"",2021-03-21 14:47:00 CET,4/61,0,LOG,00000,"duration: 107228.199 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99707.062..99707.062 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99701.774..107225.955 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99650.167..99650.167 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86045.416..98279.337 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9424.008..16680.043 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9422.569..14779.496 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.853..4610.229 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.817..1922.541 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.987..0.988 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.766..0.860 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1311.345..1311.345 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.386..532.447 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.357..1.358 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.333..1.335 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60171.292..60171.292 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12099.786..27014.934 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.738..5885.302 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=223.093..223.094 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.784..96.692 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:44:29.337 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,54,"",2021-03-21 14:47:00 CET,4/62,0,LOG,00000,"duration: 90677.965 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15043000.34..15043000.35 rows=1 width=8) (actual time=87506.717..87506.718 rows=1 loops=1)
  ->  Gather  (cost=15043000.12..15043000.33 rows=2 width=8) (actual time=87503.362..90677.860 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15042000.12..15042000.13 rows=1 width=8) (actual time=87451.970..87451.970 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..14680832.83 rows=144466917 width=0) (actual time=78344.973..86210.714 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432500.63..12123084.38 rows=144466917 width=8) (actual time=53536.029..70414.848 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=432484.38..10136648.02 rows=144466917 width=16) (actual time=53534.670..65015.556 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24638.049..46347.834 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24637.252..40084.142 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.016..6966.738 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7482.314..7482.314 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.287..2669.268 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.748..0.748 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.734..0.735 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=208.521..208.521 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.224..85.166 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.300..1.301 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.043..1.162 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1492.429..1492.429 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.710..534.048 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 15:46:12.926 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,55,"",2021-03-21 14:47:00 CET,4/63,0,LOG,00000,"duration: 103567.967 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98232.484..98232.484 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98226.679..103567.803 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98171.736..98171.737 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84974.487..96833.241 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8934.391..15647.784 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8932.536..13828.311 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.170..4428.106 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.140..1812.458 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.973..0.974 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.752..0.844 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.622..1280.623 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.311..512.851 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.787..1.787 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.761..1.763 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60407.258..60407.258 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12311.949..27518.753 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.759..5715.187 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=279.284..279.284 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.888..107.414 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:47:41.696 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,56,"",2021-03-21 14:47:00 CET,4/64,0,LOG,00000,"duration: 88700.200 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12955865.71..12955865.72 rows=1 width=8) (actual time=84117.869..84117.869 rows=1 loops=1)
  ->  Gather  (cost=12955865.50..12955865.71 rows=2 width=8) (actual time=84113.347..88699.331 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12954865.50..12954865.51 rows=1 width=8) (actual time=84056.546..84056.546 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12593698.21 rows=144466917 width=0) (actual time=73786.898..82770.959 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=614314.56..10234435.23 rows=150000000 width=8) (actual time=59626.456..68696.997 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=29271.753..50424.688 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=29270.998..44366.166 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.864..7066.043 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=11718.175..11718.176 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.132..4441.445 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.450..1880.839 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.653..0.653 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.472..0.558 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.715..0.715 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.702..0.704 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1366.782..1366.782 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.872..503.362 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=244.785..244.785 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.962..103.460 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:49:25.671 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,57,"",2021-03-21 14:47:00 CET,4/65,0,LOG,00000,"duration: 103946.509 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96404.104..96404.105 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96399.428..103946.374 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96352.262..96352.263 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84176.658..95114.573 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8683.976..15393.864 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8682.574..13589.747 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.060..4470.356 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.585..1857.778 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.399..1.399 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.131..1.250 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1294.452..1294.453 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.405..502.602 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.316..1.316 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.298..1.301 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59771.348..59771.348 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11747.757..25618.182 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.971..5582.791 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=193.878..193.879 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.760..81.401 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:51:43.801 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,58,"",2021-03-21 14:47:00 CET,4/66,0,LOG,00000,"duration: 138080.183 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14464428.97..14464428.98 rows=1 width=8) (actual time=129982.797..129982.798 rows=1 loops=1)
  ->  Gather  (cost=14464428.75..14464428.96 rows=2 width=8) (actual time=129976.640..138077.983 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14463428.75..14463428.76 rows=1 width=8) (actual time=129920.079..129920.079 rows=1 loops=3)
              ->  Hash Join  (cost=1302618.63..14102261.46 rows=144466917 width=0) (actual time=113915.038..128651.465 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1302602.38..12115825.10 rows=144466917 width=8) (actual time=113913.747..123551.444 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=97811.097..107495.082 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71168.538..87418.322 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.584..5797.723 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.707..3110.132 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.821..0.821 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.805..0.806 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50925.156..50925.157 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.256..8083.839 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2441.743..2441.743 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.023..523.684 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=214.018..214.018 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.234..88.098 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.976..0.976 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.758..0.855 rows=500 loops=3)",,,,,,,,,""
2021-03-21 15:53:28.200 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,59,"",2021-03-21 14:47:00 CET,4/67,0,LOG,00000,"duration: 104366.935 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98066.792..98066.793 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98061.397..104364.660 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98013.427..98013.427 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86112.907..96798.125 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9290.107..15767.254 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9288.237..13993.977 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.679..4425.560 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.612..1826.137 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.018..1.018 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.788..0.887 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1332.010..1332.011 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.559..535.187 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.802..1.802 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.773..1.776 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60727.115..60727.115 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11836.013..25529.386 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.252..5729.640 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.602..205.602 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.684..82.197 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:55:29.658 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,60,"",2021-03-21 14:47:00 CET,4/68,0,LOG,00000,"duration: 121417.954 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12061345.11..12061345.12 rows=1 width=8) (actual time=113099.442..113099.442 rows=1 loops=1)
  ->  Gather  (cost=12061344.89..12061345.10 rows=2 width=8) (actual time=113094.970..121416.853 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12060344.89..12060344.90 rows=1 width=8) (actual time=113044.643..113044.643 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..11699177.60 rows=144466917 width=0) (actual time=103749.063..111834.553 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..9339914.63 rows=150000000 width=8) (actual time=78682.564..98019.761 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=78681.483..92585.642 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8481.184..13670.663 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.583..4377.852 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.565..1813.206 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.970..0.970 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.947..0.949 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.230..1255.230 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.595..513.074 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52924.852..52924.852 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.229..8149.551 rows=20000000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.039..1.043 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.859..0.940 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=210.126..210.127 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.585..84.529 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:57:10.437 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,61,"",2021-03-21 14:47:00 CET,4/69,0,LOG,00000,"duration: 100745.330 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96137.383..96137.383 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96130.379..100745.186 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96076.494..96076.494 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84314.688..94868.904 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8800.487..15614.219 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8798.158..13814.451 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.710..4395.136 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.790..1800.321 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.882..0.882 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.710..0.788 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.288..1321.288 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.752..526.969 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.261..2.261 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.226..2.229 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59692.007..59692.007 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11876.669..25868.442 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.589..5636.686 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.511..201.512 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.077..85.029 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 15:59:34.058 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,62,"",2021-03-21 14:47:00 CET,4/70,0,LOG,00000,"duration: 143582.510 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14077513.04..14077513.05 rows=1 width=8) (actual time=133937.774..133937.774 rows=1 loops=1)
  ->  Gather  (cost=14077512.83..14077513.04 rows=2 width=8) (actual time=133934.494..143582.366 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14076512.83..14076512.84 rows=1 width=8) (actual time=133879.747..133879.751 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13715345.53 rows=144466917 width=0) (actual time=124703.517..132660.934 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1205937.25..11157597.08 rows=144466917 width=8) (actual time=95246.525..113988.034 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1205921.00..9171160.72 rows=144466917 width=16) (actual time=95245.693..108080.868 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71786.076..87996.977 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.515..5006.429 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.393..2186.873 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.058..1.058 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.035..1.038 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52296.758..52296.759 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.546..8373.820 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.481..200.481 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.668..78.229 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.798..0.798 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.634..0.707 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3923.406..3923.406 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.842..533.096 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 16:01:17.896 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,63,"",2021-03-21 14:47:00 CET,4/71,0,LOG,00000,"duration: 103800.006 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97079.586..97079.587 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97073.333..103797.918 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97022.357..97022.357 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84567.970..95721.259 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9635.916..16123.761 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9634.352..14348.067 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.943..4431.871 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.416..1808.762 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.468..1.469 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.190..1.299 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.782..1323.782 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.191..514.155 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.490..1.490 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.469..1.472 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59606.530..59606.531 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12433.512..26214.381 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.607..5625.765 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=198.372..198.372 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.904..81.929 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:02:45.203 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,64,"",2021-03-21 14:47:00 CET,4/72,0,LOG,00000,"duration: 87253.765 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12861917.79..12861917.80 rows=1 width=8) (actual time=84151.923..84151.924 rows=1 loops=1)
  ->  Gather  (cost=12861917.57..12861917.78 rows=2 width=8) (actual time=84148.973..87253.614 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12860917.57..12860917.58 rows=1 width=8) (actual time=84097.264..84097.264 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12499750.28 rows=144466917 width=0) (actual time=74661.258..82843.523 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=538946.19..9942001.83 rows=144466917 width=8) (actual time=53216.000..64767.204 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=26069.435..46104.182 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26068.581..40428.514 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.561..7126.740 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9007.549..9007.549 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.509..4483.525 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.505..1900.519 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.957..0.958 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.704..0.827 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.808..0.808 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.794..0.795 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.058..218.058 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.976..85.581 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3066.210..3066.210 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.913..493.326 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 16:04:26.195 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,65,"",2021-03-21 14:47:00 CET,4/73,0,LOG,00000,"duration: 100965.838 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95686.044..95686.045 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95681.520..100965.649 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95627.673..95627.673 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83518.456..94374.808 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8838.778..15503.697 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8836.992..13698.723 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.986..4385.993 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.667..1795.710 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.277..1.278 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.102..1.182 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1637.168..1637.168 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.576..513.847 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.712..1.712 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.691..1.693 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58969.827..58969.827 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11911.040..25544.335 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..5575.340 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=196.772..196.772 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.869..80.076 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:06:06.406 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,66,"",2021-03-21 14:47:00 CET,4/74,0,LOG,00000,"duration: 100157.865 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=15213028.15..15213028.16 rows=1 width=8) (actual time=96583.301..96583.302 rows=1 loops=1)
  ->  Gather  (cost=15213027.94..15213028.15 rows=2 width=8) (actual time=96578.905..100156.312 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15212027.94..15212027.95 rows=1 width=8) (actual time=96519.113..96519.113 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..14850860.64 rows=144466917 width=0) (actual time=86677.706..95258.331 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=507869.00..12491597.67 rows=150000000 width=8) (actual time=64733.857..81262.173 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=64732.567..75672.284 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=30435.226..54338.236 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=30434.413..47298.114 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.460..7517.041 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10670.811..10670.812 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.143..2896.057 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.753..0.753 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.721..0.722 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1444.359..1444.359 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.803..502.880 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.252..1.252 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.870..1.106 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=272.287..272.287 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.161..107.030 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:07:50.652 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,67,"",2021-03-21 14:47:00 CET,4/75,0,LOG,00000,"duration: 104211.132 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96777.911..96777.911 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96772.181..104210.994 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96720.871..96720.871 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84231.058..95419.200 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8528.925..15002.936 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8526.720..13234.638 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.206..4378.560 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.374..1793.762 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.787..0.787 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.615..0.693 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1339.085..1339.085 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.325..519.142 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.131..2.131 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.110..2.112 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59680.394..59680.394 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12069.531..25848.054 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.161..5778.637 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.700..211.700 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.135..91.009 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:09:55.998 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,68,"",2021-03-21 14:47:00 CET,4/76,0,LOG,00000,"duration: 125296.139 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12061345.11..12061345.12 rows=1 width=8) (actual time=115498.386..115498.387 rows=1 loops=1)
  ->  Gather  (cost=12061344.89..12061345.10 rows=2 width=8) (actual time=115494.002..125295.565 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12060344.89..12060344.90 rows=1 width=8) (actual time=115437.542..115437.542 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..11699177.60 rows=144466917 width=0) (actual time=104995.941..114086.682 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..9339914.63 rows=150000000 width=8) (actual time=78944.964..99479.743 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=78944.014..93719.890 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8642.182..14057.007 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.551..4380.798 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.168..1812.294 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.253..1.254 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.238..1.240 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1390.939..1390.939 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.798..524.125 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51974.651..51974.651 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.995..8316.826 rows=20000000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.909..0.909 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.723..0.804 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=228.771..228.771 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.972..95.958 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:11:42.170 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,69,"",2021-03-21 14:47:00 CET,4/77,0,LOG,00000,"duration: 106141.716 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97475.269..97475.269 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97468.269..106139.882 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97415.811..97415.812 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85158.196..96156.131 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8350.134..14859.160 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8348.165..13068.034 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.886..4263.377 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.630..1742.737 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.214..1.214 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.982..1.087 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.384..1321.384 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.654..508.031 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.866..1.867 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.847..1.850 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60377.067..60377.067 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11558.041..25537.041 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.508..5588.315 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=193.425..193.426 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.803..83.073 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:13:16.066 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,70,"",2021-03-21 14:47:00 CET,4/78,0,LOG,00000,"duration: 93845.295 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8526630.18..8526630.19 rows=1 width=8) (actual time=89850.791..89850.791 rows=1 loops=1)
  ->  Gather  (cost=8526629.96..8526630.17 rows=2 width=8) (actual time=89848.066..93845.166 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8525629.96..8525629.97 rows=1 width=8) (actual time=89794.724..89794.725 rows=1 loops=3)
              ->  Hash Join  (cost=635627.57..8164462.67 rows=144466918 width=0) (actual time=73617.124..88445.389 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=635590.57..3047888.92 rows=24077820 width=8) (actual time=73616.269..83231.210 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=538909.19..2487219.19 rows=24077820 width=16) (actual time=51612.970..64820.154 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=28824.506..43775.236 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.855..8762.040 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8889.672..8889.672 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.625..4418.536 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.629..1879.961 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.941..0.941 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.743..0.834 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=264.600..264.600 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.274..104.896 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.488..1309.488 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.112..509.661 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.612..0.612 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.589..0.591 rows=4 loops=3)",,,,,,,,,""
2021-03-21 16:15:00.588 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,71,"",2021-03-21 14:47:00 CET,4/79,0,LOG,00000,"duration: 104477.868 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98117.939..98117.939 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98108.295..104474.827 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98053.876..98053.876 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85386.009..96739.351 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9016.421..15585.239 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9014.273..13783.158 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.898..4403.297 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.690..1791.623 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.158..1.159 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.910..1.023 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1791.142..1791.143 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.648..498.109 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.032..2.032 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.017..2.019 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60596.975..60596.975 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13580.616..27431.174 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.759..6770.074 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=195.847..195.848 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.885..82.958 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:17:18.122 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,72,"",2021-03-21 14:47:00 CET,4/80,0,LOG,00000,"duration: 137480.530 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13860622.93..13860622.94 rows=1 width=8) (actual time=128959.617..128959.617 rows=1 loops=1)
  ->  Gather  (cost=13860622.72..13860622.93 rows=2 width=8) (actual time=128956.241..137480.404 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13859622.72..13859622.73 rows=1 width=8) (actual time=128903.484..128903.484 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13498455.42 rows=144466917 width=0) (actual time=119077.879..127587.203 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=1205937.25..10940706.97 rows=144466917 width=8) (actual time=99044.898..109912.478 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=70905.974..92379.055 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=70904.864..86186.454 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.143..4818.693 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.868..2117.463 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.206..1.206 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.184..1.186 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51740.302..51740.302 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.191..10145.599 rows=20000000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.073..1.073 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.854..0.958 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=197.337..197.337 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.758..78.817 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3085.832..3085.832 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.970..524.460 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 16:19:01.822 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,73,"",2021-03-21 14:47:00 CET,4/81,0,LOG,00000,"duration: 103670.034 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98963.646..98963.647 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98959.780..103667.846 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98903.441..98903.441 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86466.832..97612.633 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9926.553..16531.037 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9923.937..14756.625 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.400..4350.724 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.440..1801.676 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.922..0.923 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.744..0.821 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1817.394..1817.394 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.805..531.069 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.536..2.536 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.508..2.511 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60514.915..60514.915 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11654.395..25565.721 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.624..5566.371 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=224.716..224.716 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.920..91.624 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:21:25.640 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,74,"",2021-03-21 14:47:00 CET,4/82,0,LOG,00000,"duration: 143764.023 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=13954570.86..13954570.87 rows=1 width=8) (actual time=132418.884..132418.884 rows=1 loops=1)
  ->  Gather  (cost=13954570.64..13954570.85 rows=2 width=8) (actual time=132412.918..143761.813 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13953570.64..13953570.65 rows=1 width=8) (actual time=132362.406..132362.407 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13592403.35 rows=144466917 width=0) (actual time=121778.876..131014.604 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..11233140.38 rows=150000000 width=8) (actual time=106805.179..116182.005 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=71589.722..95102.570 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71588.480..88159.269 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.690..5069.124 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.717..2215.435 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.926..0.927 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.906..0.908 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51763.957..51763.957 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.092..8356.099 rows=20000000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.187..1.187 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.898..0.999 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4058.606..4058.606 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.684..541.605 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.517..222.517 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.789..85.321 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:23:06.928 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,75,"",2021-03-21 14:47:00 CET,4/83,0,LOG,00000,"duration: 101252.844 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96152.412..96152.412 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96146.709..101252.701 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96095.399..96095.399 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83587.265..94803.908 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8558.525..15248.075 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8556.765..13421.336 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.068..4417.481 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.851..1828.126 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.164..1.165 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.958..1.043 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1307.758..1307.758 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.202..530.937 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.699..1.700 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.673..1.675 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59396.868..59396.868 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11937.563..25815.212 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.968..5852.349 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=230.778..230.778 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.189..93.322 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:25:02.443 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,76,"",2021-03-21 14:47:00 CET,4/84,0,LOG,00000,"duration: 115462.565 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10491032.48..10491032.49 rows=1 width=8) (actual time=106114.073..106114.073 rows=1 loops=1)
  ->  Gather  (cost=10491032.27..10491032.48 rows=2 width=8) (actual time=106109.312..115461.122 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10490032.27..10490032.28 rows=1 width=8) (actual time=106063.031..106063.032 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..10128864.97 rows=144466917 width=0) (actual time=95980.335..104757.899 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..7769602.00 rows=150000000 width=8) (actual time=77602.074..90788.903 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Parallel Hash Join  (cost=96734.63..3759830.63 rows=50000100 width=8) (actual time=9708.977..14266.414 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.016..5901.236 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.471..3895.756 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.780..1732.558 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.657..0.657 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.646..0.647 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.510..1.510 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.327..1.407 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1263.355..1263.355 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.583..504.333 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=54306.452..54306.453 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.912..8007.944 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=225.677..225.677 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.862..86.765 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:26:49.729 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,77,"",2021-03-21 14:47:00 CET,4/85,0,LOG,00000,"duration: 107257.408 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99689.533..99689.533 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99683.238..107257.262 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99633.753..99633.754 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=87241.898..98347.593 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8842.941..15536.931 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8840.661..13712.301 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.451..4410.887 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.091..1798.140 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.319..1.320 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.044..1.164 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.349..1318.349 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.973..520.623 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.189..2.189 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.169..2.172 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=63098.339..63098.339 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12179.493..25883.509 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.949..5829.744 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.264..200.265 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.927..84.682 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:29:09.394 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,78,"",2021-03-21 14:47:00 CET,4/86,0,LOG,00000,"duration: 139614.832 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=14247540.86..14247540.87 rows=1 width=8) (actual time=130218.741..130218.741 rows=1 loops=1)
  ->  Gather  (cost=14247540.64..14247540.85 rows=2 width=8) (actual time=130211.609..139612.700 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14246540.64..14246540.65 rows=1 width=8) (actual time=130151.378..130151.378 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13885373.35 rows=144466917 width=0) (actual time=119294.645..128765.310 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..11526110.38 rows=150000000 width=8) (actual time=97703.737..113725.082 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=97702.797..108182.708 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=70378.363..87772.572 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.544..5053.220 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.622..2213.094 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.863..0.863 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.845..0.847 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51098.276..51098.276 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.539..8484.832 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1759.312..1759.312 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.781..507.975 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.890..0.891 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.669..0.763 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=231.255..231.255 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.813..100.536 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:30:56.368 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,79,"",2021-03-21 14:47:00 CET,4/87,0,LOG,00000,"duration: 106950.117 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98384.111..98384.112 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98376.445..106948.204 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98326.108..98326.108 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86316.958..97095.314 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8722.159..15255.280 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8720.147..13456.416 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.599..4444.775 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.485..1839.716 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.061..1.061 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.827..0.937 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1311.047..1311.048 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.816..514.404 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.938..1.938 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.914..1.917 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61029.259..61029.259 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12341.945..26218.588 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.947..5798.941 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=495.836..495.836 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.814..103.934 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:32:15.800 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,80,"",2021-03-21 14:47:00 CET,4/88,0,LOG,00000,"duration: 79379.218 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12254261.19..12254261.20 rows=1 width=8) (actual time=75954.360..75954.360 rows=1 loops=1)
  ->  Gather  (cost=12254260.98..12254261.19 rows=2 width=8) (actual time=75950.113..79378.648 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12253260.98..12253260.99 rows=1 width=8) (actual time=75901.412..75901.412 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=719506.04..11892093.68 rows=144466917 width=0) (actual time=66432.496..74693.435 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=698193.04..9532830.71 rows=150000000 width=8) (actual time=34547.752..60187.015 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=34546.625..54362.225 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34546.131..48946.815 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.587..7068.364 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16278.568..16278.568 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6823.943..11896.460 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.452..2459.866 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1371.708..1371.708 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.775..507.253 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.469..0.469 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.461..0.462 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.093..1.093 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.848..0.955 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=195.940..195.940 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.048..84.547 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:34:01.059 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,81,"",2021-03-21 14:47:00 CET,4/89,0,LOG,00000,"duration: 105241.176 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97043.247..97043.247 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97037.840..105241.052 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96991.809..96991.809 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84877.615..95786.577 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8607.574..15290.627 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8605.563..13476.099 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=4.120..4354.261 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.745..1793.858 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.317..1.317 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.052..1.163 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1392.029..1392.030 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.926..563.504 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.899..1.899 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.874..1.877 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60808.849..60808.849 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12026.436..26107.021 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.964..5653.569 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.520..201.520 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.822..85.917 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:36:21.848 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,82,"",2021-03-21 14:47:00 CET,4/90,0,LOG,00000,"duration: 140726.221 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=14247540.86..14247540.87 rows=1 width=8) (actual time=130281.318..130281.318 rows=1 loops=1)
  ->  Gather  (cost=14247540.64..14247540.85 rows=2 width=8) (actual time=130273.466..140725.705 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14246540.64..14246540.65 rows=1 width=8) (actual time=130217.603..130217.603 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13885373.35 rows=144466917 width=0) (actual time=120352.887..128945.365 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..11526110.38 rows=150000000 width=8) (actual time=98662.266..114499.639 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=98661.037..109034.935 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71135.818..88539.647 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.331..5017.393 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.964..2202.652 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.293..1.293 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.250..1.253 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52832.676..52832.676 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.907..8433.122 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1213.085..1213.086 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.799..474.353 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.188..1.188 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.951..1.047 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=239.782..239.783 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.967..105.582 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:38:04.214 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,83,"",2021-03-21 14:47:00 CET,4/91,0,LOG,00000,"duration: 102338.566 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97301.685..97301.685 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97295.675..102338.416 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97240.650..97240.650 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84765.509..95957.444 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8648.127..15426.747 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8646.037..13594.233 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.813..4389.385 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.452..1811.874 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.298..1.299 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.068..1.174 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1353.149..1353.149 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.658..536.069 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.994..1.994 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.974..1.976 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60462.899..60462.899 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12030.182..25681.153 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.646..5656.351 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.528..218.528 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.864..95.582 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:39:39.035 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,84,"",2021-03-21 14:47:00 CET,4/92,0,LOG,00000,"duration: 94773.805 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=13201308.15..13201308.16 rows=1 width=8) (actual time=90856.579..90856.579 rows=1 loops=1)
  ->  Gather  (cost=13201307.94..13201308.15 rows=2 width=8) (actual time=90852.342..94773.177 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13200307.94..13200307.95 rows=1 width=8) (actual time=90796.461..90796.461 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..12839140.64 rows=144466917 width=0) (actual time=80959.357..89533.508 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=507869.00..10479877.67 rows=150000000 width=8) (actual time=63183.619..72463.471 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=25645.630..54094.959 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25644.650..48082.829 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25643.847..41808.223 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.348..7055.083 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7811.043..7811.044 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.285..2693.759 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.777..0.777 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.549..0.658 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.930..0.930 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.915..0.917 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1276.432..1276.432 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.201..486.800 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=3409.735..3409.735 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.083..112.940 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:41:24.340 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,85,"",2021-03-21 14:47:00 CET,4/93,0,LOG,00000,"duration: 105282.790 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97060.153..97060.153 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97055.744..105282.545 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97003.468..97003.468 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84723.206..95755.572 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8730.955..15372.570 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8728.488..13561.796 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.675..4374.892 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.673..1794.224 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.954..0.955 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.835 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1479.556..1479.557 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.119..537.439 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.347..2.347 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.303..2.306 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60437.320..60437.320 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11977.690..26066.926 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.873..5706.667 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=206.492..206.492 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.863..89.379 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:43:02.684 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,86,"",2021-03-21 14:47:00 CET,4/94,0,LOG,00000,"duration: 98291.381 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12460649.47..12460649.48 rows=1 width=8) (actual time=94191.099..94191.099 rows=1 loops=1)
  ->  Gather  (cost=12460649.25..12460649.46 rows=2 width=8) (actual time=94188.187..98291.249 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12459649.25..12459649.26 rows=1 width=8) (actual time=94126.857..94126.857 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..12098481.96 rows=144466918 width=0) (actual time=84730.336..92884.711 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432500.63..9540733.50 rows=144466918 width=8) (actual time=50429.196..75929.098 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=432484.38..7554297.13 rows=144466918 width=16) (actual time=50428.475..69824.304 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=50427.778..64605.458 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25699.273..42109.915 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.469..7519.742 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7277.096..7277.097 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.416..2616.299 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.408..205.408 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.783..86.311 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.675..0.675 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.641..0.643 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.682..0.683 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.594 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1265.788..1265.789 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.016..524.259 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 16:44:46.810 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,87,"",2021-03-21 14:47:00 CET,4/95,0,LOG,00000,"duration: 104097.989 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98808.221..98808.222 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98802.591..104097.831 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98754.787..98754.788 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86221.413..97459.456 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8682.917..15635.926 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8680.945..13814.150 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.732..4307.293 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.538..1782.655 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.144..1.144 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.964..1.048 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1306.655..1306.655 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.920..533.910 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.823..1.823 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.791..1.793 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61427.003..61427.003 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13276.870..27232.439 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.798..5587.431 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.989..213.989 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.826..96.776 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:46:15.511 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,88,"",2021-03-21 14:47:00 CET,4/96,0,LOG,00000,"duration: 88655.831 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10638158.38..10638158.39 rows=1 width=8) (actual time=84873.601..84873.602 rows=1 loops=1)
  ->  Gather  (cost=10638158.17..10638158.38 rows=2 width=8) (actual time=84869.791..88655.293 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10637158.17..10637158.18 rows=1 width=8) (actual time=84822.211..84822.211 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..10275990.88 rows=144466917 width=0) (actual time=75376.496..83600.169 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=614314.56..7916727.90 rows=150000000 width=8) (actual time=54923.744..70118.762 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=54922.906..65170.355 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26278.582..41941.958 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.982..6983.076 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9091.647..9091.648 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.130..4532.745 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.335..1923.605 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.758..0.758 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.548..0.641 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4404.328..4404.329 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.748..522.304 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.798..0.798 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.787..0.789 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.250..222.250 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.918..92.634 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:48:01.028 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,89,"",2021-03-21 14:47:00 CET,4/97,0,LOG,00000,"duration: 105495.881 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99174.346..99174.347 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99164.932..105493.444 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99117.936..99117.936 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86400.349..97830.445 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9054.674..15792.646 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9052.721..13960.467 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.230..4455.875 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.736..1836.259 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.443..1.444 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.134..1.270 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1486.683..1486.684 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.936..674.262 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.876..1.876 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.847..1.849 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60567.308..60567.308 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13184.077..27242.931 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.943..5769.096 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.557..200.557 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.115..84.116 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:49:40.016 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,90,"",2021-03-21 14:47:00 CET,4/98,0,LOG,00000,"duration: 98939.469 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14826110.23..14826110.24 rows=1 width=8) (actual time=94638.590..94638.591 rows=1 loops=1)
  ->  Gather  (cost=14826110.01..14826110.22 rows=2 width=8) (actual time=94635.588..98939.249 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14825110.01..14825110.02 rows=1 width=8) (actual time=94578.524..94578.525 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..14463942.72 rows=144466917 width=0) (actual time=84329.663..93213.569 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=432500.63..11906194.27 rows=144466917 width=8) (actual time=63628.143..75550.725 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=411187.63..9253963.29 rows=150000000 width=16) (actual time=28458.184..56622.362 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=28457.119..50343.280 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=28456.508..44454.645 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.490..7522.667 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10038.173..10038.174 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.367..2875.280 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.585..0.585 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.572..0.573 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.013..1.014 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.783..0.888 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=237.113..237.114 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.978..89.076 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.815..1323.815 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.048..517.734 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 16:51:22.711 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,91,"",2021-03-21 14:47:00 CET,4/99,0,LOG,00000,"duration: 102665.743 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97749.497..97749.498 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97742.769..102665.609 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97694.645..97694.645 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85233.214..96398.863 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8334.751..14975.781 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8332.809..13166.480 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.369..4251.695 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.437..1741.771 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.891..0.892 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.703..0.789 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1326.033..1326.033 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.059..569.064 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.860..1.860 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.836..1.838 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61050.329..61050.330 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13045.814..26810.395 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.793..5727.872 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.106..201.106 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.820..88.283 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:52:55.464 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,92,"",2021-03-21 14:47:00 CET,4/100,0,LOG,00000,"duration: 92707.169 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8639160.97..8639160.98 rows=1 width=8) (actual time=89394.837..89394.837 rows=1 loops=1)
  ->  Gather  (cost=8639160.75..8639160.96 rows=2 width=8) (actual time=89391.347..92706.775 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8638160.75..8638160.76 rows=1 width=8) (actual time=89333.196..89333.196 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8276993.46 rows=144466918 width=0) (actual time=75039.346..88087.716 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3160419.71 rows=24077820 width=8) (actual time=75038.483..83409.144 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432463.63..2599749.98 rows=24077820 width=16) (actual time=41005.609..62864.122 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=41004.649..56197.783 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11891.335..24077.076 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.311..5956.865 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=220.547..220.548 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.743..82.991 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7566.742..7566.742 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.317..2697.491 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.913..0.913 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.705..0.798 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4426.855..4426.855 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.825..508.381 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.573..0.573 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.545..0.547 rows=4 loops=3)",,,,,,,,,""
2021-03-21 16:54:36.441 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,93,"",2021-03-21 14:47:00 CET,4/101,0,LOG,00000,"duration: 100951.380 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95861.538..95861.539 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95857.500..100951.262 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95805.972..95805.972 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83349.510..94507.210 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8555.166..15079.378 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8553.249..13282.336 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.407..4347.189 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.249..1785.877 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.112..1.112 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.903..0.997 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1354.240..1354.241 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.855..534.544 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.861..1.861 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.840..1.842 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59488.683..59488.683 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12406.283..26564.521 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.093..5718.100 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=210.328..210.328 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.956..85.260 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:56:40.899 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,94,"",2021-03-21 14:47:00 CET,4/102,0,LOG,00000,"duration: 124397.204 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12061345.11..12061345.12 rows=1 width=8) (actual time=116089.197..116089.197 rows=1 loops=1)
  ->  Gather  (cost=12061344.89..12061345.10 rows=2 width=8) (actual time=116083.862..124394.900 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12060344.89..12060344.90 rows=1 width=8) (actual time=116032.852..116032.852 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..11699177.60 rows=144466917 width=0) (actual time=106815.147..114818.402 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..9339914.63 rows=150000000 width=8) (actual time=81386.366..101388.161 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=81385.293..95825.191 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8891.731..14010.838 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.411..4326.478 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.610..1786.369 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.759..0.762 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.742..0.744 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1748.459..1748.460 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.755..495.664 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=55295.023..55295.023 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.334..7990.809 rows=20000000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.038..1.038 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.804..0.911 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=236.135..236.135 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.058..83.975 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:58:23.331 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,95,"",2021-03-21 14:47:00 CET,4/103,0,LOG,00000,"duration: 102398.218 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95791.173..95791.173 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95785.095..102398.086 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95732.231..95732.231 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83292.200..94445.915 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8356.901..15191.672 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8354.997..13377.213 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.003..4300.216 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.516..1748.380 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.447..1.447 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.166..1.283 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.880..1280.880 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.687..505.832 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.794..1.794 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.767..1.769 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59040.595..59040.595 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11126.550..24795.142 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.564..5415.932 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.192..213.193 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.930..89.403 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 16:59:39.977 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,96,"",2021-03-21 14:47:00 CET,4/104,0,LOG,00000,"duration: 76606.461 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10273792.75..10273792.76 rows=1 width=8) (actual time=72849.548..72849.548 rows=1 loops=1)
  ->  Gather  (cost=10273792.54..10273792.75 rows=2 width=8) (actual time=72845.098..76606.375 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10272792.54..10272792.55 rows=1 width=8) (actual time=72789.439..72789.439 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=809675.61..9911625.25 rows=144466917 width=0) (actual time=62874.050..71502.593 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=788362.60..7552362.27 rows=150000000 width=8) (actual time=37490.642..57256.040 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=37489.805..51739.251 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.052..7538.068 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=19253.521..19253.521 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9860.480..14794.975 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.381..4442.718 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.556..1810.043 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.777..0.777 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.631 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2435.365..2435.365 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.700..518.010 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.792..0.792 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.778..0.780 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=277.087..277.087 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.973..118.226 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:01:23.573 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,97,"",2021-03-21 14:47:00 CET,4/105,0,LOG,00000,"duration: 103570.015 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98371.107..98371.107 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98367.089..103569.859 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98311.741..98311.742 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85659.966..97018.425 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=10355.392..16969.045 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=10353.335..15159.849 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.877..5527.474 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.798..2863.279 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.036..1.036 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.831..0.921 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1769.211..1769.211 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.661..509.481 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.980..1.981 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.964..1.967 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59685.454..59685.455 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12460.862..26148.441 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..5735.592 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=195.919..195.922 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.820..83.148 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:02:57.185 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,98,"",2021-03-21 14:47:00 CET,4/106,0,LOG,00000,"duration: 93566.222 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8686186.97..8686186.98 rows=1 width=8) (actual time=89729.524..89729.524 rows=1 loops=1)
  ->  Gather  (cost=8686186.75..8686186.96 rows=2 width=8) (actual time=89727.109..93566.119 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8685186.75..8685186.76 rows=1 width=8) (actual time=89669.534..89669.534 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8324019.46 rows=144466918 width=0) (actual time=68979.835..88386.431 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3207445.71 rows=24077820 width=8) (actual time=68978.895..83398.084 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=68977.984..78405.614 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=41299.746..56655.318 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11858.885..23976.770 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.764..5884.465 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.623..204.623 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.841..83.921 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7491.066..7491.066 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.442..2673.781 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4110.619..4110.619 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.980..488.305 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.890..0.890 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.597..0.726 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.631..0.631 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.603..0.605 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:04:41.064 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,99,"",2021-03-21 14:47:00 CET,4/107,0,LOG,00000,"duration: 103849.199 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98976.015..98976.015 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98969.371..103846.819 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98922.877..98922.877 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86431.770..97629.038 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8770.089..15369.430 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8768.541..13571.677 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.593..4327.541 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.590..1776.401 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.960..0.961 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.685..0.803 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1649.494..1649.495 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.360..500.635 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.489..1.489 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.469..1.471 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61045.196..61045.196 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13753.760..27600.365 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.900..5787.374 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=263.569..263.569 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.891..89.633 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:06:14.928 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,100,"",2021-03-21 14:47:00 CET,4/108,0,LOG,00000,"duration: 93810.671 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8686186.97..8686186.98 rows=1 width=8) (actual time=90007.662..90007.662 rows=1 loops=1)
  ->  Gather  (cost=8686186.75..8686186.96 rows=2 width=8) (actual time=90004.887..93810.126 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8685186.75..8685186.76 rows=1 width=8) (actual time=89953.759..89953.759 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8324019.46 rows=144466918 width=0) (actual time=69802.270..88722.188 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3207445.71 rows=24077820 width=8) (actual time=69801.274..83885.361 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=69800.331..78959.083 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=44383.187..59968.247 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12168.761..23809.539 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.592..5926.764 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=467.095..467.099 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.781..83.197 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10306.398..10306.398 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.423..2621.897 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1361.921..1361.921 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.885..485.987 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.919..0.919 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.663..0.770 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.625..0.625 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.596..0.599 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:07:57.442 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,101,"",2021-03-21 14:47:00 CET,4/109,0,LOG,00000,"duration: 102491.602 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=97756.299..97756.299 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97748.951..102489.492 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97692.959..97692.960 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85210.410..96404.127 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8966.856..15583.769 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8964.339..13788.012 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.604..4341.933 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.628..1777.795 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.935..0.936 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.712..0.812 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1795.514..1795.514 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.120..515.619 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.451..2.452 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.429..2.432 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59561.379..59561.379 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12141.697..25822.286 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.786..5557.142 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=176.191..176.191 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.923..75.240 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:10:14.827 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,102,"",2021-03-21 14:47:00 CET,4/110,0,LOG,00000,"duration: 137342.997 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=14247540.86..14247540.87 rows=1 width=8) (actual time=126594.443..126594.444 rows=1 loops=1)
  ->  Gather  (cost=14247540.64..14247540.85 rows=2 width=8) (actual time=126589.701..137341.569 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14246540.64..14246540.65 rows=1 width=8) (actual time=126539.075..126539.075 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13885373.35 rows=144466917 width=0) (actual time=116973.385..125296.891 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..11526110.38 rows=150000000 width=8) (actual time=97461.192..111932.610 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=97460.196..106873.700 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69728.241..85770.830 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.874..4705.327 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.832..2040.906 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.995..0.995 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.976..0.978 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50446.920..50446.921 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.931..7937.203 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4219.931..4219.932 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.872..488.843 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.952..0.953 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.762..0.850 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=256.441..256.441 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.887..93.313 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:11:58.132 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,103,"",2021-03-21 14:47:00 CET,4/111,0,LOG,00000,"duration: 103280.952 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98488.305..98488.305 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98483.681..103278.754 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98429.965..98429.965 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86102.014..97156.814 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8843.762..15471.084 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8842.431..13677.070 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.841..4351.425 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.555..1786.602 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.244..1.245 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.054..1.140 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1482.545..1482.546 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.253..507.725 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.284..1.285 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.267..1.268 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60736.296..60736.296 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12747.424..26690.461 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.926..5667.670 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.706..204.706 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.809..80.710 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:13:20.515 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,104,"",2021-03-21 14:47:00 CET,4/112,0,LOG,00000,"duration: 82331.862 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10132940.43..10132940.44 rows=1 width=8) (actual time=79043.790..79043.790 rows=1 loops=1)
  ->  Gather  (cost=10132940.21..10132940.42 rows=2 width=8) (actual time=79040.030..82331.449 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10131940.21..10131940.22 rows=1 width=8) (actual time=78987.412..78987.412 rows=1 loops=3)
              ->  Hash Join  (cost=719506.04..9770772.92 rows=144466918 width=0) (actual time=58015.446..77717.262 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=719489.79..7784336.54 rows=144466918 width=8) (actual time=58013.737..72583.683 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=719452.79..2667762.79 rows=24077820 width=16) (actual time=58012.888..68099.775 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=36877.619..51089.583 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.254..7184.313 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=19778.284..19778.284 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=9650.801..14744.305 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.341..2419.732 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4356.076..4356.076 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.989..460.566 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=313.238..313.238 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.033..123.329 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.827..0.827 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.803..0.807 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.260..1.260 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.064..1.146 rows=500 loops=3)",,,,,,,,,""
2021-03-21 17:15:03.781 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,105,"",2021-03-21 14:47:00 CET,4/113,0,LOG,00000,"duration: 103242.673 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96340.000..96340.000 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96333.835..103242.550 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96282.413..96282.414 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83838.967..94997.859 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8576.821..15101.653 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8574.679..13314.592 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.802..4185.717 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.578..1685.168 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.183..1.184 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.956..1.055 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1583.550..1583.550 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.078..496.547 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.053..2.054 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.024..2.027 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59517.386..59517.386 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11792.560..25840.163 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.044..5495.851 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=194.218..194.219 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.761..82.595 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:16:34.159 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,106,"",2021-03-21 14:47:00 CET,4/114,0,LOG,00000,"duration: 90326.597 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13107360.23..13107360.24 rows=1 width=8) (actual time=86689.947..86689.947 rows=1 loops=1)
  ->  Gather  (cost=13107360.01..13107360.22 rows=2 width=8) (actual time=86687.213..90326.499 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13106360.01..13106360.02 rows=1 width=8) (actual time=86637.318..86637.319 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..12745192.72 rows=144466917 width=0) (actual time=77505.838..85396.291 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=432500.63..10187444.27 rows=144466917 width=8) (actual time=57906.562..68728.182 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=24985.995..51739.473 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24985.136..46236.462 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24984.389..40156.696 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.550..7138.976 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7477.666..7477.667 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.337..2691.682 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.720..0.720 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.530..0.612 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.818..0.819 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.806..0.808 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=219.989..219.989 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.772..89.339 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2609.572..2609.572 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.797..487.337 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 17:18:17.041 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,107,"",2021-03-21 14:47:00 CET,4/115,0,LOG,00000,"duration: 102851.828 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98221.444..98221.444 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98214.142..102849.787 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98163.214..98163.214 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85944.360..96934.311 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9195.418..15834.248 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9193.245..14024.789 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.685..4465.326 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.570..1814.959 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.079..1.080 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.898..0.979 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1276.399..1276.400 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.592..505.138 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.094..2.095 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.065..2.068 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60167.453..60167.453 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12868.510..26789.170 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.963..5812.101 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=198.390..198.390 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.944..82.907 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:19:32.069 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,108,"",2021-03-21 14:47:00 CET,4/116,0,LOG,00000,"duration: 74985.487 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8179723.87..8179723.88 rows=1 width=8) (actual time=71885.826..71885.826 rows=1 loops=1)
  ->  Gather  (cost=8179723.65..8179723.86 rows=2 width=8) (actual time=71881.529..74984.849 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8178723.65..8178723.66 rows=1 width=8) (actual time=71832.767..71832.768 rows=1 loops=3)
              ->  Hash Join  (cost=809675.61..7817556.36 rows=144466918 width=0) (actual time=56886.623..70613.365 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=809638.61..2700982.61 rows=24077820 width=8) (actual time=56885.760..66018.206 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=37114.981..50901.428 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.482..7087.149 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=20219.422..20219.423 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=11305.939..15880.151 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.284..4148.616 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.428..1675.589 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.812..0.813 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.518..0.648 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4232.006..4232.007 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..488.219 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.794..213.794 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.831..81.627 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.651..0.651 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.628..0.630 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:21:17.803 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,109,"",2021-03-21 14:47:00 CET,4/117,0,LOG,00000,"duration: 105709.782 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=101166.054..101166.054 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=101159.732..105709.656 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=101100.721..101100.722 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=87718.220..99733.421 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8666.507..15711.067 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8664.107..13826.128 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.464..4463.239 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.448..1835.683 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.979..0.980 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.802..0.886 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1345.145..1345.146 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.850..526.212 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.296..2.296 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.270..2.272 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62646.727..62646.727 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13005.706..27795.898 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.098..6068.065 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=855.180..855.180 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.989..117.238 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:22:56.438 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,110,"",2021-03-21 14:47:00 CET,4/118,0,LOG,00000,"duration: 98579.245 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12742811.47..12742811.48 rows=1 width=8) (actual time=93623.002..93623.002 rows=1 loops=1)
  ->  Gather  (cost=12742811.25..12742811.46 rows=2 width=8) (actual time=93620.219..98579.157 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12741811.25..12741811.26 rows=1 width=8) (actual time=93564.262..93564.262 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..12380643.96 rows=144466918 width=0) (actual time=78159.784..92273.482 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=529165.75..10394207.58 rows=144466918 width=8) (actual time=78158.356..87129.487 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432484.38..7554297.13 rows=144466918 width=16) (actual time=46856.899..65749.588 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=46856.147..60190.707 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24262.716..39267.621 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.459..6965.748 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7361.984..7361.985 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.484..2630.381 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.540..200.540 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.646..83.740 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.706..0.706 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.689..0.691 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4507.555..4507.555 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.326..530.176 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.173..1.173 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.886..1.004 rows=500 loops=3)",,,,,,,,,""
2021-03-21 17:24:40.092 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,111,"",2021-03-21 14:47:00 CET,4/119,0,LOG,00000,"duration: 103635.411 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95794.305..95794.305 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95786.388..103633.272 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95729.910..95729.910 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=82548.770..94393.685 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8337.880..15030.025 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8335.395..13213.622 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.023..4297.844 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.676..1753.844 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.303..1.303 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.028..1.149 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1275.995..1275.996 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.106..508.785 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.409..2.410 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.390..2.392 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58850.343..58850.343 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11654.700..26000.358 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.818..5691.206 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=235.906..235.906 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.862..85.837 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:26:03.698 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,112,"",2021-03-21 14:47:00 CET,4/120,0,LOG,00000,"duration: 83563.929 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12861917.79..12861917.80 rows=1 width=8) (actual time=80004.228..80004.229 rows=1 loops=1)
  ->  Gather  (cost=12861917.57..12861917.78 rows=2 width=8) (actual time=80001.304..83563.840 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12860917.57..12860917.58 rows=1 width=8) (actual time=79951.268..79951.268 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12499750.28 rows=144466917 width=0) (actual time=70967.205..78748.982 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=538946.19..9942001.83 rows=144466917 width=8) (actual time=51985.928..62966.801 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=25857.779..45941.402 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25856.716..40239.973 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.480..7048.934 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8523.163..8523.164 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.288..4232.845 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.506..1784.793 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.742..0.743 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.531..0.628 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.019..1.019 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.003..1.005 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=210.875..210.876 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.825..81.823 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1765.659..1765.659 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.896..496.025 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 17:27:49.618 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,113,"",2021-03-21 14:47:00 CET,4/121,0,LOG,00000,"duration: 105898.965 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98740.088..98740.088 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98734.405..105898.864 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98682.805..98682.806 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86162.972..97393.807 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8531.944..15221.864 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8530.451..13421.928 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.492..4441.308 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.582..1824.585 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.862..0.863 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.664..0.755 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1233.665..1233.665 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.276..495.990 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.434..1.434 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.415..1.417 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61602.237..61602.238 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12965.063..26821.530 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.069..5681.997 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=197.625..197.625 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.803..82.056 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:29:06.971 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,114,"",2021-03-21 14:47:00 CET,4/122,0,LOG,00000,"duration: 77297.596 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8195999.87..8195999.88 rows=1 width=8) (actual time=73651.495..73651.495 rows=1 loops=1)
  ->  Gather  (cost=8195999.65..8195999.86 rows=2 width=8) (actual time=73647.211..77297.043 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8194999.65..8194999.66 rows=1 width=8) (actual time=73591.026..73591.026 rows=1 loops=3)
              ->  Hash Join  (cost=825951.61..7833832.36 rows=144466918 width=0) (actual time=58783.363..72384.315 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=825914.61..2717258.61 rows=24077820 width=8) (actual time=58782.579..67832.136 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=37361.690..51121.392 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.507..8146.349 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=18584.160..18584.161 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=7358.101..14215.334 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7356.992..12219.888 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.637..2567.816 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1595.060..1595.061 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.785..494.341 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.083..1.083 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.819..0.931 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.032..204.032 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.011..86.405 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.559..0.560 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.533..0.535 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:30:52.004 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,115,"",2021-03-21 14:47:00 CET,4/123,0,LOG,00000,"duration: 105011.309 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96728.119..96728.119 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96722.567..105008.627 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96675.639..96675.640 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=84157.387..95370.818 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8611.529..15263.316 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8609.344..13448.359 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.396..4411.945 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.454..1807.322 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.905..0.905 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.732..0.811 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1301.121..1301.122 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.474..540.166 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.098..2.099 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.070..2.073 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60011.847..60011.847 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13093.079..27095.955 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.862..6681.233 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=197.437..197.437 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.807..84.040 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:32:25.200 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,116,"",2021-03-21 14:47:00 CET,4/124,0,LOG,00000,"duration: 93141.586 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15429916.26..15429916.27 rows=1 width=8) (actual time=88538.887..88538.888 rows=1 loops=1)
  ->  Gather  (cost=15429916.05..15429916.26 rows=2 width=8) (actual time=88534.218..93141.162 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15428916.05..15428916.06 rows=1 width=8) (actual time=88479.023..88479.024 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..15067748.75 rows=144466917 width=0) (actual time=72801.769..87216.438 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=529165.75..13081312.39 rows=144466917 width=8) (actual time=72800.760..82157.610 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=57062.069..67109.909 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24187.005..47183.623 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24186.182..40424.221 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.862..7025.598 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7345.970..7345.971 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.089..2622.375 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.772..0.773 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.755..0.758 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1363.509..1363.510 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.864..534.896 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=199.960..199.960 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.038..83.514 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.796..0.796 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.572..0.672 rows=500 loops=3)",,,,,,,,,""
2021-03-21 17:34:11.458 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,117,"",2021-03-21 14:47:00 CET,4/125,0,LOG,00000,"duration: 106227.896 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98277.551..98277.551 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98269.129..106225.789 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98221.487..98221.487 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85754.236..96934.965 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9001.542..15699.256 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9000.066..13875.244 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.583..4404.741 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.540..1809.587 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.993..0.994 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.770..0.868 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1253.603..1253.603 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.280..515.256 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.419..1.419 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.394..1.396 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61162.801..61162.801 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12570.353..26249.162 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.862..6574.769 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=197.959..197.959 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.883..84.905 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:35:48.170 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,118,"",2021-03-21 14:47:00 CET,4/126,0,LOG,00000,"duration: 96674.641 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13107360.23..13107360.24 rows=1 width=8) (actual time=93191.932..93191.932 rows=1 loops=1)
  ->  Gather  (cost=13107360.01..13107360.22 rows=2 width=8) (actual time=93188.055..96674.507 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13106360.01..13106360.02 rows=1 width=8) (actual time=93139.167..93139.167 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..12745192.72 rows=144466917 width=0) (actual time=83029.051..91795.154 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=432500.63..10187444.27 rows=144466917 width=8) (actual time=62399.275..74248.053 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=26273.786..55327.054 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=26272.916..49457.957 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26272.161..43098.144 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.429..8446.166 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7247.631..7247.632 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.395..2628.993 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.731..0.731 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.564..0.639 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.830..0.830 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.811..0.813 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=547.241..547.242 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.953..92.030 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1314.685..1314.686 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.831..529.601 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 17:37:31.584 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,119,"",2021-03-21 14:47:00 CET,4/127,0,LOG,00000,"duration: 103379.044 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96083.617..96083.617 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96080.027..103376.620 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96027.958..96027.958 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83479.130..94735.155 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8105.134..14775.103 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8103.311..12953.972 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.570..4131.284 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.509..1688.434 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.014..1.015 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.772..0.885 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1256.290..1256.291 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.565..507.144 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.764..1.764 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.743..1.749 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59275.128..59275.128 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12235.183..26064.270 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.115..5541.269 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=196.740..196.741 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.040..79.192 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:39:14.876 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,120,"",2021-03-21 14:47:00 CET,4/128,0,LOG,00000,"duration: 103240.613 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8874507.96..8874507.97 rows=1 width=8) (actual time=98827.985..98827.986 rows=1 loops=1)
  ->  Gather  (cost=8874507.74..8874507.95 rows=2 width=8) (actual time=98823.954..103240.443 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8873507.74..8873507.75 rows=1 width=8) (actual time=98765.995..98765.995 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8512340.45 rows=144466918 width=0) (actual time=76463.119..97443.544 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3395766.70 rows=24077820 width=8) (actual time=76462.213..92372.228 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..3064680.42 rows=24077820 width=16) (actual time=76461.359..87268.984 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=56257.289..68487.493 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25870.371..43688.716 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.718..7484.741 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7527.543..7527.543 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.157..2749.443 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2588.850..2588.850 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.771..502.237 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=260.984..260.984 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.223..112.064 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.830..0.830 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.569..0.683 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.666..0.666 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.640..0.642 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:40:59.627 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,121,"",2021-03-21 14:47:00 CET,4/129,0,LOG,00000,"duration: 104729.656 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96632.363..96632.363 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96624.177..104727.301 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96572.376..96572.376 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=84358.285..95345.357 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8696.530..15398.375 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8694.418..13583.403 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.387..4242.679 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.715..1737.239 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.623..1.624 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.401..1.498 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1331.642..1331.642 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.768..522.559 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.046..2.046 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.020..2.023 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59876.536..59876.536 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12207.606..26203.112 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.977..5653.490 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=196.148..196.148 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.976..82.090 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:43:01.451 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,122,"",2021-03-21 14:47:00 CET,4/130,0,LOG,00000,"duration: 121781.190 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11424282.01..11424282.02 rows=1 width=8) (actual time=116634.693..116634.694 rows=1 loops=1)
  ->  Gather  (cost=11424281.79..11424282.00 rows=2 width=8) (actual time=116630.365..121781.041 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11423281.79..11423281.80 rows=1 width=8) (actual time=116581.245..116581.245 rows=1 loops=3)
              ->  Hash Join  (cost=1302618.63..11062114.50 rows=144466917 width=0) (actual time=101552.363..115367.439 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1302602.38..9075678.14 rows=144466917 width=8) (actual time=101551.447..110549.267 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..6423447.17 rows=150000000 width=16) (actual time=79850.782..95076.424 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7042.888..14425.448 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7041.309..12467.629 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.656..2626.233 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1350.259..1350.260 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.787..528.815 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.504..1.504 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.480..1.482 rows=4 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51622.953..51622.954 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.280..8108.786 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.085..201.085 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.050..84.538 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.707..0.707 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.605 rows=500 loops=3)",,,,,,,,,""
2021-03-21 17:44:48.733 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,123,"",2021-03-21 14:47:00 CET,4/131,0,LOG,00000,"duration: 107250.599 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=100182.265..100182.265 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=100176.733..107250.480 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=100130.232..100130.232 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=87548.059..98831.914 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9383.009..16160.319 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9380.819..14350.896 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.911..4343.130 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.534..1780.462 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.330..1.331 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.009..1.149 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1396.611..1396.611 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.820..509.617 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.114..2.114 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.090..2.092 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62416.907..62416.907 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=15338.589..29132.106 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.706..5774.003 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=272.679..272.680 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.888..87.244 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:46:43.161 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,124,"",2021-03-21 14:47:00 CET,4/132,0,LOG,00000,"duration: 114379.309 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9145543.46..9145543.47 rows=1 width=8) (actual time=105232.941..105232.941 rows=1 loops=1)
  ->  Gather  (cost=9145543.24..9145543.45 rows=2 width=8) (actual time=105229.188..114378.823 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9144543.24..9144543.25 rows=1 width=8) (actual time=105177.934..105177.935 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..8783375.95 rows=144466917 width=0) (actual time=95785.067..103959.985 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=76851.804..90459.365 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8640.979..15361.993 rows=6666667 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8638.819..13551.483 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.010..4402.476 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.960..1802.142 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.998..0.999 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.801..0.885 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.421..1259.421 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.473..507.237 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.087..2.087 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.070..2.073 rows=4 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52288.818..52288.818 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.342..8217.203 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=234.249..234.249 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.882..98.552 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:48:25.237 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,125,"",2021-03-21 14:47:00 CET,4/133,0,LOG,00000,"duration: 102050.506 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96621.902..96621.902 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96616.478..102050.391 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96566.683..96566.683 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83763.211..95234.216 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8602.014..15312.437 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8600.067..13505.581 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.700..4389.413 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.491..1795.710 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.167..1.167 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.949..1.046 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1292.201..1292.202 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.788..524.271 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.868..1.868 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.845..1.847 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59242.935..59242.935 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12002.448..25852.262 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.829..5683.938 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.243..200.243 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.895..84.529 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:50:05.052 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,126,"",2021-03-21 14:47:00 CET,4/134,0,LOG,00000,"duration: 99761.186 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8874507.96..8874507.97 rows=1 width=8) (actual time=95821.310..95821.311 rows=1 loops=1)
  ->  Gather  (cost=8874507.74..8874507.95 rows=2 width=8) (actual time=95817.482..99761.094 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8873507.74..8873507.75 rows=1 width=8) (actual time=95762.311..95762.311 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8512340.45 rows=144466918 width=0) (actual time=73499.505..94406.515 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3395766.70 rows=24077820 width=8) (actual time=73498.565..89290.551 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..3064680.42 rows=24077820 width=16) (actual time=73497.655..84173.736 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=55298.856..66652.830 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=27867.324..44614.845 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.620..7099.436 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10313.229..10313.230 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.310..2667.174 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1431.160..1431.160 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.252..515.460 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=209.021..209.021 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.010..87.367 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.887..0.887 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.615..0.733 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.729..0.730 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.693..0.696 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:51:49.224 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,127,"",2021-03-21 14:47:00 CET,4/135,0,LOG,00000,"duration: 104150.062 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96349.659..96349.660 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96343.234..104149.933 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96288.573..96288.573 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83761.981..95028.793 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8562.524..15186.448 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8560.615..13389.606 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.506..4355.701 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.380..1775.615 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.057..1.058 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.789..0.927 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.950..1323.950 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.672..530.360 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.808..1.809 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.791..1.793 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59739.331..59739.331 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12380.951..26184.552 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.913..5732.482 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=666.550..666.550 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.770..91.970 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:53:25.290 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,128,"",2021-03-21 14:47:00 CET,4/136,0,LOG,00000,"duration: 96016.310 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8808220.64..8808220.65 rows=1 width=8) (actual time=92058.376..92058.377 rows=1 loops=1)
  ->  Gather  (cost=8808220.42..8808220.63 rows=2 width=8) (actual time=92055.548..96016.185 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8807220.42..8807220.43 rows=1 width=8) (actual time=92000.892..92000.892 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8446053.13 rows=144466918 width=0) (actual time=77286.165..90752.550 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3329479.38 rows=24077820 width=8) (actual time=77285.274..86044.576 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432463.63..2768809.65 rows=24077820 width=16) (actual time=48471.862..68217.208 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=48470.435..62082.712 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25383.331..40710.420 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.406..7147.745 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7611.436..7611.436 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.877..2710.745 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.767..222.768 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.892..88.425 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.354..1.354 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.092..1.204 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1615.996..1615.996 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.946..482.255 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.621..0.621 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.594..0.596 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:55:07.538 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,129,"",2021-03-21 14:47:00 CET,4/137,0,LOG,00000,"duration: 102225.586 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=97489.693..97489.693 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97484.560..102222.898 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97433.599..97433.600 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=84695.647..96124.345 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8164.896..14789.481 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8163.257..12982.336 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.324..4150.307 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.964..1699.756 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.283..1.284 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.027..1.138 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1308.487..1308.487 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.523..510.223 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.577..1.578 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.558..1.560 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60793.327..60793.327 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12208.113..26513.337 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.884..5622.573 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=870.193..870.193 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.814..90.575 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 17:56:45.541 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,130,"",2021-03-21 14:47:00 CET,4/138,0,LOG,00000,"duration: 97951.472 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8808220.64..8808220.65 rows=1 width=8) (actual time=94311.460..94311.460 rows=1 loops=1)
  ->  Gather  (cost=8808220.42..8808220.63 rows=2 width=8) (actual time=94308.116..97951.363 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8807220.42..8807220.43 rows=1 width=8) (actual time=94253.989..94253.990 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8446053.13 rows=144466918 width=0) (actual time=79848.580..93028.256 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3329479.38 rows=24077820 width=8) (actual time=79847.499..88433.109 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432463.63..2768809.65 rows=24077820 width=16) (actual time=49272.791..68065.181 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=49271.731..62210.598 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24918.806..40240.348 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.841..7098.063 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7657.270..7657.271 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.540..2680.234 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=214.511..214.511 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.796..89.739 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.993..0.993 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.776..0.880 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4610.102..4610.102 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.950..507.803 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.784..0.784 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.757..0.759 rows=4 loops=3)",,,,,,,,,""
2021-03-21 17:58:31.906 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,131,"",2021-03-21 14:47:00 CET,4/139,0,LOG,00000,"duration: 106342.157 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98034.896..98034.897 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98028.264..106338.334 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97967.041..97967.041 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85706.412..96776.119 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8616.628..15331.093 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8614.755..13523.484 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.793..4370.183 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.743..1803.128 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.004..1.005 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.786..0.884 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1319.936..1319.936 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.789..533.691 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.792..1.792 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.778..1.780 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60863.451..60863.451 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12436.616..26578.731 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.795..5683.303 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.797..204.797 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.096..88.017 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:00:02.678 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,132,"",2021-03-21 14:47:00 CET,4/140,0,LOG,00000,"duration: 90691.873 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8686186.97..8686186.98 rows=1 width=8) (actual time=87149.164..87149.165 rows=1 loops=1)
  ->  Gather  (cost=8686186.75..8686186.96 rows=2 width=8) (actual time=87145.947..90691.477 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8685186.75..8685186.76 rows=1 width=8) (actual time=87097.853..87097.854 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8324019.46 rows=144466918 width=0) (actual time=66651.468..85846.012 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3207445.71 rows=24077820 width=8) (actual time=66650.619..80930.776 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=66649.826..75975.937 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=41127.131..56802.440 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12028.747..24064.852 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.859..5973.103 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.581..213.581 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.949..90.679 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7698.455..7698.455 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.190..2704.569 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.453..1236.453 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.099..490.433 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.763..0.764 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.527..0.622 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.601..0.601 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.570..0.572 rows=4 loops=3)",,,,,,,,,""
2021-03-21 18:01:49.522 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,133,"",2021-03-21 14:47:00 CET,4/141,0,LOG,00000,"duration: 106815.693 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98957.355..98957.355 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98952.595..106815.541 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98896.003..98896.003 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86088.246..97602.139 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8748.320..15530.007 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8746.643..13698.649 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.649..4462.219 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.564..1819.928 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.044..1.044 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.804..0.909 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1313.773..1313.774 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.440..515.022 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.593..1.593 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.577..1.579 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61487.650..61487.650 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13034.042..26754.303 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.733..5675.119 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.194..211.194 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.924..86.460 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:04:09.407 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,134,"",2021-03-21 14:47:00 CET,4/142,0,LOG,00000,"duration: 139835.888 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14077513.04..14077513.05 rows=1 width=8) (actual time=129443.288..129443.288 rows=1 loops=1)
  ->  Gather  (cost=14077512.83..14077513.04 rows=2 width=8) (actual time=129439.162..139835.640 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14076512.83..14076512.84 rows=1 width=8) (actual time=129386.465..129386.465 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13715345.53 rows=144466917 width=0) (actual time=119571.747..128083.502 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1205937.25..11157597.08 rows=144466917 width=8) (actual time=92961.285..110901.189 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1205921.00..9171160.72 rows=144466917 width=16) (actual time=92960.105..105207.020 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=70135.886..85533.451 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.360..4762.874 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.077..2064.533 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.217..1.218 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.197..1.198 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51230.679..51230.680 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.545..8040.409 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=229.447..229.448 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.904..88.057 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.125..1.125 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.923..1.009 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2054.931..2054.931 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.063..511.274 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 18:05:52.061 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,135,"",2021-03-21 14:47:00 CET,4/143,0,LOG,00000,"duration: 102627.695 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97823.043..97823.043 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97817.320..102627.531 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97771.245..97771.246 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84882.827..96461.193 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8243.445..14932.653 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8241.898..13114.554 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.007..4177.696 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.856..1708.253 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.089..1.090 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.834..0.945 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1262.589..1262.590 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.378..510.182 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.436..1.437 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.420..1.422 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60723.918..60723.918 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12017.411..25959.624 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.567..5708.903 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=203.696..203.696 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.862..86.714 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:07:59.700 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,136,"",2021-03-21 14:47:00 CET,4/144,0,LOG,00000,"duration: 127585.654 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12061345.11..12061345.12 rows=1 width=8) (actual time=117106.156..117106.156 rows=1 loops=1)
  ->  Gather  (cost=12061344.89..12061345.10 rows=2 width=8) (actual time=117101.455..127584.750 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12060344.89..12060344.90 rows=1 width=8) (actual time=117043.279..117043.279 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..11699177.60 rows=144466917 width=0) (actual time=107074.634..115740.002 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..9339914.63 rows=150000000 width=8) (actual time=81804.874..101663.349 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=81803.879..96134.073 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8398.983..13661.348 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.610..4327.551 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.586..1793.833 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.976..0.976 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.959..0.961 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1257.861..1257.861 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.398..492.047 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=55868.440..55868.441 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.215..8086.602 rows=20000000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.948..0.948 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.761..0.842 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=245.439..245.439 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.913..109.255 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:09:44.474 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,137,"",2021-03-21 14:47:00 CET,4/145,0,LOG,00000,"duration: 104738.942 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97223.407..97223.407 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97217.610..104738.769 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97168.788..97168.788 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84556.799..95876.666 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8518.004..15173.487 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8516.163..13353.806 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.913..4394.029 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.729..1794.928 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.130..1.131 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.877..0.992 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1299.654..1299.654 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.608..510.321 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.778..1.780 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.762..1.764 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60564.694..60564.694 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11927.753..25999.505 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.833..5628.328 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=202.928..202.928 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.906..87.105 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:11:10.793 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,138,"",2021-03-21 14:47:00 CET,4/146,0,LOG,00000,"duration: 86266.362 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12861917.79..12861917.80 rows=1 width=8) (actual time=82339.127..82339.127 rows=1 loops=1)
  ->  Gather  (cost=12861917.57..12861917.78 rows=2 width=8) (actual time=82335.801..86266.217 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12860917.57..12860917.58 rows=1 width=8) (actual time=82279.740..82279.740 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12499750.28 rows=144466917 width=0) (actual time=72416.663..80957.845 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=538946.19..9942001.83 rows=144466917 width=8) (actual time=52313.600..63398.887 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=25886.337..46110.998 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25885.461..40390.518 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.439..6983.155 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8342.770..8342.770 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.094..4174.478 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.306..1764.333 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.753..0.754 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.568..0.652 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.827..0.827 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.815..0.816 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.324..221.324 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.005..93.545 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2516.758..2516.758 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.992..519.201 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 18:12:52.191 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,139,"",2021-03-21 14:47:00 CET,4/147,0,LOG,00000,"duration: 101374.052 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96417.470..96417.470 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96412.988..101373.918 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96361.139..96361.139 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83779.203..95072.804 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8813.381..15472.325 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8811.653..13666.977 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.649..4441.953 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.569..1826.639 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.023..1.023 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.779..0.887 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1426.141..1426.141 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.375..608.065 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.625..1.625 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.604..1.606 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59193.658..59193.658 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12677.999..26777.639 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.862..5812.010 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.232..222.232 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.919..95.324 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:14:08.433 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,140,"",2021-03-21 14:47:00 CET,4/148,0,LOG,00000,"duration: 76190.489 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10273792.75..10273792.76 rows=1 width=8) (actual time=72522.625..72522.625 rows=1 loops=1)
  ->  Gather  (cost=10273792.54..10273792.75 rows=2 width=8) (actual time=72518.434..76189.994 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10272792.54..10272792.55 rows=1 width=8) (actual time=72464.100..72464.100 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=809675.61..9911625.25 rows=144466917 width=0) (actual time=62711.202..71200.119 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=788362.60..7552362.27 rows=150000000 width=8) (actual time=38612.313..56968.560 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=38611.319..51819.723 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.361..7073.892 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=21440.538..21440.538 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=12362.044..17041.510 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.836..3985.259 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.224..1609.635 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.575..0.576 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.422..0.491 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5640.608..5640.608 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.895..462.881 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.948..0.948 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.934..0.936 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=294.644..294.644 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.151..121.295 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:15:51.079 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,141,"",2021-03-21 14:47:00 CET,4/149,0,LOG,00000,"duration: 102621.137 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97261.658..97261.658 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97255.222..102621.012 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97208.503..97208.504 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84534.472..95905.853 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8529.204..15101.007 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8527.652..13338.992 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.322..4408.212 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.403..1804.366 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.881..0.882 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.690..0.775 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1316.709..1316.709 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.500..555.764 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.484..1.484 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.467..1.470 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60289.098..60289.098 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12513.118..26583.287 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.896..5940.486 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=587.942..587.943 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.949..89.813 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:17:19.398 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,142,"",2021-03-21 14:47:00 CET,4/150,0,LOG,00000,"duration: 88279.013 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10638158.38..10638158.39 rows=1 width=8) (actual time=84570.884..84570.884 rows=1 loops=1)
  ->  Gather  (cost=10638158.17..10638158.38 rows=2 width=8) (actual time=84565.674..88278.531 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10637158.17..10637158.18 rows=1 width=8) (actual time=84510.153..84510.153 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..10275990.88 rows=144466917 width=0) (actual time=74534.063..83225.352 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=614314.56..7916727.90 rows=150000000 width=8) (actual time=54639.878..69340.742 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=54638.964..64559.486 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25734.423..40888.696 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.448..7078.691 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8552.817..8552.818 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.878..4238.035 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.124..1778.132 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.719..0.719 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.489..0.587 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5323.410..5323.410 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.859..485.115 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.875..0.875 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.864..0.865 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=226.520..226.520 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.788..95.267 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:19:10.279 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,143,"",2021-03-21 14:47:00 CET,4/151,0,LOG,00000,"duration: 110862.754 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=102050.552..102050.553 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=102043.980..110862.607 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=101990.003..101990.003 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=88545.603..100629.926 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8589.718..15724.122 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8587.978..13826.133 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.836..4408.145 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.523..1820.319 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.269..1.270 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.971..1.097 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1372.506..1372.507 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.854..553.412 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.639..1.639 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.626..1.628 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=63129.507..63129.507 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12674.080..27438.945 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.036..5908.961 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.610..201.611 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.850..83.136 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:20:26.644 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,144,"",2021-03-21 14:47:00 CET,4/152,0,LOG,00000,"duration: 76326.088 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10535511.19..10535511.20 rows=1 width=8) (actual time=73132.512..73132.512 rows=1 loops=1)
  ->  Gather  (cost=10535510.98..10535511.19 rows=2 width=8) (actual time=73126.487..76325.925 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10534510.98..10534510.99 rows=1 width=8) (actual time=73073.624..73073.624 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=719506.04..10173343.68 rows=144466917 width=0) (actual time=63500.675..71856.532 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=698193.04..7814080.71 rows=150000000 width=8) (actual time=32875.133..58170.893 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=32874.275..52860.182 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=32873.535..47101.592 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.522..6997.719 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16032.977..16032.978 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6423.649..11389.737 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.425..2365.092 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1162.826..1162.827 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.854..443.742 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.710..0.710 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.550..0.623 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.823..0.823 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.812..0.813 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=198.512..198.512 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.796..84.892 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:22:11.847 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,145,"",2021-03-21 14:47:00 CET,4/153,0,LOG,00000,"duration: 105180.663 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96444.696..96444.696 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96438.517..105180.553 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96386.429..96386.429 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83142.095..95042.176 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8956.824..15748.098 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8954.924..13919.216 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.058..4322.235 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.055..1772.887 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.949..0.949 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.828 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1263.612..1263.612 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.643..511.610 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.828..1.828 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.804..1.806 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59013.747..59013.747 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12351.301..26323.181 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.032..5821.067 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=303.661..303.661 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.890..87.221 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:24:04.213 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,146,"",2021-03-21 14:47:00 CET,4/154,0,LOG,00000,"duration: 112320.219 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9145543.46..9145543.47 rows=1 width=8) (actual time=102340.674..102340.675 rows=1 loops=1)
  ->  Gather  (cost=9145543.24..9145543.45 rows=2 width=8) (actual time=102338.240..112319.587 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9144543.24..9144543.25 rows=1 width=8) (actual time=102278.623..102278.624 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..8783375.95 rows=144466917 width=0) (actual time=92555.720..101020.185 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=73933.844..87250.082 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8250.945..14756.793 rows=6666667 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8248.882..13007.983 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.020..4199.301 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.494..1707.926 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.482..1.483 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.256..1.351 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1310.421..1310.422 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.919..504.219 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.980..1.980 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.959..1.962 rows=4 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50690.902..50690.902 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.846..7902.139 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.575..205.575 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.983..86.173 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:25:52.569 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,147,"",2021-03-21 14:47:00 CET,4/155,0,LOG,00000,"duration: 108322.970 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99808.948..99808.948 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99803.941..108322.849 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99758.808..99758.808 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86559.838..98420.706 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9030.742..15685.619 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9028.937..13874.592 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.620..4342.364 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.204..1775.300 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.369..1.369 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.148..1.246 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1271.319..1271.320 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.567..505.661 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.699..1.699 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.679..1.681 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60324.262..60324.262 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12408.281..26638.623 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.866..5871.048 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=192.945..192.945 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.848..83.424 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:27:54.528 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,148,"",2021-03-21 14:47:00 CET,4/156,0,LOG,00000,"duration: 121900.966 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12278233.22..12278233.23 rows=1 width=8) (actual time=112518.906..112518.906 rows=1 loops=1)
  ->  Gather  (cost=12278233.00..12278233.21 rows=2 width=8) (actual time=112513.781..121899.453 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12277233.00..12277233.01 rows=1 width=8) (actual time=112461.688..112461.688 rows=1 loops=3)
              ->  Hash Join  (cost=1302618.63..11916065.71 rows=144466917 width=0) (actual time=96964.971..111190.847 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1302602.38..9929629.35 rows=144466917 width=8) (actual time=96963.804..106273.372 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=75808.450..90801.824 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=9176.372..14283.823 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.343..4858.269 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.503..2337.305 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.787..0.788 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.772..0.774 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1347.523..1347.523 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.224..510.190 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49964.280..49964.280 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.371..7945.808 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=202.906..202.906 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.993..86.012 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.903..0.904 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.677..0.772 rows=500 loops=3)",,,,,,,,,""
2021-03-21 18:29:42.616 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,149,"",2021-03-21 14:47:00 CET,4/157,0,LOG,00000,"duration: 108054.416 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99685.213..99685.213 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99678.618..108054.270 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99625.322..99625.322 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86580.687..98302.037 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8906.755..15672.340 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8904.598..13844.898 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.440..4789.044 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.560..2207.327 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.839..0.840 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.662..0.740 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1289.117..1289.117 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.736..512.352 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.093..2.094 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.069..2.072 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62269.190..62269.191 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12111.744..26230.519 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.500..5819.045 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.500..211.500 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.895..90.238 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:31:36.658 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,150,"",2021-03-21 14:47:00 CET,4/158,0,LOG,00000,"duration: 113984.733 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9145543.46..9145543.47 rows=1 width=8) (actual time=104747.195..104747.195 rows=1 loops=1)
  ->  Gather  (cost=9145543.24..9145543.45 rows=2 width=8) (actual time=104741.330..113984.095 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9144543.24..9144543.25 rows=1 width=8) (actual time=104689.050..104689.051 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..8783375.95 rows=144466917 width=0) (actual time=94801.729..103401.397 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=76623.302..89570.024 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8601.493..15239.214 rows=6666667 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8599.613..13441.261 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.424..4404.149 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.431..1801.642 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.949..0.950 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.762..0.846 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1270.467..1270.467 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.422..511.738 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.820..1.820 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.798..1.800 rows=4 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51034.123..51034.124 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.536..7857.433 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=212.401..212.401 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.235..89.181 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:33:20.868 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,151,"",2021-03-21 14:47:00 CET,4/159,0,LOG,00000,"duration: 104187.292 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=99040.725..99040.725 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99037.237..104187.182 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98987.534..98987.534 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86005.651..97679.165 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9169.485..16050.572 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9167.899..14182.488 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.722..4394.212 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.467..1806.257 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.210..1.211 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.973..1.079 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1343.482..1343.483 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.536..529.690 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.520..1.521 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.499..1.502 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60900.341..60900.341 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12307.456..26520.482 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.307..5830.572 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=205.039..205.039 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.892..84.188 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:34:57.012 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,152,"",2021-03-21 14:47:00 CET,4/160,0,LOG,00000,"duration: 96090.676 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10805299.37..10805299.38 rows=1 width=8) (actual time=92424.394..92424.395 rows=1 loops=1)
  ->  Gather  (cost=10805299.15..10805299.36 rows=2 width=8) (actual time=92421.570..96090.585 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10804299.15..10804299.16 rows=1 width=8) (actual time=92369.217..92369.218 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..10443131.86 rows=144466918 width=0) (actual time=82868.367..91100.069 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432500.63..7885383.40 rows=144466918 width=8) (actual time=51083.461..74513.374 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432463.63..2768809.65 rows=24077820 width=16) (actual time=51082.648..69302.934 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=51081.928..63976.145 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=27931.916..43123.749 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.352..7018.474 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10686.059..10686.060 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.724..2663.340 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=228.877..228.878 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.791..83.925 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.695..0.695 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.530..0.607 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.763..0.763 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.749..0.751 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1368.592..1368.592 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.753..498.895 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 18:36:37.674 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,153,"",2021-03-21 14:47:00 CET,4/161,0,LOG,00000,"duration: 100644.594 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=94998.236..94998.236 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=94994.119..100644.479 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=94936.889..94936.889 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=82517.669..93622.830 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8618.519..15411.787 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8617.069..13579.752 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.546..4395.992 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.562..1788.332 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.940..0.940 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.717..0.820 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1316.014..1316.014 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.299..503.028 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.386..1.386 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.364..1.366 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58305.531..58305.531 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12794.486..26880.720 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.939..5785.563 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=199.884..199.884 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.769..83.809 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:38:43.248 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,154,"",2021-03-21 14:47:00 CET,4/162,0,LOG,00000,"duration: 125525.323 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=11207393.90..11207393.91 rows=1 width=8) (actual time=116151.650..116151.650 rows=1 loops=1)
  ->  Gather  (cost=11207393.68..11207393.89 rows=2 width=8) (actual time=116147.524..125525.180 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11206393.68..11206393.69 rows=1 width=8) (actual time=116093.487..116093.487 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..10845226.39 rows=144466917 width=0) (actual time=106121.854..114798.660 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=1281305.63..8485963.41 rows=150000000 width=8) (actual time=81177.623..100883.423 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1281289.38..6423447.17 rows=150000000 width=16) (actual time=81176.700..95376.305 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7588.112..14870.364 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7586.403..12921.976 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.394..2670.024 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1835.013..1835.014 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.569..505.590 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.652..1.652 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.626..1.628 rows=4 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52722.799..52722.799 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.174..7987.569 rows=20000000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.889..0.889 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.669..0.767 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=196.837..196.837 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.283..80.170 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:40:27.131 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,155,"",2021-03-21 14:47:00 CET,4/163,0,LOG,00000,"duration: 103856.098 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95677.349..95677.349 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95671.407..103853.544 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95617.697..95617.697 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=82609.711..94316.692 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8393.297..15049.559 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8391.653..13231.919 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.597..4306.211 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.551..1766.859 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.007..1.008 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.774..0.875 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1288.172..1288.172 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.343..507.719 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.592..1.592 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.578..1.580 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58704.240..58704.240 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12173.268..26210.957 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.532..5509.670 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=273.884..273.884 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.898..94.708 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:42:33.393 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,156,"",2021-03-21 14:47:00 CET,4/164,0,LOG,00000,"duration: 126226.179 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12481916.23..12481916.24 rows=1 width=8) (actual time=116995.661..116995.661 rows=1 loops=1)
  ->  Gather  (cost=12481916.02..12481916.23 rows=2 width=8) (actual time=116990.687..126226.023 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12480916.02..12480916.03 rows=1 width=8) (actual time=116932.971..116932.971 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..12119748.72 rows=144466917 width=0) (actual time=106942.967..115634.817 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..9760485.75 rows=150000000 width=8) (actual time=93337.191..101882.342 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=69073.373..84594.184 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.947..6555.303 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.399..4405.029 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.500..2048.900 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.859..0.860 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.843..0.844 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.500..1.500 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.264..1.361 rows=500 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51247.626..51247.627 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.166..7926.430 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1360.785..1360.786 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.901..477.956 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=225.294..225.294 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.926..96.263 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:44:18.451 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,157,"",2021-03-21 14:47:00 CET,4/165,0,LOG,00000,"duration: 105022.281 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96658.377..96658.377 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96650.928..105022.139 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96600.822..96600.822 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83816.218..95302.547 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8588.211..15483.475 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8586.603..13653.779 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.564..4407.891 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.597..1794.681 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.929..0.930 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.697..0.795 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1306.507..1306.508 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.815..510.172 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.527..1.527 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.509..1.512 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58896.864..58896.864 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11927.897..25645.320 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.602..5617.031 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=199.632..199.633 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.791..81.188 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:46:38.168 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,158,"",2021-03-21 14:47:00 CET,4/166,0,LOG,00000,"duration: 139663.882 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14077513.04..14077513.05 rows=1 width=8) (actual time=129716.832..129716.832 rows=1 loops=1)
  ->  Gather  (cost=14077512.83..14077513.04 rows=2 width=8) (actual time=129713.650..139663.770 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14076512.83..14076512.84 rows=1 width=8) (actual time=129665.855..129665.855 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13715345.53 rows=144466917 width=0) (actual time=120047.662..128376.871 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1205937.25..11157597.08 rows=144466917 width=8) (actual time=94044.210..111855.945 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1205921.00..9171160.72 rows=144466917 width=16) (actual time=94043.252..106210.811 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71735.490..86854.982 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.649..4705.386 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.732..2039.053 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.857..0.857 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.837..0.839 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50918.576..50918.576 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.637..7871.556 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.423..213.423 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.679..82.367 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.916 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.681..0.777 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1710.925..1710.925 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.073..488.101 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 18:48:23.264 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,159,"",2021-03-21 14:47:00 CET,4/167,0,LOG,00000,"duration: 105066.033 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=100092.359..100092.360 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=100085.014..105065.875 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=100037.212..100037.212 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=86929.850..98710.797 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8981.613..15749.658 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8979.694..13919.316 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.458..4393.188 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.483..1783.169 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.927..1.928 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.684..1.791 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1682.198..1682.198 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.517..492.811 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.858..1.858 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.841..1.843 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62200.873..62200.873 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12985.369..27125.178 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.650..5795.023 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.130..201.130 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.875..85.961 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:50:33.704 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,160,"",2021-03-21 14:47:00 CET,4/168,0,LOG,00000,"duration: 130402.655 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12481916.23..12481916.24 rows=1 width=8) (actual time=120521.563..120521.563 rows=1 loops=1)
  ->  Gather  (cost=12481916.02..12481916.23 rows=2 width=8) (actual time=120516.821..130400.899 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12480916.02..12480916.03 rows=1 width=8) (actual time=120461.752..120461.752 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..12119748.72 rows=144466917 width=0) (actual time=110436.772..119155.930 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..9760485.75 rows=150000000 width=8) (actual time=93380.925..101985.454 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=69561.412..84943.210 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=4.318..6596.356 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.252..4430.241 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.074..2055.686 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.129..1.130 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.116..1.117 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.007..2.007 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.726..1.845 rows=500 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51586.206..51586.206 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.478..7975.178 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1263.590..1263.590 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.541..481.543 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=3641.085..3641.085 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.907..93.918 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:52:19.966 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,161,"",2021-03-21 14:47:00 CET,4/169,0,LOG,00000,"duration: 106223.968 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=101063.530..101063.530 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=101055.409..106223.852 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=101003.694..101003.694 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=87810.067..99634.414 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9207.348..16114.626 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9205.590..14250.377 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.632..4781.181 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.542..1988.106 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.046..1.046 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.858..0.942 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1401.191..1401.192 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.358..568.768 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.696..1.696 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.680..1.682 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62089.778..62089.778 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13595.812..28407.595 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.427..6195.612 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=245.254..245.255 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.962..102.186 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:53:43.287 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,162,"",2021-03-21 14:47:00 CET,4/170,0,LOG,00000,"duration: 83271.186 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8441442.30..8441442.31 rows=1 width=8) (actual time=80068.375..80068.376 rows=1 loops=1)
  ->  Gather  (cost=8441442.09..8441442.30 rows=2 width=8) (actual time=80063.702..83270.844 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8440442.09..8440442.10 rows=1 width=8) (actual time=80014.296..80014.296 rows=1 loops=3)
              ->  Hash Join  (cost=719506.04..8079274.79 rows=144466918 width=0) (actual time=65303.476..78798.482 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=719469.04..2962701.04 rows=24077820 width=8) (actual time=65302.625..74262.704 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=38237.120..58814.140 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=38236.203..52688.547 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.552..7146.918 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=19882.897..19882.897 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10350.074..15366.136 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.437..2515.253 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1474.915..1474.916 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.710..507.776 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.866..0.866 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.664..0.757 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=234.161..234.162 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.950..94.797 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.639..0.640 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.612..0.615 rows=4 loops=3)",,,,,,,,,""
2021-03-21 18:55:26.793 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,163,"",2021-03-21 14:47:00 CET,4/171,0,LOG,00000,"duration: 103482.906 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98450.204..98450.205 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98446.656..103482.744 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98391.250..98391.250 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85648.937..97077.407 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8458.575..15173.393 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8456.549..13331.267 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.513..4376.181 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.575..1805.815 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.898..0.898 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.691..0.784 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1256.612..1256.613 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.534..501.461 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.942..1.943 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.919..1.921 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61048.553..61048.553 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13452.531..27453.499 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.905..6665.557 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=192.265..192.265 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.882..81.319 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:56:43.010 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,164,"",2021-03-21 14:47:00 CET,4/172,0,LOG,00000,"duration: 76163.756 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10290068.75..10290068.76 rows=1 width=8) (actual time=72872.273..72872.273 rows=1 loops=1)
  ->  Gather  (cost=10290068.54..10290068.75 rows=2 width=8) (actual time=72868.519..76163.264 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10289068.54..10289068.55 rows=1 width=8) (actual time=72819.888..72819.888 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=825951.61..9927901.25 rows=144466917 width=0) (actual time=63072.603..71564.699 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=804638.60..7568638.27 rows=150000000 width=8) (actual time=39036.109..57705.741 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=39035.176..52486.130 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.643..7874.784 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=20735.714..20735.714 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=9996.376..16653.830 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=9995.322..14711.270 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.454..2431.504 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4510.971..4510.971 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.990..494.289 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.028..1.028 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.797..0.896 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.879..0.879 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.860..0.862 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=261.270..261.270 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.096..104.603 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:58:24.717 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,165,"",2021-03-21 14:47:00 CET,4/173,0,LOG,00000,"duration: 101684.721 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96527.672..96527.672 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96523.690..101681.937 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96470.928..96470.928 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83683.857..95163.915 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8403.746..15331.396 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8401.878..13522.709 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.622..4296.571 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.645..1742.339 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.937..0.938 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.763..0.841 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1293.657..1293.657 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.014..518.427 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.789..1.789 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.765..1.768 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59069.726..59069.726 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12376.253..26621.301 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.846..5854.247 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=231.918..231.919 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.858..100.689 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 18:59:55.658 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,166,"",2021-03-21 14:47:00 CET,4/174,0,LOG,00000,"duration: 90891.273 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10638158.38..10638158.39 rows=1 width=8) (actual time=86983.920..86983.920 rows=1 loops=1)
  ->  Gather  (cost=10638158.17..10638158.38 rows=2 width=8) (actual time=86979.814..90890.579 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10637158.17..10637158.18 rows=1 width=8) (actual time=86926.247..86926.247 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..10275990.88 rows=144466917 width=0) (actual time=76742.503..85625.442 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=614314.56..7916727.90 rows=150000000 width=8) (actual time=56241.512..71547.834 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=56240.661..66545.925 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26972.634..42226.297 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.839..8257.156 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8813.086..8813.086 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.932..4291.449 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.192..1817.078 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.704..0.704 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.523..0.600 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5606.780..5606.784 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.797..496.545 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.811..0.811 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.798..0.800 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=235.525..235.525 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.882..92.220 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:01:36.322 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,167,"",2021-03-21 14:47:00 CET,4/175,0,LOG,00000,"duration: 100637.601 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95754.038..95754.038 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95748.181..100637.411 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95698.544..95698.545 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83277.841..94405.653 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8583.189..15153.444 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8581.708..13357.021 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.414..4444.334 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.407..1821.784 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.959..0.960 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.759..0.846 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.945..1248.946 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.239..503.425 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.415..1.415 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.399..1.402 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59093.372..59093.372 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11869.402..25438.863 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.877..5650.213 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=219.299..219.299 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.830..95.397 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:03:13.690 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,168,"",2021-03-21 14:47:00 CET,4/176,0,LOG,00000,"duration: 97315.053 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8789531.93..8789531.94 rows=1 width=8) (actual time=93365.549..93365.549 rows=1 loops=1)
  ->  Gather  (cost=8789531.72..8789531.93 rows=2 width=8) (actual time=93360.966..97314.563 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8788531.72..8788531.73 rows=1 width=8) (actual time=93302.988..93302.988 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8427364.42 rows=144466918 width=0) (actual time=77885.655..92031.902 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3310790.67 rows=24077820 width=8) (actual time=77884.768..87205.420 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=507832.00..2849633.34 rows=25000000 width=16) (actual time=62095.184..72086.533 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24510.809..47718.213 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24509.866..40570.942 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.555..7017.510 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7631.984..7631.984 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.096..2692.667 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.900..0.901 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.670..0.770 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5045.643..5045.643 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.877..480.415 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=303.441..303.441 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.987..111.240 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.597..0.597 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.573..0.575 rows=4 loops=3)",,,,,,,,,""
2021-03-21 19:05:00.208 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,169,"",2021-03-21 14:47:00 CET,4/177,0,LOG,00000,"duration: 106492.257 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98408.942..98408.943 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98403.595..106490.201 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98349.909..98349.910 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85896.402..97058.191 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8563.987..15307.287 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8562.243..13466.736 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.653..4427.813 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.537..1832.215 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.077..1.078 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.854..0.946 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1253.949..1253.949 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.637..499.291 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.673..1.673 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.654..1.657 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62272.223..62272.223 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12731.351..26619.310 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.923..5954.066 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=192.467..192.467 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.837..81.856 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:07:12.878 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,170,"",2021-03-21 14:47:00 CET,4/178,0,LOG,00000,"duration: 132625.579 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12387968.31..12387968.32 rows=1 width=8) (actual time=122805.351..122805.351 rows=1 loops=1)
  ->  Gather  (cost=12387968.09..12387968.30 rows=2 width=8) (actual time=122801.639..132625.387 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12386968.09..12386968.10 rows=1 width=8) (actual time=122744.640..122744.640 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..12025800.80 rows=144466917 width=0) (actual time=112383.538..121369.855 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=1205937.25..9468052.35 rows=144466917 width=8) (actual time=91896.901..103924.116 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=69278.387..84572.600 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.667..7073.194 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.822..4766.569 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.973..2219.269 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.820..0.822 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.801..0.802 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.693..1.693 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.383..1.537 rows=500 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50965.564..50965.565 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.487..8531.112 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=289.609..289.609 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.869..91.701 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1467.001..1467.002 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.907..532.658 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 19:08:58.044 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,171,"",2021-03-21 14:47:00 CET,4/179,0,LOG,00000,"duration: 105137.384 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97483.383..97483.383 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97478.190..105134.822 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97433.772..97433.772 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85096.711..96149.839 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8552.987..15438.245 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8551.188..13633.095 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.632..4407.747 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.621..1812.403 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.968..0.968 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.786..0.866 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1250.118..1250.118 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.758..492.795 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.708..1.709 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.689..1.691 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59694.040..59694.040 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11735.757..25447.299 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.255..5606.419 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=197.250..197.250 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.827..86.548 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:10:37.625 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,172,"",2021-03-21 14:47:00 CET,4/180,0,LOG,00000,"duration: 99521.413 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10510596.74..10510596.75 rows=1 width=8) (actual time=94652.376..94652.376 rows=1 loops=1)
  ->  Gather  (cost=10510596.52..10510596.73 rows=2 width=8) (actual time=94649.575..99521.322 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10509596.52..10509596.53 rows=1 width=8) (actual time=94596.692..94596.693 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..10148429.23 rows=144466918 width=0) (actual time=74293.197..93348.677 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=529165.75..8161992.85 rows=144466918 width=8) (actual time=74292.127..88269.295 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=529128.75..3045419.10 rows=24077820 width=16) (actual time=74291.366..83813.818 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=49136.827..63298.041 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25507.429..40600.711 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.633..7187.390 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7594.715..7594.716 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.732..2672.943 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.344..211.344 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.668..83.930 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2048.743..2048.743 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.050..530.742 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.738..0.738 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.712..0.715 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.836..0.836 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.598..0.708 rows=500 loops=3)",,,,,,,,,""
2021-03-21 19:12:20.692 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,173,"",2021-03-21 14:47:00 CET,4/181,0,LOG,00000,"duration: 103034.234 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98050.921..98050.921 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98045.815..103034.117 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97998.344..97998.344 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85495.947..96699.002 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8868.166..15504.552 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8866.318..13696.740 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.568..4376.977 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.485..1779.921 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.040..1.040 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.783..0.894 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.175..1297.176 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.359..494.877 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.766..1.766 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.712..1.714 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60475.996..60475.996 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12793.256..26735.384 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.967..5667.153 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=202.153..202.153 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.911..84.379 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:14:03.045 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,174,"",2021-03-21 14:47:00 CET,4/182,0,LOG,00000,"duration: 102309.265 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12742811.47..12742811.48 rows=1 width=8) (actual time=99195.714..99195.714 rows=1 loops=1)
  ->  Gather  (cost=12742811.25..12742811.46 rows=2 width=8) (actual time=99192.929..102309.182 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12741811.25..12741811.26 rows=1 width=8) (actual time=99136.960..99136.960 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..12380643.96 rows=144466918 width=0) (actual time=83630.595..97860.619 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=529165.75..10394207.58 rows=144466918 width=8) (actual time=83629.120..92763.228 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432484.38..7554297.13 rows=144466918 width=16) (actual time=51378.980..71445.171 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=51378.204..65598.248 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26342.574..42577.189 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.516..7622.245 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7851.507..7851.508 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.622..2846.930 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=214.227..214.227 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.816..87.288 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.731..0.731 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.716..0.718 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4409.938..4409.938 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.936..508.889 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.056..1.056 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.763..0.895 rows=500 loops=3)",,,,,,,,,""
2021-03-21 19:15:45.824 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,175,"",2021-03-21 14:47:00 CET,4/183,0,LOG,00000,"duration: 102757.921 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=97772.969..97772.970 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97766.297..102757.747 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97713.547..97713.547 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85025.678..96403.731 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9775.302..16606.750 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9773.437..14785.193 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.379..4334.632 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.430..1774.740 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.907..0.907 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.725..0.811 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1748.042..1748.042 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.761..495.039 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.791..1.791 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.768..1.771 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59840.737..59840.737 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12668.419..26892.860 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.838..5713.866 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=185.695..185.696 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.937..77.192 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:17:03.176 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,176,"",2021-03-21 14:47:00 CET,4/184,0,LOG,00000,"duration: 77307.368 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10290068.75..10290068.76 rows=1 width=8) (actual time=73958.492..73958.492 rows=1 loops=1)
  ->  Gather  (cost=10290068.54..10290068.75 rows=2 width=8) (actual time=73953.940..77306.746 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10289068.54..10289068.55 rows=1 width=8) (actual time=73903.046..73903.046 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=825951.61..9927901.25 rows=144466917 width=0) (actual time=63783.079..72607.052 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=804638.60..7568638.27 rows=150000000 width=8) (actual time=39225.201..58007.639 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=39224.402..52775.469 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.929..7130.807 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=21866.783..21866.783 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=10616.760..17615.943 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10615.890..15579.266 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.616..2579.754 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4731.544..4731.545 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.788..480.765 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.846..0.846 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.660..0.747 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.762..0.762 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.751..0.753 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=258.490..258.490 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.088..100.070 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:18:46.851 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,177,"",2021-03-21 14:47:00 CET,4/185,0,LOG,00000,"duration: 103653.859 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95842.718..95842.718 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95834.623..103653.684 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95782.634..95782.634 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83615.800..94564.468 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8862.370..15510.464 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8860.716..13716.245 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.663..4413.487 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.625..1812.711 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.988..0.989 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.709..0.823 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1610.061..1610.062 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.558..514.993 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.588..1.588 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.571..1.573 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59477.086..59477.086 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12527.354..26516.468 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.028..5841.488 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=433.869..433.869 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.788..96.012 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:20:22.085 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,178,"",2021-03-21 14:47:00 CET,4/186,0,LOG,00000,"duration: 95188.985 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10805299.37..10805299.38 rows=1 width=8) (actual time=91577.879..91577.879 rows=1 loops=1)
  ->  Gather  (cost=10805299.15..10805299.36 rows=2 width=8) (actual time=91574.915..95188.884 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10804299.15..10804299.16 rows=1 width=8) (actual time=91520.495..91520.495 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..10443131.86 rows=144466918 width=0) (actual time=82550.464..90310.786 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432500.63..7885383.40 rows=144466918 width=8) (actual time=48741.097..72832.668 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432463.63..2768809.65 rows=24077820 width=16) (actual time=48740.340..67469.924 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=48739.648..61972.781 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25522.272..40960.684 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.890..7052.328 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7541.879..7541.879 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.605..2663.595 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=206.160..206.160 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.797..86.704 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.663..0.663 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.481..0.567 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.706..0.707 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.693..0.695 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2279.217..2279.217 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.019..496.767 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 19:22:05.360 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,179,"",2021-03-21 14:47:00 CET,4/187,0,LOG,00000,"duration: 103251.715 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98303.057..98303.057 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98300.304..103251.586 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98249.667..98249.667 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85452.009..96926.342 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8524.521..15135.276 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8523.034..13325.221 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.737..4375.616 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.499..1817.562 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.185..1.186 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.863..0.995 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1302.038..1302.038 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.187..516.898 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.419..1.420 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.393..1.395 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61236.064..61236.065 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12951.763..27092.702 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.017..5681.175 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=245.365..245.366 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.080..104.990 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:23:46.109 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,180,"",2021-03-21 14:47:00 CET,4/188,0,LOG,00000,"duration: 100685.210 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8808220.64..8808220.65 rows=1 width=8) (actual time=97239.489..97239.489 rows=1 loops=1)
  ->  Gather  (cost=8808220.42..8808220.63 rows=2 width=8) (actual time=97236.238..100685.130 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8807220.42..8807220.43 rows=1 width=8) (actual time=97181.675..97181.676 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8446053.13 rows=144466918 width=0) (actual time=81966.366..95884.190 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3329479.38 rows=24077820 width=8) (actual time=81965.295..91001.484 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432463.63..2768809.65 rows=24077820 width=16) (actual time=49094.983..68622.050 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=432447.38..2437723.38 rows=24077820 width=24) (actual time=49093.860..62552.021 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24702.032..40098.371 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.759..7135.534 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7497.048..7497.049 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.892..2679.747 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=215.380..215.380 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.035..85.935 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.075..1.075 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.884..0.969 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4775.431..4775.431 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.918..505.032 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.717..0.718 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.681..0.683 rows=4 loops=3)",,,,,,,,,""
2021-03-21 19:25:26.552 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,181,"",2021-03-21 14:47:00 CET,4/189,0,LOG,00000,"duration: 100422.603 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95193.606..95193.606 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95188.377..100420.603 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95133.189..95133.189 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83190.731..93953.331 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8655.748..15186.156 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8654.383..13420.111 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.525..4421.689 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.597..1829.080 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.879..0.880 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.697..0.780 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.738..1297.738 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.287..521.345 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.280..1.281 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.259..1.262 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58579.562..58579.562 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12160.195..26301.783 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.029..5535.513 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=261.595..261.595 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.015..90.793 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:26:45.144 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,182,"",2021-03-21 14:47:00 CET,4/190,0,LOG,00000,"duration: 78544.663 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8195999.87..8195999.88 rows=1 width=8) (actual time=75060.162..75060.162 rows=1 loops=1)
  ->  Gather  (cost=8195999.65..8195999.86 rows=2 width=8) (actual time=75056.024..78544.151 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8194999.65..8194999.66 rows=1 width=8) (actual time=75006.975..75006.976 rows=1 loops=3)
              ->  Hash Join  (cost=825951.61..7833832.36 rows=144466918 width=0) (actual time=59665.128..73726.405 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=825914.61..2717258.61 rows=24077820 width=8) (actual time=59664.166..69030.620 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=39811.071..53537.162 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.380..7078.529 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=22508.696..22508.696 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=10510.425..17942.711 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10509.460..15877.336 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.791..2533.380 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4801.589..4801.590 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.767..509.146 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.931..0.932 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.725..0.824 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=239.494..239.494 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.921..98.407 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.616..0.616 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.591..0.593 rows=4 loops=3)",,,,,,,,,""
2021-03-21 19:28:35.330 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,183,"",2021-03-21 14:47:00 CET,4/191,0,LOG,00000,"duration: 110157.984 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=101877.288..101877.288 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=101872.055..110155.859 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=101823.320..101823.320 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=88262.194..100422.299 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9374.789..16514.309 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9372.906..14586.373 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.190..4795.812 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.016..1985.744 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.114..1.114 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.852..0.953 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1378.221..1378.221 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.639..548.233 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.810..1.811 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.772..1.774 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62951.693..62951.694 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13291.499..28229.726 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.017..6171.690 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=469.455..469.455 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.903..83.624 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:29:56.405 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,184,"",2021-03-21 14:47:00 CET,4/192,0,LOG,00000,"duration: 81021.372 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12471149.30..12471149.31 rows=1 width=8) (actual time=78030.965..78030.965 rows=1 loops=1)
  ->  Gather  (cost=12471149.09..12471149.30 rows=2 width=8) (actual time=78026.476..81020.878 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12470149.09..12470149.10 rows=1 width=8) (actual time=77970.784..77970.785 rows=1 loops=3)
              ->  Hash Join  (cost=719506.04..12108981.79 rows=144466917 width=0) (actual time=62131.466..76698.013 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=719489.79..10122545.43 rows=144466917 width=8) (actual time=62130.396..71645.231 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=35209.788..55407.754 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=35208.802..49672.123 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.491..7050.893 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17057.609..17057.609 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7541.127..12598.581 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.341..2563.065 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1432.722..1432.722 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.887..510.139 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.942..0.942 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.932..0.933 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.514..200.514 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.963..87.702 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.834..0.834 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.614..0.716 rows=500 loops=3)",,,,,,,,,""
2021-03-21 19:31:41.465 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,185,"",2021-03-21 14:47:00 CET,4/193,0,LOG,00000,"duration: 105036.858 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98844.869..98844.869 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98838.406..105033.920 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98787.174..98787.174 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85656.674..97454.138 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8767.589..15674.513 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8765.858..13801.492 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.524..4447.461 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.108..1816.984 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.332..1.333 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.954..1.125 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1421.841..1421.841 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.742..508.747 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.658..1.659 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.631..1.633 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60893.442..60893.442 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12434.257..26698.423 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.223..5714.187 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=305.973..305.973 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.886..124.451 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:33:13.780 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,186,"",2021-03-21 14:47:00 CET,4/194,0,LOG,00000,"duration: 92259.966 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8686186.97..8686186.98 rows=1 width=8) (actual time=88834.195..88834.195 rows=1 loops=1)
  ->  Gather  (cost=8686186.75..8686186.96 rows=2 width=8) (actual time=88831.019..92259.336 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8685186.75..8685186.76 rows=1 width=8) (actual time=88780.416..88780.416 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8324019.46 rows=144466918 width=0) (actual time=69250.782..87584.860 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3207445.71 rows=24077820 width=8) (actual time=69249.805..82912.879 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=69249.016..78181.887 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=43336.506..58928.961 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12551.103..24561.250 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.707..5892.451 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.811..213.815 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.862..89.343 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=9418.868..9418.868 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.028..2529.732 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1278.025..1278.025 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.819..495.503 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.768..0.768 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.576..0.665 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.757..0.757 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.729..0.731 rows=4 loops=3)",,,,,,,,,""
2021-03-21 19:34:58.205 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,187,"",2021-03-21 14:47:00 CET,4/195,0,LOG,00000,"duration: 104401.681 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=99644.102..99644.102 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=99639.448..104401.507 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99587.007..99587.007 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86820.374..98292.527 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9542.403..16211.977 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9540.641..14393.196 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.734..4251.214 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.605..1736.669 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.075..1.076 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.860..0.955 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1342.754..1342.754 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.549..545.007 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.678..1.678 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.657..1.659 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61082.934..61082.934 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12915.186..27094.018 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.961..5570.575 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=226.219..226.219 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.834..97.046 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:36:13.750 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,188,"",2021-03-21 14:47:00 CET,4/196,0,LOG,00000,"duration: 75500.368 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10290068.75..10290068.76 rows=1 width=8) (actual time=71993.067..71993.068 rows=1 loops=1)
  ->  Gather  (cost=10290068.54..10290068.75 rows=2 width=8) (actual time=71988.761..75500.246 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10289068.54..10289068.55 rows=1 width=8) (actual time=71932.972..71932.972 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=825951.61..9927901.25 rows=144466917 width=0) (actual time=62122.674..70672.622 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=804638.60..7568638.27 rows=150000000 width=8) (actual time=38063.158..56763.518 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=38062.243..51535.888 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.526..6915.621 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=21495.520..21495.520 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=10088.309..17140.116 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10087.325..15101.952 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.520..2422.375 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4557.418..4557.419 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.819..482.035 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.960..0.961 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.694..0.818 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.872..0.873 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.861..0.863 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=235.246..235.246 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.893..97.148 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:37:57.045 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,189,"",2021-03-21 14:47:00 CET,4/197,0,LOG,00000,"duration: 103272.375 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97591.578..97591.578 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97589.198..103272.156 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97537.572..97537.573 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84777.767..96219.912 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8722.813..15452.275 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8721.156..13631.580 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.438..4389.277 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.415..1804.484 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.960..0.961 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.719..0.822 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1470.958..1470.958 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.688..655.003 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.584..1.584 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.555..1.558 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60220.809..60220.810 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12064.263..26275.976 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.037..5735.921 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.759..211.760 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.932..92.436 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:39:52.074 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,190,"",2021-03-21 14:47:00 CET,4/198,0,LOG,00000,"duration: 114982.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9918114.67..9918114.68 rows=1 width=8) (actual time=105196.621..105196.621 rows=1 loops=1)
  ->  Gather  (cost=9918114.45..9918114.66 rows=2 width=8) (actual time=105192.262..114981.592 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9917114.45..9917114.46 rows=1 width=8) (actual time=105135.341..105135.341 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..9555947.16 rows=144466917 width=0) (actual time=95425.230..103879.566 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..7196684.19 rows=150000000 width=8) (actual time=76865.974..90109.862 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Parallel Hash Join  (cost=96734.63..3186912.81 rows=50000100 width=8) (actual time=9917.818..14460.498 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=53.25..2135474.19 rows=50000100 width=16) (actual time=3.168..6050.423 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.446..4109.859 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.465..1796.614 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.935..0.936 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.758..0.836 rows=500 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.678..0.678 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.663..0.665 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1237.648..1237.649 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.530..511.901 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52470.425..52470.425 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.953..7974.761 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.189..218.189 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.119..85.277 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:41:35.755 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,191,"",2021-03-21 14:47:00 CET,4/199,0,LOG,00000,"duration: 103655.350 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96099.018..96099.018 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96094.345..103655.217 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96037.937..96037.938 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83431.436..94739.883 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8612.118..15241.179 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8610.160..13442.557 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.475..4433.604 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.616..1821.710 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.820..0.820 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.645..0.724 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1329.088..1329.088 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.855..543.149 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.888..1.889 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.857..1.863 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59395.476..59395.476 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11772.027..25619.253 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.564..5662.742 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=235.142..235.143 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.904..99.989 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:43:42.899 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,192,"",2021-03-21 14:47:00 CET,4/200,0,LOG,00000,"duration: 127105.594 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12481916.23..12481916.24 rows=1 width=8) (actual time=117076.931..117076.931 rows=1 loops=1)
  ->  Gather  (cost=12481916.02..12481916.23 rows=2 width=8) (actual time=117070.245..127102.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12480916.02..12480916.03 rows=1 width=8) (actual time=117021.241..117021.241 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..12119748.72 rows=144466917 width=0) (actual time=106985.055..115713.515 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..9760485.75 rows=150000000 width=8) (actual time=92953.894..101639.552 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=68842.461..84054.180 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.766..6498.875 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.919..4371.112 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.127..2028.565 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.753..0.754 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.734..0.736 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.794..1.795 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.532..1.648 rows=500 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51356.114..51356.115 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.596..7919.633 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2179.379..2179.380 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.974..476.217 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=250.903..250.903 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.949..96.721 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:45:26.122 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,193,"",2021-03-21 14:47:00 CET,4/201,0,LOG,00000,"duration: 103191.564 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98104.995..98104.995 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98096.463..103189.769 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98046.083..98046.084 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85247.350..96734.549 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9255.993..15941.988 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9253.882..14134.721 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.555..4440.821 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.533..1835.414 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.982..0.983 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.797..0.878 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1301.928..1301.928 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.671..509.013 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.035..2.036 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.017..2.019 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59293.901..59293.901 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12211.524..25976.785 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.812..5663.907 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.699..221.699 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.803..90.796 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:47:40.612 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,194,"",2021-03-21 14:47:00 CET,4/202,0,LOG,00000,"duration: 134436.317 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13860622.93..13860622.94 rows=1 width=8) (actual time=124335.871..124335.871 rows=1 loops=1)
  ->  Gather  (cost=13860622.72..13860622.93 rows=2 width=8) (actual time=124332.966..134436.201 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13859622.72..13859622.73 rows=1 width=8) (actual time=124279.836..124279.836 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13498455.42 rows=144466917 width=0) (actual time=115290.269..123076.941 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=1205937.25..10940706.97 rows=144466917 width=8) (actual time=92800.767..103841.175 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=66971.974..87024.278 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=66970.986..81204.543 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.316..4760.884 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.312..2092.232 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.940..0.940 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.916..0.919 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49419.877..49419.878 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.236..7877.171 rows=20000000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.925..0.925 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.742..0.831 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.260..204.260 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.786..84.001 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5230.657..5230.657 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.933..510.476 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 19:49:26.360 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,195,"",2021-03-21 14:47:00 CET,4/203,0,LOG,00000,"duration: 105724.769 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97448.696..97448.697 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97443.750..105724.603 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97395.372..97395.372 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84835.875..96094.694 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8499.560..15311.624 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8498.115..13490.117 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.431..4386.559 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.540..1812.192 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.843..0.843 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.667..0.744 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1230.536..1230.536 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.352..501.503 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.394..1.394 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.374..1.376 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60510.803..60510.803 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11962.623..26030.332 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.858..5487.933 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.192..204.192 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.868..83.349 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:50:56.071 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,196,"",2021-03-21 14:47:00 CET,4/204,0,LOG,00000,"duration: 89661.418 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13107360.23..13107360.24 rows=1 width=8) (actual time=86483.145..86483.145 rows=1 loops=1)
  ->  Gather  (cost=13107360.01..13107360.22 rows=2 width=8) (actual time=86480.430..89661.315 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13106360.01..13106360.02 rows=1 width=8) (actual time=86434.520..86434.520 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..12745192.72 rows=144466917 width=0) (actual time=77147.123..85182.801 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=432500.63..10187444.27 rows=144466917 width=8) (actual time=58092.998..69264.607 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=25226.298..51716.454 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25225.471..46139.333 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25224.726..40058.600 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.454..7121.520 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7589.230..7589.230 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.305..2703.979 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.719..0.719 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.542..0.621 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.783..0.783 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.771..0.773 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=220.100..220.101 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.945..87.406 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1520.797..1520.797 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.784..498.884 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 19:52:38.418 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,197,"",2021-03-21 14:47:00 CET,4/205,0,LOG,00000,"duration: 102323.307 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97614.102..97614.102 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97606.881..102320.638 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97554.722..97554.722 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84930.179..96248.820 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8622.314..15688.196 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8620.473..13874.144 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.654..4403.969 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.523..1812.206 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.087..1.087 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.825..0.943 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1366.957..1366.957 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.677..534.634 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.750..1.751 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.729..1.732 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60572.177..60572.177 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11967.466..25765.056 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.724..5479.812 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=219.153..219.153 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.852..90.601 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:53:55.917 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,198,"",2021-03-21 14:47:00 CET,4/206,0,LOG,00000,"duration: 77462.322 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=10290068.75..10290068.76 rows=1 width=8) (actual time=73884.485..73884.485 rows=1 loops=1)
  ->  Gather  (cost=10290068.54..10290068.75 rows=2 width=8) (actual time=73880.142..77461.783 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10289068.54..10289068.55 rows=1 width=8) (actual time=73828.427..73828.427 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=825951.61..9927901.25 rows=144466917 width=0) (actual time=64651.206..72646.170 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=804638.60..7568638.27 rows=150000000 width=8) (actual time=40024.638..59321.066 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=804601.60..2256101.27 rows=25000000 width=16) (actual time=40023.786..54145.048 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.367..7200.844 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=659743.73..659743.73 rows=8333350 width=16) (actual time=22776.836..22776.836 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=11646.500..18564.642 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=11645.567..16554.992 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.734..2581.440 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5674.444..5674.445 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.823..472.694 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.910..0.911 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.694..0.789 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.801..0.801 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.789..0.791 rows=4 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=303.164..303.164 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.009..113.748 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:55:38.416 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,199,"",2021-03-21 14:47:00 CET,4/207,0,LOG,00000,"duration: 102467.105 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97261.732..97261.732 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97255.183..102466.970 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97205.309..97205.309 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84807.678..95902.424 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9491.688..16044.900 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9489.956..14244.884 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.619..5104.466 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.732..2508.347 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.849..0.849 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.674..0.753 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1499.827..1499.828 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.685..514.519 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.671..1.671 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.654..1.656 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59106.845..59106.845 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12612.398..26534.155 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.846..5828.656 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=211.463..211.463 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.790..90.732 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:56:59.649 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,200,"",2021-03-21 14:47:00 CET,4/208,0,LOG,00000,"duration: 81195.010 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=12254261.19..12254261.20 rows=1 width=8) (actual time=77833.774..77833.774 rows=1 loops=1)
  ->  Gather  (cost=12254260.98..12254261.19 rows=2 width=8) (actual time=77829.563..81194.273 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12253260.98..12253260.99 rows=1 width=8) (actual time=77771.405..77771.405 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=719506.04..11892093.68 rows=144466917 width=0) (actual time=68661.174..76603.017 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=698193.04..9532830.71 rows=150000000 width=8) (actual time=38300.107..63021.050 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=38299.044..57428.058 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=38298.438..52237.957 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.644..7100.320 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=20927.419..20927.419 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10709.704..15951.514 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.484..2920.233 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1365.093..1365.094 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.791..483.746 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.578..0.578 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.569..0.570 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.001..1.001 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.716..0.849 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=326.574..326.575 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.070..115.665 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 19:58:40.358 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,201,"",2021-03-21 14:47:00 CET,4/209,0,LOG,00000,"duration: 100686.171 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96084.065..96084.065 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96077.999..100684.267 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96023.488..96023.488 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83708.464..94750.967 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9176.635..15907.803 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9174.999..14128.563 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.635..4381.369 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.569..1794.085 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.022..1.022 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.781..0.891 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1759.987..1759.988 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.500..502.050 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.588..1.588 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.564..1.567 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59002.119..59002.119 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12244.413..26046.071 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.026..5631.100 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=194.495..194.495 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.962..82.103 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:00:19.499 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,202,"",2021-03-21 14:47:00 CET,4/210,0,LOG,00000,"duration: 99099.616 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8838359.93..8838359.94 rows=1 width=8) (actual time=95303.042..95303.042 rows=1 loops=1)
  ->  Gather  (cost=8838359.72..8838359.93 rows=2 width=8) (actual time=95299.925..99099.153 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8837359.72..8837359.73 rows=1 width=8) (actual time=95248.797..95248.798 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8476192.42 rows=144466918 width=0) (actual time=80516.491..94041.194 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3359618.67 rows=24077820 width=8) (actual time=80515.341..89478.762 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=507832.00..2898461.34 rows=25000000 width=16) (actual time=56255.821..73629.787 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=56254.440..67901.691 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24573.772..41159.873 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.755..7119.096 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7131.284..7131.285 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.266..2550.693 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4921.694..4921.694 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.968..504.908 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.335..1.335 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.040..1.171 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=312.714..312.715 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.960..106.392 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.857..0.857 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.830..0.832 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:02:01.820 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,203,"",2021-03-21 14:47:00 CET,4/211,0,LOG,00000,"duration: 102289.699 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=97367.902..97367.903 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97359.152..102288.003 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97312.374..97312.374 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85593.831..96102.871 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9397.347..16130.040 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9394.400..14306.084 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.554..4388.842 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.607..1804.510 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.909..0.909 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.721..0.810 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.133..1280.133 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.129..494.230 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.841..2.841 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.818..2.821 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60103.048..60103.048 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12558.230..26294.193 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.891..5701.135 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=193.757..193.758 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.921..79.313 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:03:39.643 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,204,"",2021-03-21 14:47:00 CET,4/212,0,LOG,00000,"duration: 97770.919 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10529858.06..10529858.07 rows=1 width=8) (actual time=93746.843..93746.843 rows=1 loops=1)
  ->  Gather  (cost=10529857.84..10529858.05 rows=2 width=8) (actual time=93743.285..97769.691 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10528857.84..10528857.85 rows=1 width=8) (actual time=93693.020..93693.020 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..10167690.55 rows=144466918 width=0) (actual time=73475.022..92464.641 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=529165.75..8181254.17 rows=144466918 width=8) (actual time=73473.943..87498.854 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=529128.75..3064680.42 rows=24077820 width=16) (actual time=73473.313..83157.898 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=54986.235..66334.543 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24655.625..41318.578 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.965..7039.381 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7195.333..7195.333 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.386..2580.780 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4495.901..4495.901 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.935..514.282 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=232.372..232.373 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.012..82.110 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.605..0.605 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.572..0.574 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.814..0.814 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.591..0.688 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:05:23.885 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,205,"",2021-03-21 14:47:00 CET,4/213,0,LOG,00000,"duration: 104221.329 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95616.493..95616.493 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95609.643..104219.233 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95560.568..95560.568 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=82906.361..94247.605 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8551.715..15214.749 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8550.013..13403.473 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.813..4427.338 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.755..1821.499 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.020..1.021 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.844..0.922 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1284.043..1284.043 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.810..519.220 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.645..1.645 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.628..1.630 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58972.688..58972.688 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12468.108..26276.301 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.123..5632.202 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=259.688..259.688 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.969..95.448 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:06:38.393 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,206,"",2021-03-21 14:47:00 CET,4/214,0,LOG,00000,"duration: 74457.430 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8179723.87..8179723.88 rows=1 width=8) (actual time=70811.764..70811.765 rows=1 loops=1)
  ->  Gather  (cost=8179723.65..8179723.86 rows=2 width=8) (actual time=70807.396..74457.106 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8178723.65..8178723.66 rows=1 width=8) (actual time=70757.352..70757.352 rows=1 loops=3)
              ->  Hash Join  (cost=809675.61..7817556.36 rows=144466918 width=0) (actual time=55666.072..69489.109 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=809638.61..2700982.61 rows=24077820 width=8) (actual time=55665.248..64837.096 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=34930.666..48705.521 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.401..7047.879 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=17527.352..17527.352 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8643.304..13455.621 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.184..4304.599 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.447..1773.546 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.691..0.692 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.599 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1332.200..1332.201 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.825..504.188 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=193.941..193.941 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.089..82.075 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.592..0.592 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.565..0.567 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:08:21.470 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,207,"",2021-03-21 14:47:00 CET,4/215,0,LOG,00000,"duration: 103058.292 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95299.577..95299.578 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95293.691..103056.419 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95238.854..95238.854 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=82702.563..93942.983 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8512.536..15098.655 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8510.377..13296.677 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.262..4217.244 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.321..1727.952 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.900..0.900 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.725..0.803 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1257.695..1257.695 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.045..513.701 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.081..2.081 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.057..2.059 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58073.288..58073.288 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11385.082..25215.322 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.981..5550.999 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=207.906..207.907 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.846..88.475 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:09:56.557 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,208,"",2021-03-21 14:47:00 CET,4/216,0,LOG,00000,"duration: 95038.542 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8874507.96..8874507.97 rows=1 width=8) (actual time=90576.983..90576.984 rows=1 loops=1)
  ->  Gather  (cost=8874507.74..8874507.95 rows=2 width=8) (actual time=90572.350..95038.386 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8873507.74..8873507.75 rows=1 width=8) (actual time=90521.645..90521.645 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8512340.45 rows=144466918 width=0) (actual time=69915.288..89289.059 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3395766.70 rows=24077820 width=8) (actual time=69914.300..84523.531 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..3064680.42 rows=24077820 width=16) (actual time=69913.400..79760.361 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=51851.425..63020.108 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24131.177..40706.985 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.909..7062.905 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6992.636..6992.636 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.251..2490.433 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1615.156..1615.156 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.787..506.571 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=193.256..193.256 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.875..81.428 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.876..0.876 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.612..0.723 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.744..0.744 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.705..0.708 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:11:40.879 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,209,"",2021-03-21 14:47:00 CET,4/217,0,LOG,00000,"duration: 104301.589 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96050.368..96050.368 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96044.541..104301.464 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95996.700..95996.700 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83636.888..94717.208 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8296.858..14937.710 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8294.863..13133.989 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.423..4298.794 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.331..1756.428 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.052..1.053 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.879..0.957 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1228.188..1228.188 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.812..485.284 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.910..1.911 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.881..1.884 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59334.257..59334.257 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11116.336..24748.548 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.214..5356.218 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=191.717..191.717 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.895..80.142 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:13:12.026 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,210,"",2021-03-21 14:47:00 CET,4/218,0,LOG,00000,"duration: 91100.336 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10341537.07..10341537.08 rows=1 width=8) (actual time=87600.251..87600.251 rows=1 loops=1)
  ->  Gather  (cost=10341536.85..10341537.06 rows=2 width=8) (actual time=87597.043..91099.976 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10340536.85..10340536.86 rows=1 width=8) (actual time=87547.307..87547.307 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..9979369.56 rows=144466918 width=0) (actual time=66878.164..86258.112 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=529165.75..7992933.18 rows=144466918 width=8) (actual time=66877.074..80975.514 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=66876.389..76209.229 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=40064.732..55269.599 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11287.041..23051.046 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.924..5621.889 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=202.973..202.974 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.855..82.839 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7130.418..7130.418 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.471..2570.974 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1510.948..1510.948 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.871..493.583 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.662..0.662 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.636..0.638 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.812..0.812 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.543..0.657 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:14:55.484 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,211,"",2021-03-21 14:47:00 CET,4/219,0,LOG,00000,"duration: 103429.976 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98749.725..98749.725 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98742.708..103428.108 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98681.706..98681.706 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85722.769..97377.996 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8609.013..15189.803 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8607.260..13404.169 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.420..4465.812 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.479..1824.016 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.903..0.904 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.728..0.806 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.292..1297.292 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.644..532.427 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.691..1.692 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.659..1.661 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61515.401..61515.401 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12440.071..26423.374 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.784..5725.245 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=248.712..248.712 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.824..103.106 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:16:59.832 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,212,"",2021-03-21 14:47:00 CET,4/220,0,LOG,00000,"duration: 124301.167 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11424282.01..11424282.02 rows=1 width=8) (actual time=118807.180..118807.180 rows=1 loops=1)
  ->  Gather  (cost=11424281.79..11424282.00 rows=2 width=8) (actual time=118802.775..124300.582 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11423281.79..11423281.80 rows=1 width=8) (actual time=118752.951..118752.951 rows=1 loops=3)
              ->  Hash Join  (cost=1302618.63..11062114.50 rows=144466917 width=0) (actual time=102532.784..117449.943 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1302602.38..9075678.14 rows=144466917 width=8) (actual time=102531.733..112257.435 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..6423447.17 rows=150000000 width=16) (actual time=82058.483..96473.757 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=6949.869..14287.730 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6947.313..12311.457 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.671..2642.857 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1277.926..1277.927 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.168..491.415 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.478..2.478 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.444..2.450 rows=4 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=55820.074..55820.074 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.351..8032.330 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=275.144..275.144 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.905..111.636 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.771..0.771 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.508..0.622 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:18:51.285 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,213,"",2021-03-21 14:47:00 CET,4/221,0,LOG,00000,"duration: 111421.700 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=103566.379..103566.380 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=103564.887..111421.589 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=103513.358..103513.362 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=90860.730..102228.671 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8956.827..15495.057 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8955.102..13714.095 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.035..4247.301 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.538..1744.048 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.459..1.459 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.280..1.360 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.066..1335.066 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.321..535.518 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.659..1.660 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.639..1.641 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=66342.789..66342.789 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=16709.348..30562.883 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.944..5903.466 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=4871.426..4871.426 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.924..94.228 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:20:11.300 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,214,"",2021-03-21 14:47:00 CET,4/222,0,LOG,00000,"duration: 79966.407 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8477590.33..8477590.34 rows=1 width=8) (actual time=76425.295..76425.295 rows=1 loops=1)
  ->  Gather  (cost=8477590.11..8477590.32 rows=2 width=8) (actual time=76420.704..79966.055 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8476590.11..8476590.12 rows=1 width=8) (actual time=76371.153..76371.153 rows=1 loops=3)
              ->  Hash Join  (cost=719506.04..8115422.82 rows=144466918 width=0) (actual time=55221.726..75106.634 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=719469.04..2998849.07 rows=24077820 width=8) (actual time=55220.978..70231.193 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=719452.79..2667762.79 rows=24077820 width=16) (actual time=55220.267..65402.446 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34537.803..48492.755 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.492..7123.522 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17410.704..17410.704 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7330.032..12356.254 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.932..2569.461 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1583.758..1583.758 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.982..499.424 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=214.982..214.982 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.751..93.084 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.691..0.691 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.481..0.579 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.524..0.524 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.500..0.502 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:21:55.997 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,215,"",2021-03-21 14:47:00 CET,4/223,0,LOG,00000,"duration: 104671.744 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=100011.154..100011.154 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=100003.932..104671.558 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=99956.555..99956.555 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86496.990..98591.455 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8847.935..15866.196 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8845.878..13976.558 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.434..4580.673 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.336..1901.684 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.046..1.046 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.799..0.904 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1328.501..1328.502 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.832..539.011 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.978..1.978 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.956..1.958 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=61863.467..61863.467 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13079.693..28136.541 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.995..6153.719 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.283..201.283 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.810..84.208 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:23:48.308 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,216,"",2021-03-21 14:47:00 CET,4/224,0,LOG,00000,"duration: 112257.112 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9734737.27..9734737.28 rows=1 width=8) (actual time=107562.301..107562.301 rows=1 loops=1)
  ->  Gather  (cost=9734737.06..9734737.27 rows=2 width=8) (actual time=107557.550..112255.594 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9733737.06..9733737.07 rows=1 width=8) (actual time=107504.051..107504.051 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..9372569.76 rows=144466917 width=0) (actual time=98037.969..106275.194 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..7013306.79 rows=150000000 width=8) (actual time=79516.294..92748.561 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Hash Join  (cost=96734.63..3003535.42 rows=50000100 width=8) (actual time=7064.006..16388.316 rows=6666667 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7061.691..14357.047 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7059.856..12583.871 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.154..2600.514 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1502.307..1502.310 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.587..497.790 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.803..1.803 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.780..1.782 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.242..2.242 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.982..2.096 rows=500 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53359.542..53359.543 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.128..7954.788 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=225.818..225.818 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.987..82.330 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:25:38.994 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,217,"",2021-03-21 14:47:00 CET,4/225,0,LOG,00000,"duration: 110665.121 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=102404.429..102404.429 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=102398.470..110664.972 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=102343.255..102343.255 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=89320.067..101011.536 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9357.465..16140.869 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9355.520..14325.736 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.575..4420.041 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.517..1813.185 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.016..1.016 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.789..0.888 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2045.373..2045.373 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.777..498.852 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.881..1.881 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.862..1.864 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=63479.039..63479.039 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=15862.635..30386.732 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.708..6068.533 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=280.967..280.967 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.873..111.923 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:27:29.922 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,218,"",2021-03-21 14:47:00 CET,4/226,0,LOG,00000,"duration: 110879.485 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9918114.67..9918114.68 rows=1 width=8) (actual time=101825.818..101825.818 rows=1 loops=1)
  ->  Gather  (cost=9918114.45..9918114.66 rows=2 width=8) (actual time=101821.735..110878.317 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9917114.45..9917114.46 rows=1 width=8) (actual time=101772.068..101772.068 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..9555947.16 rows=144466917 width=0) (actual time=92318.847..100553.223 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..7196684.19 rows=150000000 width=8) (actual time=73929.928..87026.685 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Parallel Hash Join  (cost=96734.63..3186912.81 rows=50000100 width=8) (actual time=9898.781..14527.168 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=53.25..2135474.19 rows=50000100 width=16) (actual time=3.123..5593.624 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.348..3789.172 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.356..1666.014 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.953..0.953 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.753..0.839 rows=500 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.747..0.747 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.732..0.734 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1200.940..1200.941 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.196..480.009 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50793.163..50793.164 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.388..9100.562 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=194.566..194.566 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.013..82.975 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:29:17.639 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,219,"",2021-03-21 14:47:00 CET,4/227,0,LOG,00000,"duration: 107686.068 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=98849.748..98849.748 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98843.876..107685.876 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98791.647..98791.648 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=85841.888..97509.521 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9144.638..15945.228 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9142.733..14111.997 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.522..4376.466 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.399..1786.336 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.069..1.070 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.840..0.945 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1769.578..1769.579 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.692..521.708 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.807..1.807 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.781..1.784 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60846.074..60846.074 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12874.753..27355.306 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.783..6486.199 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=445.227..445.227 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.090..96.477 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:30:43.079 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,220,"",2021-03-21 14:47:00 CET,4/228,0,LOG,00000,"duration: 85381.636 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12861917.79..12861917.80 rows=1 width=8) (actual time=81932.564..81932.565 rows=1 loops=1)
  ->  Gather  (cost=12861917.57..12861917.78 rows=2 width=8) (actual time=81929.200..85381.545 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12860917.57..12860917.58 rows=1 width=8) (actual time=81875.123..81875.123 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=635627.57..12499750.28 rows=144466917 width=0) (actual time=72141.975..80579.391 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=538946.19..9942001.83 rows=144466917 width=8) (actual time=53230.224..64362.765 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=26565.896..46605.580 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26564.985..40879.634 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.845..7630.770 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8412.642..8412.642 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.316..4134.694 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.483..1745.054 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.784..0.784 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.574..0.661 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.869..0.869 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.855..0.856 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=226.114..226.115 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.739..85.981 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1470.147..1470.147 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.933..506.798 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 20:32:26.579 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,221,"",2021-03-21 14:47:00 CET,4/229,0,LOG,00000,"duration: 103469.447 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97405.564..97405.564 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97400.715..103469.242 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97345.384..97345.384 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84802.395..96042.839 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8574.259..15230.358 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8572.244..13422.647 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.462..4401.225 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.423..1802.901 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.977..0.978 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.775..0.869 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1324.103..1324.103 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.911..506.774 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.945..1.946 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.920..1.925 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60250.177..60250.177 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=13609.860..27605.932 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.908..6996.821 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=208.042..208.043 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.880..86.332 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:34:00.855 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,222,"",2021-03-21 14:47:00 CET,4/230,0,LOG,00000,"duration: 94228.314 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8686186.97..8686186.98 rows=1 width=8) (actual time=90203.989..90203.989 rows=1 loops=1)
  ->  Gather  (cost=8686186.75..8686186.96 rows=2 width=8) (actual time=90200.689..94228.198 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8685186.75..8685186.76 rows=1 width=8) (actual time=90147.642..90147.642 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8324019.46 rows=144466918 width=0) (actual time=69811.760..88887.984 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3207445.71 rows=24077820 width=8) (actual time=69810.804..83999.644 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..2876359.43 rows=24077820 width=16) (actual time=69809.755..79054.097 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=44515.217..60158.139 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11657.624..23388.089 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.620..5758.159 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.380..221.380 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.868..91.866 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10399.495..10399.496 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.267..2690.342 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1285.287..1285.287 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.209..468.408 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.024..1.024 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.796..0.895 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.742..0.742 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.720..0.721 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:35:41.561 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,223,"",2021-03-21 14:47:00 CET,4/231,0,LOG,00000,"duration: 100676.419 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95907.308..95907.308 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95899.743..100673.362 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95850.042..95850.042 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=82960.502..94538.197 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8531.900..15361.359 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8530.188..13547.667 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.754..4400.733 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.645..1788.862 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.061..1.061 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.803..0.910 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.158..1268.159 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.497..499.568 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.653..1.653 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.638..1.640 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58841.403..58841.403 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11799.883..26253.709 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.923..5623.228 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=199.576..199.577 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.852..84.509 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:37:12.827 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,224,"",2021-03-21 14:47:00 CET,4/232,0,LOG,00000,"duration: 91221.064 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8544089.50..8544089.51 rows=1 width=8) (actual time=87116.228..87116.228 rows=1 loops=1)
  ->  Gather  (cost=8544089.28..8544089.49 rows=2 width=8) (actual time=87111.619..91219.864 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8543089.28..8543089.29 rows=1 width=8) (actual time=87063.482..87063.482 rows=1 loops=3)
              ->  Hash Join  (cost=635627.57..8181921.99 rows=144466918 width=0) (actual time=71048.172..85824.357 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=635590.57..3065348.24 rows=24077820 width=8) (actual time=71047.357..81063.815 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=54938.988..65241.227 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25468.413..41792.411 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.514..7156.540 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8408.320..8408.320 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.928..4190.289 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.233..1741.360 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.666..0.667 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.496..0.572 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4700.469..4700.469 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.855..506.896 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=209.182..209.182 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.992..80.334 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.613..0.613 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.583..0.585 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:38:58.513 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,225,"",2021-03-21 14:47:00 CET,4/233,0,LOG,00000,"duration: 105659.278 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=100451.590..100451.590 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=100445.595..105657.607 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=100394.480..100394.480 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=86889.921..99068.909 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8910.858..15849.768 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8909.269..14039.216 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.359..4420.121 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.938..1772.099 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.337..1.337 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.074..1.199 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1438.772..1438.772 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.280..510.270 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.514..1.514 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.497..1.499 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=62220.011..62220.011 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12574.583..27459.312 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.901..5750.713 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.620..221.621 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.124..88.494 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:40:31.669 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,226,"",2021-03-21 14:47:00 CET,4/234,0,LOG,00000,"duration: 93115.617 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12573751.80..12573751.81 rows=1 width=8) (actual time=89761.719..89761.720 rows=1 loops=1)
  ->  Gather  (cost=12573751.58..12573751.79 rows=2 width=8) (actual time=89758.846..93115.133 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12572751.58..12572751.59 rows=1 width=8) (actual time=89710.053..89710.054 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..12211584.29 rows=144466918 width=0) (actual time=75861.040..88560.035 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=529165.75..10225147.91 rows=144466918 width=8) (actual time=75860.066..84020.744 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432484.38..7385237.46 rows=144466918 width=16) (actual time=41677.916..63609.563 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432447.38..2268663.71 rows=24077820 width=24) (actual time=41677.080..57578.001 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12072.617..24737.788 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.711..5918.863 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=223.512..223.513 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.903..92.292 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6810.909..6810.909 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.208..2441.180 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.776..0.776 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.760..0.762 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4779.730..4779.730 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.040..520.436 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.732..0.732 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.486..0.585 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:42:13.189 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,227,"",2021-03-21 14:47:00 CET,4/235,0,LOG,00000,"duration: 101497.645 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=96728.253..96728.253 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96722.745..101497.508 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96673.208..96673.208 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=84012.678..95372.919 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9558.454..16116.827 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9557.031..14346.098 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.620..4450.023 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.502..1817.697 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.069..1.070 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.806..0.922 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2152.437..2152.437 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.567..528.763 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.368..1.368 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.339..1.341 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58414.903..58414.903 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12726.445..27241.486 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.847..5901.697 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=210.990..210.991 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.840..91.452 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:43:47.903 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,228,"",2021-03-21 14:47:00 CET,4/236,0,LOG,00000,"duration: 94661.728 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14826110.23..14826110.24 rows=1 width=8) (actual time=90985.219..90985.219 rows=1 loops=1)
  ->  Gather  (cost=14826110.01..14826110.22 rows=2 width=8) (actual time=90982.515..94661.638 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14825110.01..14825110.02 rows=1 width=8) (actual time=90933.040..90933.040 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..14463942.72 rows=144466917 width=0) (actual time=81378.653..89649.135 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=432500.63..11906194.27 rows=144466917 width=8) (actual time=57776.480..69044.579 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=411187.63..9253963.29 rows=150000000 width=16) (actual time=24561.134..51603.430 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24559.901..45566.072 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24559.287..39921.871 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.525..7081.790 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7612.224..7612.225 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.224..2722.939 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.578..0.578 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.565..0.566 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.189..1.190 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.996..1.079 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=214.554..214.554 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.996..86.760 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4872.870..4872.870 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.863..524.175 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 20:45:29.317 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,229,"",2021-03-21 14:47:00 CET,4/237,0,LOG,00000,"duration: 101390.229 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96155.815..96155.815 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96151.077..101387.788 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96101.485..96101.485 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83884.151..94902.216 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8792.988..15634.319 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8791.286..13829.827 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.427..4517.064 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.512..1856.579 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.875..0.875 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.650..0.747 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1306.660..1306.660 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.732..520.351 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.617..1.617 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.589..1.591 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59202.556..59202.556 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12286.728..26441.030 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.223..5641.426 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=203.086..203.086 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.966..83.149 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:47:56.952 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,230,"",2021-03-21 14:47:00 CET,4/238,0,LOG,00000,"duration: 147594.288 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14077513.04..14077513.05 rows=1 width=8) (actual time=137624.276..137624.276 rows=1 loops=1)
  ->  Gather  (cost=14077512.83..14077513.04 rows=2 width=8) (actual time=137621.293..147594.095 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14076512.83..14076512.84 rows=1 width=8) (actual time=137567.305..137567.305 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13715345.53 rows=144466917 width=0) (actual time=127151.071..136277.701 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1205937.25..11157597.08 rows=144466917 width=8) (actual time=96588.612..115816.875 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=1205921.00..9171160.72 rows=144466917 width=16) (actual time=96587.443..110068.820 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71560.351..88880.918 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.999..5148.335 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.846..2297.436 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.092..1.092 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.070..1.072 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52364.542..52364.543 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.052..8482.735 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=230.550..230.550 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.048..96.395 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.086..1.086 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.847..0.943 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4687.641..4687.641 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.862..512.413 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 20:49:41.218 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,231,"",2021-03-21 14:47:00 CET,4/239,0,LOG,00000,"duration: 104237.171 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=97845.785..97845.785 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=97840.390..104237.040 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=97791.251..97791.251 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84504.152..96493.020 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9071.202..16090.653 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9069.358..14279.150 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.598..4433.465 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.410..1874.434 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.142..1.142 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.959..1.045 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1827.297..1827.297 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.548..551.786 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.763..1.764 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.739..1.742 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59438.433..59438.433 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12526.457..27262.386 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.658..5949.105 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=210.476..210.476 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.971..89.770 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:51:05.766 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,232,"",2021-03-21 14:47:00 CET,4/240,0,LOG,00000,"duration: 84496.376 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12471149.30..12471149.31 rows=1 width=8) (actual time=80912.934..80912.934 rows=1 loops=1)
  ->  Gather  (cost=12471149.09..12471149.30 rows=2 width=8) (actual time=80908.204..84495.902 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12470149.09..12470149.10 rows=1 width=8) (actual time=80858.458..80858.458 rows=1 loops=3)
              ->  Hash Join  (cost=719506.04..12108981.79 rows=144466917 width=0) (actual time=65268.954..79659.659 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=719489.79..10122545.43 rows=144466917 width=8) (actual time=65267.576..74868.897 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=37964.260..59031.052 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=37963.248..53185.790 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.761..7149.493 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=20055.671..20055.671 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=9500.132..14856.575 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.812..2719.632 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3400.609..3400.610 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..518.307 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.938..0.938 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.927..0.929 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.876..221.876 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.113..90.271 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.956..0.956 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.744..0.839 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:52:49.132 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,233,"",2021-03-21 14:47:00 CET,4/241,0,LOG,00000,"duration: 103337.344 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=94765.480..94765.480 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=94760.963..103335.502 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=94712.619..94712.619 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=82715.795..93537.191 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8742.631..15787.303 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8741.324..13951.945 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.995..4550.138 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.813..1904.662 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.138..1.139 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.828..0.957 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1254.519..1254.520 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.386..499.244 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.237..1.237 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.223..1.225 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58256.570..58256.570 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11359.747..25600.459 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.029..5138.072 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=199.474..199.474 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.885..84.904 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:54:25.269 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,234,"",2021-03-21 14:47:00 CET,4/242,0,LOG,00000,"duration: 96097.160 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8772072.61..8772072.62 rows=1 width=8) (actual time=92366.394..92366.394 rows=1 loops=1)
  ->  Gather  (cost=8772072.40..8772072.61 rows=2 width=8) (actual time=92363.341..96097.058 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8771072.40..8771072.41 rows=1 width=8) (actual time=92310.714..92310.714 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8409905.10 rows=144466918 width=0) (actual time=77179.601..91044.941 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529145.00..3293331.35 rows=24077820 width=8) (actual time=77178.655..86267.777 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432463.63..2732661.63 rows=24077820 width=16) (actual time=55256.633..68282.662 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25017.922..48285.137 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25016.933..41516.940 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.646..6906.310 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7463.711..7463.711 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.285..2736.607 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.949..0.949 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.775..0.850 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=233.302..233.302 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.792..92.308 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1578.930..1578.930 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.794..499.733 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.650..0.650 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.620..0.622 rows=4 loops=3)",,,,,,,,,""
2021-03-21 20:56:08.876 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,235,"",2021-03-21 14:47:00 CET,4/243,0,LOG,00000,"duration: 103582.280 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=98392.878..98392.878 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=98387.554..103582.135 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=98332.063..98332.063 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=85590.198..97015.694 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8643.524..15324.843 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8641.898..13521.558 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.807..4508.344 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.668..1887.833 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.093..1.093 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.856..0.961 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.161..1259.161 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=3.174..490.416 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.549..1.550 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.529..1.531 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59839.331..59839.331 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12381.799..26422.412 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.741..5682.965 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=220.406..220.406 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.911..97.179 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 20:57:52.212 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,236,"",2021-03-21 14:47:00 CET,4/244,0,LOG,00000,"duration: 103279.089 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15325162.34..15325162.35 rows=1 width=8) (actual time=99628.271..99628.271 rows=1 loops=1)
  ->  Gather  (cost=15325162.12..15325162.33 rows=2 width=8) (actual time=99624.783..103278.962 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15324162.12..15324162.13 rows=1 width=8) (actual time=99567.347..99567.347 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..14962994.83 rows=144466917 width=0) (actual time=83367.407..98240.385 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=529165.75..12976558.47 rows=144466917 width=8) (actual time=83366.009..92926.792 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432484.38..10136648.02 rows=144466917 width=16) (actual time=60179.921..73932.270 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=26068.142..49337.148 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26067.307..42726.366 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.057..7483.332 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7347.204..7347.204 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.271..2678.024 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.792..0.792 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.781..0.782 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=3576.240..3576.240 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.986..97.128 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1428.776..1428.776 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.016..553.695 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.969..0.969 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.655..0.792 rows=500 loops=3)",,,,,,,,,""
2021-03-21 20:59:32.899 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,237,"",2021-03-21 14:47:00 CET,4/245,0,LOG,00000,"duration: 100660.586 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=95637.736..95637.737 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95632.861..100657.624 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95580.949..95580.949 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83690.684..94415.662 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8733.561..15468.486 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8731.990..13665.416 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.407..4554.187 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.393..1916.785 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.965..0.966 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.777..0.865 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1274.129..1274.129 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.689..528.302 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.511..1.511 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.494..1.495 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58842.837..58842.837 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12880.430..27013.206 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.069..5884.958 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=208.455..208.455 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.863..90.554 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:01:52.536 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,238,"",2021-03-21 14:47:00 CET,4/246,0,LOG,00000,"duration: 139579.542 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13860622.93..13860622.94 rows=1 width=8) (actual time=129144.076..129144.076 rows=1 loops=1)
  ->  Gather  (cost=13860622.72..13860622.93 rows=2 width=8) (actual time=129140.795..139579.356 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13859622.72..13859622.73 rows=1 width=8) (actual time=129088.567..129088.568 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..13498455.42 rows=144466917 width=0) (actual time=119756.608..127853.154 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=1205937.25..10940706.97 rows=144466917 width=8) (actual time=99682.572..111163.958 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=72535.102..93595.680 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=72533.929..87723.273 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.406..4805.774 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.329..2145.962 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.992..0.992 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.969..0.971 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53608.413..53608.414 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.240..8157.999 rows=20000000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.126..1.126 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.942..1.021 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.670..221.670 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.964..86.025 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1429.969..1429.969 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.964..502.484 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 21:03:37.575 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,239,"",2021-03-21 14:47:00 CET,4/247,0,LOG,00000,"duration: 105012.746 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96912.745..96912.745 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96908.216..105010.289 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96858.287..96858.288 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84375.689..95541.038 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8676.548..15489.552 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8674.039..13656.036 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.734..4462.534 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.555..1847.255 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.124..1.125 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.853..0.975 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1284.708..1284.708 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.784..516.955 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.405..2.405 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.381..2.386 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=60116.739..60116.739 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12034.050..26111.830 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.544..5708.470 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=212.249..212.249 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.939..93.910 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:05:15.878 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,240,"",2021-03-21 14:47:00 CET,4/248,0,LOG,00000,"duration: 98252.725 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8874507.96..8874507.97 rows=1 width=8) (actual time=93381.822..93381.822 rows=1 loops=1)
  ->  Gather  (cost=8874507.74..8874507.95 rows=2 width=8) (actual time=93377.058..98252.185 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8873507.74..8873507.75 rows=1 width=8) (actual time=93319.701..93319.702 rows=1 loops=3)
              ->  Hash Join  (cost=529182.00..8512340.45 rows=144466918 width=0) (actual time=71289.010..91994.290 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529145.00..3395766.70 rows=24077820 width=8) (actual time=71288.040..86939.017 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=529128.75..3064680.42 rows=24077820 width=16) (actual time=71287.198..81880.786 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=52109.132..63700.566 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24401.586..41447.434 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.520..7163.363 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7310.851..7310.852 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.173..2553.958 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1269.878..1269.878 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.876..496.587 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=240.640..240.640 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.039..105.468 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.809..0.809 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.544..0.659 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.672..0.672 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.643..0.645 rows=4 loops=3)",,,,,,,,,""
2021-03-21 21:07:00.635 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,241,"",2021-03-21 14:47:00 CET,4/249,0,LOG,00000,"duration: 104735.022 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95960.240..95960.240 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95956.961..104734.802 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95908.740..95908.741 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83232.032..94599.470 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8135.840..14972.453 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8133.862..13184.526 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.956..4128.664 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.708..1667.454 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.203..1.203 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.863..1.005 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1292.571..1292.572 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.751..515.741 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.898..1.898 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.861..1.865 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59259.519..59259.519 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11606.010..25645.285 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.849..5624.087 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.797..218.797 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.838..98.408 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:09:07.795 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,242,"",2021-03-21 14:47:00 CET,4/250,0,LOG,00000,"duration: 127105.869 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12387968.31..12387968.32 rows=1 width=8) (actual time=117767.618..117767.618 rows=1 loops=1)
  ->  Gather  (cost=12387968.09..12387968.30 rows=2 width=8) (actual time=117763.080..127105.692 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12386968.09..12386968.10 rows=1 width=8) (actual time=117712.597..117712.597 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..12025800.80 rows=144466917 width=0) (actual time=108450.085..116454.570 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=1205937.25..9468052.35 rows=144466917 width=8) (actual time=88747.271..100668.968 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=67426.855..82477.832 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=4.288..6702.696 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.105..4521.231 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.068..2109.050 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.995..0.996 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.983..0.985 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.055..2.055 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.741..1.855 rows=500 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49503.859..49503.860 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.631..8037.338 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=228.969..228.969 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.221..97.220 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1266.797..1266.797 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.919..500.660 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 21:10:52.506 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,243,"",2021-03-21 14:47:00 CET,4/251,0,LOG,00000,"duration: 104675.001 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96664.536..96664.536 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96656.045..104672.648 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96604.628..96604.628 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=84006.748..95325.008 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8694.202..15319.263 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8692.411..13511.973 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.576..4411.517 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.474..1820.248 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.053..1.054 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.766..0.886 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1388.736..1388.737 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.746..625.060 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.736..1.736 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.711..1.714 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59971.436..59971.436 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11498.346..25497.408 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.048..5386.774 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.445..204.445 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.803..90.483 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:12:43.928 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,244,"",2021-03-21 14:47:00 CET,4/252,0,LOG,00000,"duration: 111375.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=9161819.46..9161819.47 rows=1 width=8) (actual time=105514.477..105514.477 rows=1 loops=1)
  ->  Gather  (cost=9161819.24..9161819.45 rows=2 width=8) (actual time=105510.569..111374.962 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9160819.24..9160819.25 rows=1 width=8) (actual time=105462.509..105462.509 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1302618.63..8799651.95 rows=144466917 width=0) (actual time=95701.317..104247.560 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=1281305.63..6440388.98 rows=150000000 width=8) (actual time=76390.883..90310.188 rows=20000000 loops=3)
                          Hash Cond: (ord.id = ord_det.order_id)
                          ->  Hash Join  (cost=96734.63..2430617.60 rows=50000100 width=8) (actual time=7081.982..16200.203 rows=6666667 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=96697.63..659743.73 rows=8333350 width=16) (actual time=7080.254..14330.336 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7078.965..12334.881 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.810..2570.126 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.399..1246.400 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.600..493.658 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.248..1.249 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.046..1.135 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.654..1.654 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.641..1.643 rows=4 loops=3)
                          ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50859.355..50859.355 rows=20000000 loops=3)
                                Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.505..8201.260 rows=20000000 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=208.639..208.639 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.864..86.288 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:14:36.091 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,245,"",2021-03-21 14:47:00 CET,4/253,0,LOG,00000,"duration: 112125.694 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=103905.854..103905.854 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=103900.234..112125.483 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=103842.978..103842.978 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=91302.576..102548.440 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8731.706..15305.021 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8729.635..13510.243 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.995..4404.238 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.502..1827.308 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.445..1.445 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.205..1.305 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1362.175..1362.176 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.026..566.879 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.953..1.953 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.926..1.929 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=66508.199..66508.199 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=18618.807..32344.023 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.592..5760.003 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=268.163..268.163 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.060..87.801 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:16:04.496 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,246,"",2021-03-21 14:47:00 CET,4/254,0,LOG,00000,"duration: 88354.873 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8544089.50..8544089.51 rows=1 width=8) (actual time=84174.514..84174.515 rows=1 loops=1)
  ->  Gather  (cost=8544089.28..8544089.49 rows=2 width=8) (actual time=84170.900..88354.464 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8543089.28..8543089.29 rows=1 width=8) (actual time=84115.439..84115.439 rows=1 loops=3)
              ->  Hash Join  (cost=635627.57..8181921.99 rows=144466918 width=0) (actual time=68994.886..82880.516 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=635590.57..3065348.24 rows=24077820 width=8) (actual time=68994.070..78143.389 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=52364.516..62770.443 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26287.215..41967.313 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.353..6968.114 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9072.587..9072.587 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.047..4435.928 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.275..1875.318 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.739..0.739 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.552..0.635 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1493.461..1493.461 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.799..511.256 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=206.060..206.061 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.963..90.275 rows=333333 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.507..0.507 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.479..0.481 rows=4 loops=3)",,,,,,,,,""
2021-03-21 21:17:45.456 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,247,"",2021-03-21 14:47:00 CET,4/255,0,LOG,00000,"duration: 100941.928 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7094321.95..7094321.96 rows=1 width=8) (actual time=95881.204..95881.204 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=95876.614..100941.713 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=95825.692..95825.693 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466918 width=0) (actual time=83133.886..94526.475 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8699.818..15352.092 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8698.174..13534.015 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.306..4526.856 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.457..1864.770 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.812..0.813 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.632..0.713 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1273.224..1273.225 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.552..514.485 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.579..1.579 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.560..1.563 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=58770.795..58770.796 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11966.365..25712.832 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.981..5735.621 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=201.574..201.574 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.832..82.838 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:19:20.100 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,248,"",2021-03-21 14:47:00 CET,4/256,0,LOG,00000,"duration: 94590.269 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=15213028.15..15213028.16 rows=1 width=8) (actual time=90863.943..90863.943 rows=1 loops=1)
  ->  Gather  (cost=15213027.94..15213028.15 rows=2 width=8) (actual time=90858.511..94588.121 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15212027.94..15212027.95 rows=1 width=8) (actual time=90809.696..90809.696 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529182.00..14850860.64 rows=144466917 width=0) (actual time=81611.991..89620.701 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=507869.00..12491597.67 rows=150000000 width=8) (actual time=60992.029..76524.549 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=60990.852..71231.166 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24900.861..47616.987 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24900.100..40841.441 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.052..7121.350 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7685.804..7685.805 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.342..2707.108 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.710..0.710 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.695..0.699 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4941.334..4941.334 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.822..494.718 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.129..1.130 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.850..0.967 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=224.323..224.323 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.884..88.827 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:21:05.077 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,249,"",2021-03-21 14:47:00 CET,4/257,0,LOG,00000,"duration: 104954.430 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=7094321.94..7094321.95 rows=1 width=8) (actual time=96368.634..96368.634 rows=1 loops=1)
  ->  Gather  (cost=7094321.73..7094321.94 rows=2 width=8) (actual time=96362.750..104954.234 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7093321.73..7093321.74 rows=1 width=8) (actual time=96313.796..96313.796 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1702918.71..6732154.44 rows=144466917 width=0) (actual time=83880.826..95024.438 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8467.264..15112.118 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8465.657..13303.309 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.647..4320.831 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.539..1766.574 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.066..1.066 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.842..0.940 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1295.431..1295.432 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.629..514.197 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.539..1.540 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.522..1.524 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1211157.33..1211157.33 rows=24077820 width=8) (actual time=59858.211..59858.211 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=12801.383..26906.477 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.023..5779.039 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=230.828..230.828 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.949..94.921 rows=333333 loops=3)",,,,,,,,,""
2021-03-21 21:22:36.686 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,250,"",2021-03-21 14:47:00 CET,4/258,0,LOG,00000,"duration: 91519.928 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=87917.845..87917.846 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=87914.100..91519.203 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=87861.283..87861.283 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=78733.595..86560.036 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=42275.729..70409.718 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=42274.759..64766.480 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=42269.327..57616.575 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11814.404..25293.764 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.546..5762.207 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=449.906..449.906 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=46.178..314.183 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..91.117 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=44.927..44.928 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.577..32.460 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6750.982..6750.982 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.729..2400.693 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.352..5.352 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.717..3.509 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.928..0.928 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.911..0.913 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1247.532..1247.533 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.644..494.550 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 21:24:18.997 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,251,"",2021-03-21 14:47:00 CET,4/259,0,LOG,00000,"duration: 102276.978 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94576.202..94576.202 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94567.834..102276.776 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94518.064..94518.064 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82105.425..93219.206 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6551.236..13259.071 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6549.709..11457.067 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.416..2517.704 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1303.653..1303.653 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.245..537.190 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.465..1.465 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.446..1.448 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60225.686..60225.686 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12670.603..26875.186 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.878..5791.347 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.188..410.188 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.625..289.908 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.778..83.044 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.538..42.538 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.468..31.689 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.547..8.367 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.836..4.836 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.558..2.612 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:25:42.920 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,252,"",2021-03-21 14:47:00 CET,4/260,0,LOG,00000,"duration: 83867.029 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8305159.04..8305159.05 rows=1 width=8) (actual time=79939.126..79939.126 rows=1 loops=1)
  ->  Gather  (cost=8305158.82..8305159.03 rows=2 width=8) (actual time=79934.950..83866.408 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8304158.82..8304158.83 rows=1 width=8) (actual time=79881.216..79881.216 rows=1 loops=3)
              ->  Hash Join  (cost=534388.10..7942991.53 rows=144466918 width=0) (actual time=64890.926..78572.151 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=534351.10..2826417.78 rows=24077820 width=8) (actual time=64890.128..73631.645 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=41983.884..55936.195 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12584.405..24920.400 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.450..5809.279 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=1024.741..1024.741 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=34.945..432.468 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=29.981..308.850 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=2.043..94.733 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.570..27.571 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.578..13.399 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.821..4.821 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.867..2.743 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6911.610..6911.611 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.476..2495.915 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1794.578..1794.578 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.046..504.345 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.594..0.594 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.563..0.568 rows=4 loops=3)",,,,,,,,,""
2021-03-21 21:27:29.103 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,253,"",2021-03-21 14:47:00 CET,4/261,0,LOG,00000,"duration: 106164.036 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=101255.492..101255.492 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=101246.358..106161.444 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=101196.393..101196.394 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=87835.834..99827.520 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=8465.674..15553.198 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=8464.183..13616.036 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.517..3382.623 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1307.078..1307.078 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.290..531.687 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.413..1.414 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.389..1.394 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63216.876..63216.876 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12730.355..27456.368 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.836..5868.907 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=421.016..421.016 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.103..287.757 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.732..86.842 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.991..43.991 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.975..32.474 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.488..9.001 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.399..4.399 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.462 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:29:37.676 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,254,"",2021-03-21 14:47:00 CET,4/262,0,LOG,00000,"duration: 128526.817 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13006499.86..13006499.87 rows=1 width=8) (actual time=123092.812..123092.813 rows=1 loops=1)
  ->  Gather  (cost=13006499.65..13006499.86 rows=2 width=8) (actual time=123086.972..128526.261 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13005499.65..13005499.66 rows=1 width=8) (actual time=123036.890..123036.890 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..12644332.36 rows=144466917 width=0) (actual time=96876.823..121823.303 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=8) (actual time=96871.537..115846.137 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=96841.960..107603.160 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=74553.985..87762.118 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=8762.420..15508.975 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=8760.180..13671.650 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.417..2689.243 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1261.399..1261.400 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.710..482.552 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.151..2.151 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.117..2.125 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49905.958..49905.958 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.236..8013.986 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3961.777..3961.777 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.925..115.452 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.232..29.232 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.496..14.508 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.933..4.933 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.444..2.602 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:31:23.082 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,255,"",2021-03-21 14:47:00 CET,4/263,0,LOG,00000,"duration: 105374.201 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=99790.670..99790.670 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99783.706..105374.046 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99729.507..99729.507 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=87072.498..98440.212 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6580.830..13425.335 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6578.624..11576.104 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.392..2499.226 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1331.096..1331.096 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.685..532.945 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.136..2.136 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.101..2.112 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=64856.291..64856.291 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=15975.798..29907.609 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.502..5764.114 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=443.333..443.333 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.727..303.473 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.686..89.180 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.656..47.656 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.004..35.416 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.532..9.700 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.354..5.355 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.494..2.870 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:32:56.758 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,256,"",2021-03-21 14:47:00 CET,4/264,0,LOG,00000,"duration: 93609.431 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=90471.847..90471.848 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=90464.024..93608.866 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=90414.079..90414.079 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=57032.125..88954.105 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=57027.124..82544.209 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=57026.550..77946.539 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=57002.876..68689.675 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=37409.148..50887.476 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.728..7026.153 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=19648.407..19648.408 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=10275.173..14691.018 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.506..2437.704 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4859.948..4859.949 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.821..477.770 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=338.226..338.227 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.060..132.022 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.356..23.356 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.496..11.818 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.555..0.555 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.535..0.537 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.721..4.721 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.597..2.648 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:34:45.570 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,257,"",2021-03-21 14:47:00 CET,4/265,0,LOG,00000,"duration: 108787.101 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99297.664..99297.664 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99289.068..108786.983 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99241.441..99241.441 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85940.934..97861.088 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7097.643..14313.637 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7095.994..12373.409 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.396..2670.772 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1445.688..1445.688 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.464..545.208 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.522..1.522 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.490..1.493 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62911.401..62911.402 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13180.061..28153.176 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.887..6108.637 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=412.157..412.158 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.282..295.929 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.943..88.822 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.021..47.021 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.895..34.593 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.568..9.236 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.209..5.209 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.556..2.842 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:37:06.551 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,258,"",2021-03-21 14:47:00 CET,4/266,0,LOG,00000,"duration: 140927.948 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15769954.82..15769954.83 rows=1 width=8) (actual time=132382.372..132382.372 rows=1 loops=1)
  ->  Gather  (cost=15769954.61..15769954.82 rows=2 width=8) (actual time=132376.819..140927.399 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15768954.61..15768954.62 rows=1 width=8) (actual time=132329.766..132329.766 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15407787.32 rows=144466917 width=0) (actual time=105616.712..131069.474 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=8) (actual time=105612.065..124920.528 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=105587.187..116546.390 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=91845.518..100496.217 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68450.020..83842.796 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.465..4310.049 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.631..2042.115 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.783..0.784 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.762..0.765 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51433.402..51433.403 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..7998.405 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1376.608..1376.608 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.862..492.676 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.153..226.153 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.612..99.270 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.592..24.592 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.727..12.604 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.361..4.361 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.612..2.475 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:38:46.204 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,259,"",2021-03-21 14:47:00 CET,4/267,0,LOG,00000,"duration: 99620.374 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=94203.227..94203.228 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94193.204..99617.854 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94137.772..94137.772 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=81768.348..92868.367 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6603.051..13292.367 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6601.231..11475.467 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.679..2498.593 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1311.802..1311.803 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.885..525.897 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.722..1.722 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.686..1.690 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58518.280..58518.280 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12859.968..27003.480 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.481..5914.271 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=991.528..991.529 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.558..342.734 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.973..89.602 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.215..57.216 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.739..41.552 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.634..11.606 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.997..5.997 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.596..3.131 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:40:28.855 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,260,"",2021-03-21 14:47:00 CET,4/268,0,LOG,00000,"duration: 102596.032 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=99373.231..99373.231 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=99369.013..102595.936 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=99319.203..99319.203 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=91147.272..98132.950 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=53966.908..79848.646 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=53961.942..73100.454 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=53961.365..68111.860 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11535.202..36372.270 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11511.763..25390.150 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.778..5590.824 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.600..221.601 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.840..94.409 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.034..23.034 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.775..11.786 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7029.624..7029.624 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.939..2547.504 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.541..0.541 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.525..0.526 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.813..4.813 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.796..2.727 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4849.174..4849.174 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.974..516.675 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 21:42:12.287 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,261,"",2021-03-21 14:47:00 CET,4/269,0,LOG,00000,"duration: 103407.283 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95286.617..95286.617 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95278.802..103405.364 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95237.953..95237.954 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83395.517..94037.313 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6855.896..13511.212 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6853.909..11715.190 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.455..2594.933 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1334.450..1334.450 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.841..536.905 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.912..1.912 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.889..1.894 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59404.248..59404.249 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12119.677..26481.543 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.708..5483.507 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=449.985..449.986 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.892..319.631 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.742..99.161 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.720..41.720 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.092..30.703 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.398..8.242 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.582..4.582 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.389..2.374 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:44:20.194 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,262,"",2021-03-21 14:47:00 CET,4/270,0,LOG,00000,"duration: 127855.648 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13006499.86..13006499.87 rows=1 width=8) (actual time=118576.463..118576.463 rows=1 loops=1)
  ->  Gather  (cost=13006499.65..13006499.86 rows=2 width=8) (actual time=118572.801..127855.137 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13005499.65..13005499.66 rows=1 width=8) (actual time=118521.695..118521.695 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..12644332.36 rows=144466917 width=0) (actual time=92257.897..117280.413 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=8) (actual time=92252.701..111259.022 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=92229.144..103007.192 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=73854.720..87031.420 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6556.826..13217.690 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6555.533..11370.570 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.376..2422.553 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.886..1238.887 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.154..490.505 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.246..1.246 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.229..1.231 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51102.852..51102.852 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.042..7937.177 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.287..245.287 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.846..108.002 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.283..23.283 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.522..11.850 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.929..4.929 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.521..2.713 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:46:02.043 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,263,"",2021-03-21 14:47:00 CET,4/271,0,LOG,00000,"duration: 101818.779 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=96486.734..96486.734 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96482.241..101818.674 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96428.814..96428.815 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=83829.112..95134.897 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7098.121..13722.734 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7096.579..11921.685 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.433..2507.886 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1295.098..1295.099 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.286..521.245 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.493..1.493 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.464..1.467 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60543.547..60543.547 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12482.837..26383.844 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.516..5921.518 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=401.701..401.702 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.724..286.448 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.039..83.286 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.368..43.368 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.797..32.517 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.690..8.768 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.011..5.011 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.722..2.840 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:47:51.497 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,264,"",2021-03-21 14:47:00 CET,4/272,0,LOG,00000,"duration: 109397.529 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=105664.785..105664.785 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=105660.856..109397.449 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=105609.335..105609.335 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=92258.224..104417.110 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=92257.182..100005.305 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=46541.407..83044.748 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=46536.268..74802.112 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=46514.089..63075.996 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12307.109..26019.913 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.468..5875.243 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=301.455..301.455 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.755..112.795 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10618.316..10618.316 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.999..2541.137 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.824..21.824 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.736..11.305 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.009..5.009 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.919..2.840 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1347.810..1347.810 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.014..479.707 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.821..0.821 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.798..0.800 rows=4 loops=3)",,,,,,,,,""
2021-03-21 21:49:34.832 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,265,"",2021-03-21 14:47:00 CET,4/273,0,LOG,00000,"duration: 103312.721 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97792.367..97792.367 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97784.038..103312.605 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97732.376..97732.377 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84690.753..96357.906 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7039.124..14272.007 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7037.275..12341.910 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.578..2731.537 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1327.370..1327.371 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.868..532.297 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.796..1.797 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.777..1.779 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61009.279..61009.280 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12754.991..27599.164 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.899..5951.575 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=423.645..423.645 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.418..301.859 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.918..90.170 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.180..46.180 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.166..34.272 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.490..9.411 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.564..4.564 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.481..2.639 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:51:00.268 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,266,"",2021-03-21 14:47:00 CET,4/274,0,LOG,00000,"duration: 85388.198 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8305159.04..8305159.05 rows=1 width=8) (actual time=82139.622..82139.622 rows=1 loops=1)
  ->  Gather  (cost=8305158.82..8305159.03 rows=2 width=8) (actual time=82135.370..85388.074 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8304158.82..8304158.83 rows=1 width=8) (actual time=82081.711..82081.711 rows=1 loops=3)
              ->  Hash Join  (cost=534388.10..7942991.53 rows=144466918 width=0) (actual time=68271.957..80855.210 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=534351.10..2826417.78 rows=24077820 width=8) (actual time=68270.966..76282.209 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=41084.363..55384.826 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12213.973..24119.512 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.686..5882.985 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=572.273..572.274 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=40.237..452.592 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=34.740..326.097 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.837..85.433 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.444..33.444 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.666..15.783 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.393..5.394 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.734..2.881 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7164.060..7164.060 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.605..2567.985 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4700.224..4700.224 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.093..532.367 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.784..0.785 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.758..0.760 rows=4 loops=3)",,,,,,,,,""
2021-03-21 21:52:45.434 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,267,"",2021-03-21 14:47:00 CET,4/275,0,LOG,00000,"duration: 105142.547 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96894.583..96894.584 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96887.034..105142.373 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96833.651..96833.651 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83462.636..95480.743 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6840.595..13649.825 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6838.629..11812.549 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.407..2502.826 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1314.805..1314.809 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.577..513.728 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.887..1.887 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.866..1.869 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60678.997..60678.997 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12032.033..26292.274 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.924..5422.249 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=392.796..392.796 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.387..276.488 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.818..80.736 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.167..44.167 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.528..32.897 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.566..8.692 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.870..4.870 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.462..2.706 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:54:26.943 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,268,"",2021-03-21 14:47:00 CET,4/276,0,LOG,00000,"duration: 101458.475 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=98510.688..98510.688 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=98506.516..101458.109 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=98456.312..98456.312 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=90188.179..97287.334 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=53987.300..81858.609 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=53986.533..76262.932 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=53982.175..69240.567 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11722.269..37073.453 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11700.961..25826.997 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.995..5703.303 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=217.357..217.358 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.725..94.529 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.973..20.974 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.646..10.863 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6729.915..6729.915 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.887..2441.239 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.272..4.273 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.575..2.367 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.723..0.723 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.704..0.706 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1332.282..1332.282 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.872..499.942 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 21:56:06.414 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,269,"",2021-03-21 14:47:00 CET,4/277,0,LOG,00000,"duration: 99453.427 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94650.613..94650.613 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94644.327..99453.279 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94595.680..94595.680 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81805.434..93270.325 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6666.619..13442.211 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6664.841..11607.274 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.472..2506.161 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1310.577..1310.578 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.880..512.016 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.708..1.709 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.688..1.690 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59212.199..59212.199 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12660.090..26972.396 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..5768.815 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.914..410.915 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.702..294.590 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.930..85.993 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.412..46.413 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.784..34.242 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.541..9.544 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.123..5.123 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.542..2.759 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:57:51.881 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,270,"",2021-03-21 14:47:00 CET,4/278,0,LOG,00000,"duration: 105403.717 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10749695.83..10749695.84 rows=1 width=8) (actual time=102153.286..102153.287 rows=1 loops=1)
  ->  Gather  (cost=10749695.62..10749695.83 rows=2 width=8) (actual time=102148.583..105403.603 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10748695.62..10748695.63 rows=1 width=8) (actual time=102096.814..102096.814 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10387528.32 rows=144466918 width=0) (actual time=69188.047..100644.861 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=8) (actual time=69182.310..94354.148 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=69181.702..89783.097 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=69159.084..80656.997 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=52987.801..63192.242 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24388.064..40037.202 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.408..7116.829 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6748.657..6748.658 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.564..2427.043 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4619.214..4619.214 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.784..491.254 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=322.674..322.674 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.026..115.100 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.338..22.338 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.568..11.823 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.588..0.588 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.572..0.573 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.433..5.433 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.632..2.914 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 21:59:37.676 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,271,"",2021-03-21 14:47:00 CET,4/279,0,LOG,00000,"duration: 105759.064 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98262.814..98262.814 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98256.619..105756.805 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98203.152..98203.152 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85086.987..96877.857 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6427.380..13349.382 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6425.645..11528.593 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.527..2398.113 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1356.200..1356.200 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.321..540.745 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.665..1.665 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.639..1.641 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62644.588..62644.588 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13461.206..27815.870 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.925..6424.236 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=416.409..416.409 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.045..291.463 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.775..87.911 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.920..45.921 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.107..34.004 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.514..9.314 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.507..4.507 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.526..2.515 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:01:28.690 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,272,"",2021-03-21 14:47:00 CET,4/280,0,LOG,00000,"duration: 110969.965 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9123912.41..9123912.42 rows=1 width=8) (actual time=107149.661..107149.661 rows=1 loops=1)
  ->  Gather  (cost=9123912.20..9123912.41 rows=2 width=8) (actual time=107145.794..110969.247 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9122912.20..9122912.21 rows=1 width=8) (actual time=107093.444..107093.445 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8761744.90 rows=144466918 width=0) (actual time=84203.075..105735.856 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3645171.15 rows=24077820 width=8) (actual time=84202.270..100465.116 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=84196.004..94446.737 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=47317.236..73362.082 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=47292.349..61615.972 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25027.818..39351.581 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.335..7899.156 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6795.684..6795.685 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.519..2372.264 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.372..242.372 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.679..103.882 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.545..24.545 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..12.568 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2278.179..2278.179 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.858..533.276 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.142..6.143 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.564..3.182 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.580..0.580 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.550..0.552 rows=4 loops=3)",,,,,,,,,""
2021-03-21 22:03:11.510 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,273,"",2021-03-21 14:47:00 CET,4/281,0,LOG,00000,"duration: 102791.742 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97922.525..97922.525 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97915.723..102789.420 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97866.296..97866.297 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84784.220..96525.607 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6602.194..13358.140 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6600.607..11519.980 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.421..2484.753 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1343.941..1343.941 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.440..516.039 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.525..1.526 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.509..1.510 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60921.071..60921.071 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14097.647..28456.848 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.974..6684.607 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=403.029..403.029 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.006..282.195 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.869..87.284 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.841..40.841 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.390..30.886 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.636..8.352 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.661..4.661 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.514..2.570 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:05:02.859 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,274,"",2021-03-21 14:47:00 CET,4/282,0,LOG,00000,"duration: 111297.157 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9076886.41..9076886.42 rows=1 width=8) (actual time=107549.421..107549.421 rows=1 loops=1)
  ->  Gather  (cost=9076886.20..9076886.41 rows=2 width=8) (actual time=107545.415..111296.999 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9075886.20..9075886.21 rows=1 width=8) (actual time=107494.973..107494.973 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8714718.90 rows=144466918 width=0) (actual time=92401.266..106198.070 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3598145.15 rows=24077820 width=8) (actual time=92400.329..101173.039 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=47160.744..79943.523 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=47154.855..72154.606 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=47121.892..61157.750 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25636.852..39648.449 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.895..7803.130 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7778.342..7778.342 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.336..2610.957 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.002..231.002 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.760..102.517 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.562..32.562 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.650..15.450 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.762..5.762 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.715..2.976 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4828.229..4828.229 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.977..504.302 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.664..0.664 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.640..0.642 rows=4 loops=3)",,,,,,,,,""
2021-03-21 22:06:49.024 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,275,"",2021-03-21 14:47:00 CET,4/283,0,LOG,00000,"duration: 106140.573 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97262.552..97262.552 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97254.664..106139.599 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97203.827..97203.827 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84392.579..95876.940 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6380.905..13048.862 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6379.272..11225.878 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.416..2422.055 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.530..1283.531 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.403..521.574 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.564..1.565 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.539..1.541 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61311.292..61311.292 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13191.308..27326.975 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.896..5827.842 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=433.286..433.286 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.530..291.629 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.991..85.834 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.191..44.191 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.927..33.263 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.525..8.957 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.301..5.301 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.511..2.860 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:08:33.099 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,276,"",2021-03-21 14:47:00 CET,4/284,0,LOG,00000,"duration: 104015.125 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=100533.192..100533.192 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=100529.663..104014.370 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=100476.478..100476.478 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=91434.283..99175.509 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=55085.508..83192.345 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=55079.402..75877.176 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55078.895..70447.853 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12041.727..37671.014 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12020.524..26308.702 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.696..5932.419 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=205.938..205.939 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.675..90.034 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.851..20.852 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.797..11.030 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6680.282..6680.283 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.834..2406.174 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.484..0.484 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.472..0.473 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.999..5.999 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.786..3.208 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.804..1259.804 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.975..481.491 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 22:10:14.300 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,277,"",2021-03-21 14:47:00 CET,4/285,0,LOG,00000,"duration: 101171.016 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96341.597..96341.597 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96336.785..101168.619 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96286.567..96286.567 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83664.835..94984.387 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6745.475..13434.229 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6742.932..11612.431 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.440..2585.471 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1354.038..1354.038 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.050..532.109 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.473..2.473 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.441..2.445 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60650.317..60650.317 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12854.723..27040.756 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.869..5892.423 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=399.539..399.540 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.608..280.301 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.915..85.301 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.383..43.383 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.124..32.649 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.524..8.544 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.502..5.502 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.543..2.870 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:12:43.439 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,278,"",2021-03-21 14:47:00 CET,4/286,0,LOG,00000,"duration: 149091.527 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15769954.82..15769954.83 rows=1 width=8) (actual time=138820.928..138820.929 rows=1 loops=1)
  ->  Gather  (cost=15769954.61..15769954.82 rows=2 width=8) (actual time=138815.017..149091.308 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15768954.61..15768954.62 rows=1 width=8) (actual time=138765.775..138765.775 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15407787.32 rows=144466917 width=0) (actual time=111601.344..137507.374 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=8) (actual time=111595.703..131250.080 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=111567.789..122740.960 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=94167.788..102862.087 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69499.907..85869.117 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.544..4375.140 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.213..2053.924 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.239..1.240 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.215..1.218 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52781.522..52781.522 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.003..7981.731 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1313.589..1313.589 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.855..481.613 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3778.427..3778.427 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.874..124.746 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.568..27.568 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.486..13.706 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.326..5.326 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.642..2.952 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:14:28.102 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,279,"",2021-03-21 14:47:00 CET,4/287,0,LOG,00000,"duration: 104629.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=97418.196..97418.196 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97412.420..104625.510 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97363.635..97363.636 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=84960.578..96078.069 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7203.030..13933.682 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7201.372..12103.743 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.866..2544.020 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1336.707..1336.707 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.491..521.167 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.589..1.590 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.569..1.571 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60900.060..60900.060 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12110.242..26511.866 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.818..5716.790 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=417.092..417.092 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.826..295.751 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.000..92.715 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.492..42.492 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.002..31.695 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.543..8.915 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.370..4.370 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.516..2.467 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:16:13.160 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,280,"",2021-03-21 14:47:00 CET,4/288,0,LOG,00000,"duration: 104995.056 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9094345.73..9094345.74 rows=1 width=8) (actual time=101476.869..101476.869 rows=1 loops=1)
  ->  Gather  (cost=9094345.52..9094345.73 rows=2 width=8) (actual time=101470.533..104994.544 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9093345.52..9093345.53 rows=1 width=8) (actual time=101417.890..101417.890 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8732178.22 rows=144466918 width=0) (actual time=67543.516..99936.303 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3615604.47 rows=24077820 width=8) (actual time=67542.655..94893.421 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=67537.196..88688.049 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=67513.800..79275.154 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=51489.470..61620.619 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24177.131..39705.070 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.920..6904.201 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7128.708..7128.709 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.121..2570.482 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3260.013..3260.014 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.991..493.478 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.200..229.200 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.938..99.825 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.075..23.076 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.556..11.981 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.367..5.367 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..2.906 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.637..0.637 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.607..0.609 rows=4 loops=3)",,,,,,,,,""
2021-03-21 22:17:52.584 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,281,"",2021-03-21 14:47:00 CET,4/289,0,LOG,00000,"duration: 99394.357 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94452.397..94452.397 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94446.140..99394.201 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94393.111..94393.111 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81546.630..93084.665 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6201.073..13487.925 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6199.404..11645.121 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.527..2290.292 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1378.517..1378.518 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.551..520.087 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.603..1.603 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.584..1.586 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59067.422..59067.423 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12682.723..26798.725 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.913..5695.708 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=412.507..412.507 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.413..291.634 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.843..89.419 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.213..42.213 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.516..31.852 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.552..8.639 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.852..4.852 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.829..2.843 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:19:28.123 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,282,"",2021-03-21 14:47:00 CET,4/290,0,LOG,00000,"duration: 95485.775 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=91816.159..91816.159 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=91812.400..95485.250 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=91758.103..91758.103 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=82706.388..90468.754 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=43883.550..71244.791 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=43882.614..65766.649 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=43877.783..58904.525 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12117.196..26023.445 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.425..5801.186 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=636.151..636.152 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=27.745..334.563 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.814..97.589 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.596..26.597 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.446..13.280 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7219.547..7219.547 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.895..2577.621 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.725..4.725 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.532..2.560 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.880..0.881 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.861..0.863 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4639.426..4639.426 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.121..476.741 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 22:21:10.148 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,283,"",2021-03-21 14:47:00 CET,4/291,0,LOG,00000,"duration: 101997.659 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=93905.168..93905.168 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=93899.886..101997.466 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=93852.739..93852.740 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81448.704..92544.732 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6870.737..13503.575 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6868.996..11685.177 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.465..2529.795 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1328.391..1328.391 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.478..534.150 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.686..1.686 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.665..1.667 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59246.173..59246.173 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12697.364..26684.494 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.958..5755.663 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=418.252..418.252 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.561..297.280 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.837..86.055 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.406..42.406 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.952..31.372 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.566..8.494 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.295..4.296 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.582..2.410 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:22:39.708 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,284,"",2021-03-21 14:47:00 CET,4/292,0,LOG,00000,"duration: 89514.206 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12040680.30..12040680.31 rows=1 width=8) (actual time=86232.915..86232.915 rows=1 loops=1)
  ->  Gather  (cost=12040680.08..12040680.29 rows=2 width=8) (actual time=86226.693..89513.848 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12039680.08..12039680.09 rows=1 width=8) (actual time=86173.909..86173.909 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..11678512.79 rows=144466918 width=0) (actual time=53915.362..84718.607 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=8) (actual time=53909.877..78580.463 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=53885.158..70134.934 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=53884.474..65567.355 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33189.740..46999.708 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.483..7064.832 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16026.321..16026.321 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6920.064..11574.443 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.550..2507.438 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1404.403..1404.403 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.987..502.923 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.355..243.355 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.050..98.507 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.649..0.649 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.631..0.632 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.430..24.430 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.608..12.607 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.033..5.033 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.913..2.967 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:24:22.436 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,285,"",2021-03-21 14:47:00 CET,4/293,0,LOG,00000,"duration: 102691.633 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94318.957..94318.957 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94312.837..102691.508 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94258.663..94258.663 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82439.131..93072.752 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7072.867..14161.799 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7071.236..12314.926 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.398..2527.969 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1735.721..1735.721 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.478..505.673 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.558..1.559 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.543..1.545 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59816.987..59816.987 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12777.156..26812.155 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.903..5814.912 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=448.236..448.236 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=49.761..321.721 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.947..95.755 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=48.318..48.318 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.061..35.321 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.601..9.714 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.311..5.312 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.704..2.849 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:25:55.368 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,286,"",2021-03-21 14:47:00 CET,4/294,0,LOG,00000,"duration: 92890.026 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12040680.30..12040680.31 rows=1 width=8) (actual time=89805.402..89805.402 rows=1 loops=1)
  ->  Gather  (cost=12040680.08..12040680.29 rows=2 width=8) (actual time=89799.070..92889.487 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12039680.08..12039680.09 rows=1 width=8) (actual time=89748.249..89748.250 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..11678512.79 rows=144466918 width=0) (actual time=55739.521..88241.726 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=8) (actual time=55734.501..81795.018 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=55709.249..72859.189 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=55708.596..68104.222 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=34225.081..48749.298 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.603..7524.283 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15940.131..15940.131 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6538.205..11543.377 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.749..2383.828 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1346.820..1346.820 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.942..517.230 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=671.533..671.533 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.877..118.765 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.613..0.613 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.595..0.597 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.909..24.909 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.781..12.583 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.704..4.704 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.725..2.618 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:27:39.585 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,287,"",2021-03-21 14:47:00 CET,4/295,0,LOG,00000,"duration: 104181.972 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96200.159..96200.159 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96197.248..104181.730 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96146.801..96146.801 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83700.885..94900.648 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6612.079..13248.063 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6610.512..11439.016 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.406..2507.693 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1293.374..1293.375 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.388..523.630 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.489..1.489 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.463..1.466 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59896.984..59896.985 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12626.750..26672.631 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.065..5651.347 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=446.573..446.573 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.423..318.564 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.957..96.876 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.117..42.118 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.164..31.392 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.524..8.426 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.546..4.547 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.553..2.507 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:29:27.654 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,288,"",2021-03-21 14:47:00 CET,4/296,0,LOG,00000,"duration: 108016.057 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=103621.361..103621.361 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=103617.811..108015.261 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=103567.370..103567.370 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=71078.351..102096.246 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=71073.438..95682.099 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=71072.917..91055.460 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=71050.627..81894.168 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46897.401..60887.037 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24687.527..39225.572 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.922..7153.297 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7082.906..7082.906 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.815..2577.519 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=258.027..258.027 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.022..107.790 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1237.723..1237.723 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.924..487.670 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.972..21.972 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.597..11.671 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.491..0.491 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.476..0.477 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.602..4.602 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.544..2.568 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:31:07.459 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,289,"",2021-03-21 14:47:00 CET,4/297,0,LOG,00000,"duration: 99772.865 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94281.896..94281.897 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94273.861..99770.878 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94226.009..94226.010 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82170.983..92994.233 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6544.280..13171.440 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6542.355..11365.930 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.572..2446.652 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1295.445..1295.445 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.332..500.978 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.850..1.850 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.829..1.831 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60079.833..60079.833 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12540.630..26692.988 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.758..5728.302 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=418.305..418.305 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.255..299.981 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.916..92.156 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.033..41.033 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.253..30.741 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.511..8.085 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.655..4.656 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.566 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:32:58.976 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,290,"",2021-03-21 14:47:00 CET,4/298,0,LOG,00000,"duration: 111473.900 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=107578.221..107578.221 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=107575.142..111472.840 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=107518.843..107518.843 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=74174.496..105996.965 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=74167.909..99426.690 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=74167.205..94648.562 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=74140.512..85298.937 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=50194.717..64297.000 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25891.309..39892.937 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.556..7135.473 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7272.946..7272.947 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.284..2597.617 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3563.185..3563.186 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.925..113.650 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1340.147..1340.147 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.998..485.198 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.366..26.366 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.605..13.584 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.676..0.676 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.651..0.653 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.138..6.138 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.609..3.252 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:34:43.911 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,291,"",2021-03-21 14:47:00 CET,4/299,0,LOG,00000,"duration: 104905.295 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96276.936..96276.936 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96270.976..104905.110 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96215.471..96215.471 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83464.361..94906.598 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7251.285..13859.345 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7249.937..12051.990 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.454..2550.979 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1336.274..1336.275 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.450..534.242 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.253..1.254 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.232..1.234 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59930.625..59930.625 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13235.686..27668.592 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.826..5637.888 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.539..410.539 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.413..292.436 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.112..91.972 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.969..42.969 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.415..32.369 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.737..9.004 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.584..4.584 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.723..2.711 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:36:29.528 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,292,"",2021-03-21 14:47:00 CET,4/300,0,LOG,00000,"duration: 105553.807 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=101694.448..101694.448 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=101690.847..105553.166 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=101633.628..101633.629 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=92905.267..100386.610 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=43159.855..84080.619 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=43153.717..76661.012 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43153.154..71263.406 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43130.905..59595.745 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11945.475..25654.203 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.793..5918.144 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=260.039..260.040 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.074..117.647 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7371.386..7371.386 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.899..2568.761 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.852..21.852 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..11.335 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.529..0.529 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.517..0.518 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.038..6.038 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.726..3.192 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1329.088..1329.088 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.202..503.584 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 22:38:14.715 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,293,"",2021-03-21 14:47:00 CET,4/301,0,LOG,00000,"duration: 105151.515 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96835.074..96835.074 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96828.541..105151.379 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96768.536..96768.536 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84154.544..95467.716 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7075.334..13889.987 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7073.654..12026.182 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.545..2551.017 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1674.775..1674.776 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.605..512.749 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.613..1.614 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.596..1.598 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61424.249..61424.250 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12567.436..26552.026 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.930..5894.757 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=451.245..451.245 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.123..326.760 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.073..95.279 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.637..44.637 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.276..32.962 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.666..9.019 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.508..4.508 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.714..2.608 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:40:00.907 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,294,"",2021-03-21 14:47:00 CET,4/302,0,LOG,00000,"duration: 106129.038 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14666827.34..14666827.35 rows=1 width=8) (actual time=102694.497..102694.497 rows=1 loops=1)
  ->  Gather  (cost=14666827.12..14666827.33 rows=2 width=8) (actual time=102689.979..106128.905 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14665827.12..14665827.13 rows=1 width=8) (actual time=102639.474..102639.474 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14304659.83 rows=144466918 width=0) (actual time=86626.338..101357.944 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=8) (actual time=86619.906..95552.757 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=45861.873..76503.103 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45839.544..65375.543 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45838.936..60023.984 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24530.527..38828.062 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.769..7111.872 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6646.621..6646.622 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.523..2437.721 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=259.415..259.416 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.919..113.542 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.570..0.570 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.554..0.555 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.937..21.937 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.671..11.235 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1593.969..1593.970 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.052..518.374 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.019..6.019 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.571..3.209 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:41:47.555 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,295,"",2021-03-21 14:47:00 CET,4/303,0,LOG,00000,"duration: 106616.124 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98195.410..98195.411 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98186.469..106615.941 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98139.200..98139.200 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86240.223..96946.944 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6727.856..13557.285 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6725.690..11749.883 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.820..2568.425 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1303.189..1303.193 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.694..526.289 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.089..2.089 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.066..2.068 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63172.217..63172.217 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12782.320..26899.389 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.844..5796.773 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=418.379..418.379 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.292..300.860 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.815..87.799 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.157..41.158 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.941..30.728 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.444..8.188 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.404..4.404 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.426..2.350 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:43:34.156 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,296,"",2021-03-21 14:47:00 CET,4/304,0,LOG,00000,"duration: 106556.425 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9076886.41..9076886.42 rows=1 width=8) (actual time=102910.140..102910.140 rows=1 loops=1)
  ->  Gather  (cost=9076886.20..9076886.41 rows=2 width=8) (actual time=102905.467..106555.555 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9075886.20..9075886.21 rows=1 width=8) (actual time=102848.961..102848.961 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8714718.90 rows=144466918 width=0) (actual time=88871.805..101651.896 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3598145.15 rows=24077820 width=8) (actual time=88870.836..97113.428 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=46106.069..79583.313 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=46100.063..71611.074 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46077.175..60485.316 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24619.584..38985.546 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.663..7031.526 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7168.870..7168.871 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.395..2606.086 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=261.724..261.724 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.868..110.001 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.587..22.587 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.563..11.608 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.896..5.897 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.710..3.093 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1271.461..1271.461 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.053..502.916 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.653..0.653 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.628..0.630 rows=4 loops=3)",,,,,,,,,""
2021-03-21 22:45:14.032 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,297,"",2021-03-21 14:47:00 CET,4/305,0,LOG,00000,"duration: 99845.820 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95115.879..95115.879 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95109.160..99845.662 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95057.054..95057.054 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82283.489..93756.959 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6738.861..13374.878 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6736.810..11578.874 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.421..2391.730 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1736.126..1736.127 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.871..685.115 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.933..1.933 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.912..1.914 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58645.427..58645.427 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12014.501..26117.459 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.786..5418.644 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.005..422.005 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.569..307.399 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.888..89.916 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.292..47.292 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.446..34.985 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.584..9.298 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.727..5.727 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..3.027 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:46:56.996 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,298,"",2021-03-21 14:47:00 CET,4/306,0,LOG,00000,"duration: 102903.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14499114.79..14499114.80 rows=1 width=8) (actual time=99441.279..99441.279 rows=1 loops=1)
  ->  Gather  (cost=14499114.57..14499114.78 rows=2 width=8) (actual time=99436.924..102902.421 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14498114.57..14498114.58 rows=1 width=8) (actual time=99381.635..99381.635 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14136947.28 rows=144466917 width=0) (actual time=74046.773..98184.938 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=8) (actual time=74040.739..92267.028 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=74011.963..84173.884 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=53247.612..68663.157 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=53246.625..63610.507 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24345.489..39891.869 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.697..7174.386 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7244.989..7244.989 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.200..2498.283 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4942.752..4942.752 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.932..492.242 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.942..0.942 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.922..0.925 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=328.846..328.846 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.103..131.430 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.394..28.395 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.626..14.414 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.687..5.687 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..3.079 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:48:37.580 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,299,"",2021-03-21 14:47:00 CET,4/307,0,LOG,00000,"duration: 100555.857 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=95905.824..95905.825 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95899.161..100553.954 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95848.509..95848.510 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=83143.212..94538.020 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6952.190..13698.450 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6950.148..11879.502 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.655..2500.710 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1573.276..1573.277 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.641..562.976 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.979..1.979 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.959..1.961 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60897.119..60897.119 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13866.427..27809.743 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..5793.802 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=491.796..491.796 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=51.081..357.756 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.943..104.406 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.793..49.793 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.927..36.359 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.521..10.049 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.310..5.311 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.836 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:50:25.393 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,300,"",2021-03-21 14:47:00 CET,4/308,0,LOG,00000,"duration: 107763.599 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=103392.048..103392.048 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=103387.517..107763.147 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=103338.819..103338.819 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=94155.310..102035.064 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=54963.781..82501.564 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=54962.872..76975.403 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54956.271..70031.040 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11808.690..36958.222 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11781.929..25813.133 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.013..5875.874 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=220.927..220.928 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.720..97.388 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.449..26.449 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.761..13.236 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7723.778..7723.779 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.053..2562.710 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.475..6.476 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.837..3.437 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.860..0.860 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.841 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4731.432..4731.432 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.831..484.378 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 22:52:09.516 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,301,"",2021-03-21 14:47:00 CET,4/309,0,LOG,00000,"duration: 104103.775 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95725.209..95725.209 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95717.887..104101.898 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95669.244..95669.244 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83187.472..94366.601 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7176.589..13776.927 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7174.968..11975.073 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.423..2542.150 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1292.182..1292.183 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.514..515.496 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.575..1.575 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.556..1.558 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60257.703..60257.703 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11850.843..25908.246 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.777..5516.233 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=409.002..409.002 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.278..292.626 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.913..90.163 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.006..44.006 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.905..32.911 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.624..8.909 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.194..5.194 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.665..2.821 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:53:39.212 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,302,"",2021-03-21 14:47:00 CET,4/310,0,LOG,00000,"duration: 89656.076 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8631313.89..8631313.90 rows=1 width=8) (actual time=86547.542..86547.542 rows=1 loops=1)
  ->  Gather  (cost=8631313.68..8631313.89 rows=2 width=8) (actual time=86543.400..89655.612 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8630313.68..8630313.69 rows=1 width=8) (actual time=86490.797..86490.797 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8269146.38 rows=144466918 width=0) (actual time=71986.725..85208.022 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3152572.63 rows=24077820 width=8) (actual time=71985.876..80417.262 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=49060.893..63218.081 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=11958.551..32484.900 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11954.141..25318.841 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.607..5805.460 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=514.347..514.347 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.202..297.900 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.694..91.611 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.126..21.127 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..10.953 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.291..4.292 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.741..2.463 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6781.086..6781.086 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.529..2377.830 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1391.156..1391.156 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.947..507.802 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.643..0.643 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.616..0.618 rows=4 loops=3)",,,,,,,,,""
2021-03-21 22:55:19.307 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,303,"",2021-03-21 14:47:00 CET,4/311,0,LOG,00000,"duration: 100072.645 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95144.180..95144.180 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95138.441..100072.540 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95090.822..95090.822 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82514.444..93785.211 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6546.168..13245.306 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6544.158..11437.055 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.448..2507.959 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.836..1268.837 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.631..514.677 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.960..1.961 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.941..1.946 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59192.626..59192.626 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12043.937..26143.685 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.836..5377.452 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1206.579..1206.579 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=56.236..322.780 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.827..84.571 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=55.114..55.115 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.375..39.655 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.488..11.259 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.793..4.793 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.518 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:57:10.046 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,304,"",2021-03-21 14:47:00 CET,4/312,0,LOG,00000,"duration: 110695.976 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13011477.24..13011477.25 rows=1 width=8) (actual time=106870.622..106870.622 rows=1 loops=1)
  ->  Gather  (cost=13011477.03..13011477.24 rows=2 width=8) (actual time=106867.189..110695.850 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13010477.03..13010477.04 rows=1 width=8) (actual time=106819.386..106819.386 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12649309.73 rows=144466918 width=0) (actual time=89805.621..105515.564 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10662580.61 rows=144466918 width=8) (actual time=89800.410..99360.457 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=16) (actual time=45302.644..77032.354 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=45301.718..70820.449 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45279.517..59642.034 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24297.345..38357.998 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.382..7051.817 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7232.754..7232.755 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.329..2571.872 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.511..242.511 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.624..97.914 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.843..21.844 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.523 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.873..0.874 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.858..0.860 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4730.003..4730.003 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.945..483.995 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.863..4.864 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.496..2.597 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 22:58:53.851 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,305,"",2021-03-21 14:47:00 CET,4/313,0,LOG,00000,"duration: 103784.257 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94994.294..94994.294 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94989.187..103784.137 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94944.761..94944.762 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82264.351..93630.703 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6448.854..13170.678 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6447.536..11343.329 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.479..2452.872 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1305.995..1305.996 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.270..529.814 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.257..1.257 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.238..1.240 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60440.293..60440.293 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13375.549..27476.075 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.001..5910.320 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=437.030..437.030 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.227..307.092 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.758..90.388 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.178..40.178 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.752..30.092 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.516..8.017 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.147..4.147 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.554..2.341 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:00:26.824 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,306,"",2021-03-21 14:47:00 CET,4/314,0,LOG,00000,"duration: 92919.049 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10380717.99..10380718.00 rows=1 width=8) (actual time=89252.303..89252.303 rows=1 loops=1)
  ->  Gather  (cost=10380717.77..10380717.98 rows=2 width=8) (actual time=89248.289..92918.412 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10379717.77..10379717.78 rows=1 width=8) (actual time=89190.555..89190.555 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..10018550.48 rows=144466918 width=0) (actual time=68677.341..88004.821 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=528756.93..8031821.36 rows=144466918 width=8) (actual time=68672.284..82314.308 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=68671.445..77983.478 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=42881.392..58176.545 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12052.970..25761.218 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.537..5909.821 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=465.845..465.845 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=32.827..332.239 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.720..93.732 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.743..31.744 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.467..15.138 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7120.820..7120.820 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.535..2562.009 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1265.101..1265.101 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.144..459.129 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.807..0.807 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.792..0.793 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.733..4.733 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.770..2.737 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:02:11.202 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,307,"",2021-03-21 14:47:00 CET,4/315,0,LOG,00000,"duration: 104354.334 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95648.454..95648.454 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95640.294..104354.185 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95589.588..95589.589 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83010.317..94278.312 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7597.925..14287.960 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7596.124..12465.390 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.591..3365.097 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1339.300..1339.300 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.405..527.772 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.746..1.746 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.725..1.728 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59382.783..59382.784 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12841.553..26726.827 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.854..5701.557 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=486.258..486.258 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.760..332.516 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.781..99.554 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.678..40.678 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.845..30.366 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.612..8.192 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.128..4.128 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.293 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:03:56.760 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,308,"",2021-03-21 14:47:00 CET,4/316,0,LOG,00000,"duration: 105509.822 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=101733.102..101733.102 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=101729.965..105509.318 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=101671.783..101671.784 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=87880.974..100459.507 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=87880.235..95914.132 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=55711.387..78380.159 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55706.923..70862.075 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12132.966..37993.471 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12110.707..26564.949 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.456..5951.630 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.782..236.782 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.033..102.937 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.891..21.891 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.788..11.225 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7190.685..7190.685 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.109..2605.054 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.322..4.322 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.640..2.440 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1223.320..1223.320 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.897..481.391 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.522..0.522 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.499..0.501 rows=4 loops=3)",,,,,,,,,""
2021-03-21 23:05:42.317 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,309,"",2021-03-21 14:47:00 CET,4/317,0,LOG,00000,"duration: 105526.678 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96152.097..96152.098 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96143.557..105526.536 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96092.369..96092.369 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83584.839..94784.629 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6665.477..13230.684 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6663.546..11424.519 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.393..2524.726 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1325.496..1325.497 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.790..527.880 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.854..1.855 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.837..1.839 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59819.620..59819.620 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12086.437..26012.331 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.827..5674.809 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=387.124..387.124 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.591..277.280 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.760..83.634 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.359..43.359 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.832..32.213 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.481..8.414 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.228..5.228 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.477..2.638 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:07:12.702 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,310,"",2021-03-21 14:47:00 CET,4/318,0,LOG,00000,"duration: 90336.087 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=87798.146..87798.146 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=87791.329..90335.689 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=87736.972..87736.973 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=53827.949..86264.857 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=53822.442..79845.157 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=53821.748..75205.608 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=53796.360..65911.875 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33886.600..47736.365 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.511..7153.711 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15666.925..15666.925 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6973.116..11552.749 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.489..2503.780 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1463.174..1463.175 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.865..502.970 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=217.473..217.473 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.929..97.753 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.107..25.107 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.522..12.734 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.674..0.674 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.658..0.659 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.202..5.202 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.576..2.818 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:08:57.357 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,311,"",2021-03-21 14:47:00 CET,4/319,0,LOG,00000,"duration: 104623.569 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95980.568..95980.568 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95974.099..104620.591 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95923.830..95923.830 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83452.114..94621.557 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=8020.702..14759.651 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=8019.128..12947.813 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.723..2478.250 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.571..1321.571 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.311..511.595 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.492..1.493 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.470..1.472 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59547.312..59547.313 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12128.380..26007.108 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.789..5548.454 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=367.365..367.365 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.656..261.699 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.698..79.513 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.512..39.512 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.825..29.158 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.433..7.733 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.237..4.238 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.426..2.299 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:10:41.616 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,312,"",2021-03-21 14:47:00 CET,4/320,0,LOG,00000,"duration: 104198.524 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14384665.34..14384665.35 rows=1 width=8) (actual time=99879.768..99879.768 rows=1 loops=1)
  ->  Gather  (cost=14384665.12..14384665.33 rows=2 width=8) (actual time=99874.693..104198.421 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14383665.12..14383665.13 rows=1 width=8) (actual time=99820.241..99820.242 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..14022497.83 rows=144466918 width=0) (actual time=91048.321..98585.806 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11464749.37 rows=144466918 width=8) (actual time=45264.317..82656.416 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=45260.051..75408.546 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45237.982..64961.159 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45236.898..59425.442 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24548.111..38395.298 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.368..7019.805 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7257.694..7257.694 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.487..2558.805 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.412..236.413 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.866..101.773 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.051..1.051 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.035..1.037 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.741..21.742 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.529..10.973 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.174..4.174 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.716..2.385 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.224..1268.224 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.967..512.849 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 23:12:29.272 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,313,"",2021-03-21 14:47:00 CET,4/321,0,LOG,00000,"duration: 107633.525 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99186.845..99186.846 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99181.486..107633.279 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99131.498..99131.498 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86389.681..97808.473 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7061.852..14176.417 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7059.722..12256.336 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.331..2612.731 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1272.440..1272.441 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.595..518.959 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.061..2.061 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.036..2.039 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62882.760..62882.760 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12887.527..27523.739 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.901..6105.373 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=431.800..431.800 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.383..307.029 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.843..95.139 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.195..45.195 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.441..33.570 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.548..9.058 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.777..4.777 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.547 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:14:15.914 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,314,"",2021-03-21 14:47:00 CET,4/322,0,LOG,00000,"duration: 106600.885 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=102931.772..102931.772 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=102928.492..106600.578 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=102874.958..102874.959 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=81746.319..101611.835 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=81745.491..96801.350 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=81741.016..91224.831 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=41930.824..71335.028 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=41896.583..58896.155 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11573.632..25475.394 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.819..5716.374 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.867..227.868 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.747..97.506 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6531.947..6531.947 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.039..2425.784 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.758..33.758 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.716..15.914 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.915..1297.915 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.928..522.910 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.388..4.389 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.628..2.532 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.608..0.608 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.586..0.588 rows=4 loops=3)",,,,,,,,,""
2021-03-21 23:15:58.446 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,315,"",2021-03-21 14:47:00 CET,4/323,0,LOG,00000,"duration: 102510.305 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97733.102..97733.102 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97725.774..102510.163 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97668.906..97668.906 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84978.545..96364.183 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6830.287..13532.596 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6828.811..11725.006 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.556..2512.851 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1499.188..1499.189 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.527..498.344 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.416..1.417 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.397..1.399 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61933.939..61933.939 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12556.366..26457.419 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.741..5635.239 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=395.576..395.577 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.806..283.487 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.820..84.863 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.655..42.656 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.193..31.799 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.568..8.524 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.527..4.528 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.512..2.459 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:17:47.268 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,316,"",2021-03-21 14:47:00 CET,4/324,0,LOG,00000,"duration: 108783.878 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14593623.67..14593623.68 rows=1 width=8) (actual time=105899.532..105899.532 rows=1 loops=1)
  ->  Gather  (cost=14593623.45..14593623.66 rows=2 width=8) (actual time=105895.453..108783.771 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14592623.45..14592623.46 rows=1 width=8) (actual time=105844.155..105844.156 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14231456.16 rows=144466918 width=0) (actual time=90880.249..104656.970 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..12244727.04 rows=144466918 width=8) (actual time=90874.849..99246.861 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=43513.751..77852.600 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=43489.140..65680.668 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43488.460..60226.072 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11601.776..25301.806 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.967..5673.018 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.150..226.151 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.911..95.786 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7137.095..7137.095 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.165..2537.681 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.643..0.643 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.634..0.635 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.230..24.231 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.938..12.735 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4964.617..4964.617 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.012..480.215 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.120..5.120 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.651..2.796 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:19:29.757 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,317,"",2021-03-21 14:47:00 CET,4/325,0,LOG,00000,"duration: 102470.297 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=93977.094..93977.094 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=93969.516..102470.137 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=93919.494..93919.494 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=80941.739..92587.540 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6560.132..13272.231 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6558.649..11450.354 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.106..2465.724 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1330.132..1330.133 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.290..507.859 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.420..1.420 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.403..1.405 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59287.792..59287.792 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12237.267..26650.113 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.724..5535.548 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=367.267..367.267 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.583..261.427 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.765..77.981 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.501..43.501 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.438..32.089 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.457..8.558 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.889..4.890 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.609 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:20:59.803 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,318,"",2021-03-21 14:47:00 CET,4/326,0,LOG,00000,"duration: 90003.354 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8729980.10..8729980.11 rows=1 width=8) (actual time=87368.810..87368.810 rows=1 loops=1)
  ->  Gather  (cost=8729979.89..8729980.10 rows=2 width=8) (actual time=87361.681..90002.935 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8728979.89..8728979.90 rows=1 width=8) (actual time=87309.449..87309.449 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..8367812.59 rows=144466918 width=0) (actual time=53068.615..85835.666 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=697347.79..3251238.84 rows=24077820 width=8) (actual time=53067.746..80803.618 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=53062.884..74647.842 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=53037.851..65251.908 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33124.869..46913.142 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.456..7071.455 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15779.827..15779.827 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6727.689..11334.393 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.726..2473.600 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1342.199..1342.200 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.835..498.619 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=220.430..220.430 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.905..97.367 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.737..24.737 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.634..12.580 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.767..4.767 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.668..2.734 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.661..0.661 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.632 rows=4 loops=3)",,,,,,,,,""
2021-03-21 23:22:44.697 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,319,"",2021-03-21 14:47:00 CET,4/327,0,LOG,00000,"duration: 104870.379 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96001.453..96001.453 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95995.606..104868.570 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95946.302..95946.302 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83273.584..94627.110 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7123.074..13966.602 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7121.442..12119.495 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.485..2523.924 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1808.025..1808.026 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.564..505.714 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.562..1.562 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.545..1.548 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60759.269..60759.269 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12678.220..27180.278 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.797..5847.425 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=390.261..390.261 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.120..276.329 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.829..84.927 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=38.998..38.998 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.688..29.376 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.493..7.833 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.105..4.106 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.343 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:24:27.556 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,320,"",2021-03-21 14:47:00 CET,4/328,0,LOG,00000,"duration: 102807.453 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14384665.34..14384665.35 rows=1 width=8) (actual time=99153.532..99153.532 rows=1 loops=1)
  ->  Gather  (cost=14384665.12..14384665.33 rows=2 width=8) (actual time=99150.150..102807.351 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14383665.12..14383665.13 rows=1 width=8) (actual time=99097.653..99097.653 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..14022497.83 rows=144466918 width=0) (actual time=90574.819..97905.490 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11464749.37 rows=144466918 width=8) (actual time=45453.800..82370.501 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=45448.111..75261.759 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45414.728..64889.805 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45414.068..59425.148 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23900.998..37898.623 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.559..7102.298 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6753.952..6753.952 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.367..2407.895 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=387.357..387.357 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.504..119.729 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.628..0.628 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.612..0.613 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.064..33.064 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.494..15.516 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.584..5.584 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.654..2.891 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1204.280..1204.281 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.960..489.001 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 23:26:11.564 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,321,"",2021-03-21 14:47:00 CET,4/329,0,LOG,00000,"duration: 103984.513 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98401.083..98401.083 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98393.213..103981.573 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98340.602..98340.602 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85442.520..96998.364 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6959.614..13693.184 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6957.690..11876.745 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.710..2475.858 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1291.541..1291.542 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.532..515.510 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.844..1.845 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.824..1.827 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62124.734..62124.734 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12598.842..26639.891 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.880..5742.959 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=470.125..470.125 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.897..336.670 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..104.432 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.705..51.705 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.710..37.755 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.523..10.644 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.077..5.077 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.512..2.659 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:27:59.684 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,322,"",2021-03-21 14:47:00 CET,4/330,0,LOG,00000,"duration: 108079.984 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12361408.94..12361408.95 rows=1 width=8) (actual time=104735.067..104735.067 rows=1 loops=1)
  ->  Gather  (cost=12361408.72..12361408.93 rows=2 width=8) (actual time=104730.568..108079.418 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12360408.72..12360408.73 rows=1 width=8) (actual time=104679.336..104679.336 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..11999241.43 rows=144466918 width=0) (actual time=72781.853..103163.733 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10012512.31 rows=144466918 width=8) (actual time=72776.561..96823.140 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8024499.18 rows=144466918 width=8) (actual time=72746.478..88206.008 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=72745.827..83690.274 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43793.638..59250.957 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12119.895..25970.228 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.960..5970.957 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.623..247.624 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.006..106.104 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7136.947..7136.947 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.059..2542.711 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5081.013..5081.013 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..476.848 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.604..0.605 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.586..0.588 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.793..29.793 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.604..14.726 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.013..5.013 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.551..2.740 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:29:43.221 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,323,"",2021-03-21 14:47:00 CET,4/331,0,LOG,00000,"duration: 103510.967 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94908.808..94908.808 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94899.273..103508.991 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94847.187..94847.187 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81805.498..93496.249 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6829.122..13645.774 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6827.530..11797.286 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.478..2466.915 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1212.297..1212.298 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.408..488.355 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.540..1.540 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.521..1.523 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59054.986..59054.986 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12251.912..26394.978 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.974..5449.075 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1253.491..1253.491 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.187..351.151 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.718..107.667 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.170..41.170 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.716..30.547 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.483..8.141 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.144..4.145 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.522..2.328 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:31:04.451 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,324,"",2021-03-21 14:47:00 CET,4/332,0,LOG,00000,"duration: 81188.090 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8305159.04..8305159.05 rows=1 width=8) (actual time=77355.878..77355.878 rows=1 loops=1)
  ->  Gather  (cost=8305158.82..8305159.03 rows=2 width=8) (actual time=77351.234..81187.924 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8304158.82..8304158.83 rows=1 width=8) (actual time=77294.114..77294.115 rows=1 loops=3)
              ->  Hash Join  (cost=534388.10..7942991.53 rows=144466918 width=0) (actual time=62867.793..76028.499 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=534351.10..2826417.78 rows=24077820 width=8) (actual time=62866.892..71289.925 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=39889.032..54230.810 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=11632.990..23559.427 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.916..5588.883 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=642.496..642.496 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=26.845..506.988 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.620..361.262 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.525..100.451 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.806..21.806 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.519..11.167 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.121..4.122 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.763..2.365 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7233.048..7233.048 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.408..2572.764 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1344.027..1344.027 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.074..498.757 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.689..0.690 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.662..0.664 rows=4 loops=3)",,,,,,,,,""
2021-03-21 23:32:50.742 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,325,"",2021-03-21 14:47:00 CET,4/333,0,LOG,00000,"duration: 106258.456 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97787.932..97787.932 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97783.237..106258.307 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97733.400..97733.400 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84962.444..96453.664 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6942.245..13596.630 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6940.786..11793.744 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.558..2515.043 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1271.383..1271.383 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.276..492.635 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.323..1.323 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.294..1.296 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62106.544..62106.544 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13922.859..27996.267 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.798..6713.013 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=440.707..440.707 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.271..313.404 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.888..100.223 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.050..42.050 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.457..31.509 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.488..8.369 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.866..4.869 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.476..2.593 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:34:22.221 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,326,"",2021-03-21 14:47:00 CET,4/334,0,LOG,00000,"duration: 91420.467 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8631313.89..8631313.90 rows=1 width=8) (actual time=88410.677..88410.677 rows=1 loops=1)
  ->  Gather  (cost=8631313.68..8631313.89 rows=2 width=8) (actual time=88405.958..91418.984 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8630313.68..8630313.69 rows=1 width=8) (actual time=88349.178..88349.178 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8269146.38 rows=144466918 width=0) (actual time=73952.177..87075.091 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3152572.63 rows=24077820 width=8) (actual time=73951.258..82309.658 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=51105.090..65355.192 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12842.372..33487.792 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12836.418..26279.531 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.694..6164.409 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=467.911..467.912 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=27.457..331.311 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.597..98.867 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.457..26.457 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.600..13.263 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.806..5.806 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.825..3.107 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7280.544..7280.544 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.170..2569.459 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.637..1248.637 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.959..477.193 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.654..0.654 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.614..0.616 rows=4 loops=3)",,,,,,,,,""
2021-03-21 23:36:06.192 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,327,"",2021-03-21 14:47:00 CET,4/335,0,LOG,00000,"duration: 103952.540 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95359.565..95359.565 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95353.022..103950.464 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95305.886..95305.887 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82720.804..94005.537 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7301.686..13968.227 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7299.811..12156.167 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.385..2498.950 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1265.886..1265.886 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.157..505.502 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.774..1.780 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.752..1.755 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59426.275..59426.275 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12660.077..26595.878 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.881..5984.091 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=438.295..438.295 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=37.719..312.963 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.891..91.602 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=36.512..36.512 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.859..27.369 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.496..7.024 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.280..4.281 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.486..2.279 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:37:50.614 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,328,"",2021-03-21 14:47:00 CET,4/336,0,LOG,00000,"duration: 104374.884 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10749695.83..10749695.84 rows=1 width=8) (actual time=100619.118..100619.119 rows=1 loops=1)
  ->  Gather  (cost=10749695.62..10749695.83 rows=2 width=8) (actual time=100614.110..104374.325 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10748695.62..10748695.63 rows=1 width=8) (actual time=100560.180..100560.181 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10387528.32 rows=144466918 width=0) (actual time=66776.939..99065.673 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=8) (actual time=66772.199..92585.501 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=66771.517..87882.395 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=66745.438..78532.623 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50267.603..60373.857 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25069.825..40515.772 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.418..7477.296 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7260.079..7260.079 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.204..2592.392 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1383.464..1383.464 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.797..501.729 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=216.060..216.060 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.105..94.461 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.797..25.797 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.605..12.708 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.661..0.661 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.639..0.640 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.453..4.453 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.524 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:39:33.072 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,329,"",2021-03-21 14:47:00 CET,4/337,0,LOG,00000,"duration: 102432.028 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97275.129..97275.129 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97268.864..102429.896 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97220.573..97220.573 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85077.819..95999.060 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6835.740..13495.140 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6833.450..11693.840 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.809..2501.296 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1471.183..1471.183 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.094..506.446 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.217..2.217 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.199..2.202 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62048.770..62048.770 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14733.863..28923.023 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.957..6833.199 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=427.799..427.799 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.276..300.898 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.771..85.328 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.189..41.189 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.433..30.699 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.492..7.954 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.833..4.833 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.524 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:41:27.952 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,330,"",2021-03-21 14:47:00 CET,4/338,0,LOG,00000,"duration: 114821.948 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=111259.005..111259.005 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=111252.600..114821.526 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=111197.984..111197.985 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=95231.603..109938.639 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=95226.564..104170.696 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=46322.589..82265.037 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=46321.804..75680.870 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=46298.339..63548.199 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=13432.298..28297.843 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.854..6558.003 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=600.905..600.906 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.775..122.264 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6955.362..6955.362 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.850..2533.155 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.124..23.124 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.469..11.923 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.741..0.742 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.729..0.731 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4727.668..4727.668 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.924..541.178 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.717..4.717 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.585..2.697 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:43:08.369 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,331,"",2021-03-21 14:47:00 CET,4/339,0,LOG,00000,"duration: 100390.722 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95428.084..95428.085 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95422.259..100390.611 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95369.014..95369.014 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82940.164..94059.466 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6832.991..13275.013 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6830.922..11526.388 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.047..2521.249 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.372..1283.372 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.846..486.379 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.009..2.010 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.989..1.991 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60488.503..60488.503 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13063.471..27435.245 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.950..5911.593 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=432.923..432.923 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.366..310.220 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.864..87.887 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=53.203..53.203 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.875..38.953 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.571..10.464 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.210..6.211 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.565..3.174 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:44:42.267 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,332,"",2021-03-21 14:47:00 CET,4/340,0,LOG,00000,"duration: 93856.199 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14134749.16..14134749.17 rows=1 width=8) (actual time=91014.655..91014.655 rows=1 loops=1)
  ->  Gather  (cost=14134748.94..14134749.15 rows=2 width=8) (actual time=91006.739..93855.625 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14133748.94..14133748.95 rows=1 width=8) (actual time=90916.882..90916.882 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..13772581.65 rows=144466917 width=0) (actual time=62986.049..89637.437 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..11785852.54 rows=144466917 width=8) (actual time=62979.310..83220.030 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=695482.79..9797839.43 rows=144466917 width=8) (actual time=62947.099..74468.779 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=673762.79..7437762.46 rows=150000000 width=8) (actual time=34169.979..53752.228 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=34169.226..48280.555 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.216..7507.756 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15915.638..15915.638 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6601.219..11607.671 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.337..2452.798 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1211.081..1211.082 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.774..460.826 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.712..0.712 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.702..0.704 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3820.586..3820.586 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.038..113.901 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.852..31.852 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.631..15.683 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.289..6.289 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.612..3.404 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:46:30.404 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,333,"",2021-03-21 14:47:00 CET,4/341,0,LOG,00000,"duration: 108098.682 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=98952.402..98952.402 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98944.772..108096.077 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98893.237..98893.237 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=86130.889..97583.403 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6822.121..13516.794 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6820.256..11707.159 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.420..2526.020 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1443.150..1443.151 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.706..506.851 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.783..1.784 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.758..1.760 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62270.846..62270.846 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12747.110..26864.705 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.820..5846.530 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=439.835..439.835 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.928..313.085 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.999..93.244 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.431..45.431 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.791..33.495 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.556..9.229 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.105..5.106 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.577..2.731 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:48:14.813 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,334,"",2021-03-21 14:47:00 CET,4/342,0,LOG,00000,"duration: 104353.183 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=100334.421..100334.421 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=100330.826..104352.626 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=100277.359..100277.359 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=84930.368..99049.089 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=84924.880..93463.049 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=42422.994..75788.521 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42422.153..69655.601 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42391.294..58353.588 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11908.271..25857.192 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.802..5869.683 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.455..244.459 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.728..110.374 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6477.044..6477.044 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.279..2377.617 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=30.556..30.556 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.594..14.115 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.801..0.801 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.790..0.792 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1262.916..1262.916 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.893..497.060 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.184..5.185 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.524..2.787 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:49:55.407 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,335,"",2021-03-21 14:47:00 CET,4/343,0,LOG,00000,"duration: 100568.958 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95178.057..95178.057 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95168.711..100568.755 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95116.301..95116.301 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82575.726..93815.929 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6765.873..13404.572 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6764.055..11619.921 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.857..2517.933 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1317.308..1317.309 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.891..513.532 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.705..1.706 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.679..1.682 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60315.371..60315.372 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12691.925..26680.445 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..5681.245 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=427.127..427.128 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.654..304.125 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.076..84.084 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.255..43.255 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.382..32.047 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.723..8.526 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.568..4.568 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.773..2.625 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:51:32.216 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,336,"",2021-03-21 14:47:00 CET,4/344,0,LOG,00000,"duration: 96755.515 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=93325.784..93325.784 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=93321.952..96755.356 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=93266.000..93266.000 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=84304.010..92035.645 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=43257.038..71473.958 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=43256.162..65836.702 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=43250.728..58679.487 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12451.158..25875.483 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.962..5928.235 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=722.879..722.879 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=29.919..328.511 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.086..89.724 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.430..28.431 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.529..13.174 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6812.258..6812.259 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.152..2455.774 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.316..5.316 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.623..2.837 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.822..0.822 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.807..0.809 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5649.826..5649.826 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.074..477.815 rows=1666667 loops=3)",,,,,,,,,""
2021-03-21 23:53:12.639 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,337,"",2021-03-21 14:47:00 CET,4/345,0,LOG,00000,"duration: 100398.107 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95396.446..95396.447 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95389.410..100397.987 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95335.680..95335.680 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82768.896..94037.692 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6614.266..13280.774 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6612.617..11489.429 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=4.581..2493.208 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1362.534..1362.534 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.897..524.990 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.530..1.530 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.510..1.512 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60096.053..60096.054 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12803.874..26901.312 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.801..5824.379 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=417.653..417.653 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.060..301.983 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.850..84.776 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.788..46.788 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.184..34.197 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.589..9.542 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.470..4.471 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.562..2.505 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:54:52.911 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,338,"",2021-03-21 14:47:00 CET,4/346,0,LOG,00000,"duration: 100229.179 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10380717.99..10380718.00 rows=1 width=8) (actual time=96561.851..96561.851 rows=1 loops=1)
  ->  Gather  (cost=10380717.77..10380717.98 rows=2 width=8) (actual time=96557.547..100229.003 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10379717.77..10379717.78 rows=1 width=8) (actual time=96506.622..96506.622 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..10018550.48 rows=144466918 width=0) (actual time=74866.248..95248.648 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=528756.93..8031821.36 rows=144466918 width=8) (actual time=74861.032..89235.814 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=74860.454..84659.351 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=45379.376..61065.440 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11968.114..26896.097 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.038..5799.611 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=424.883..424.883 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.458..296.832 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.749..86.156 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.407..22.408 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.485..11.413 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6806.744..6806.744 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.169..2415.462 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4847.403..4847.404 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.776..491.872 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.545..0.545 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.531..0.532 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.821..4.821 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.614..2.716 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:56:38.262 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,339,"",2021-03-21 14:47:00 CET,4/347,0,LOG,00000,"duration: 105324.812 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97377.371..97377.371 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97368.236..105324.647 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97315.135..97315.136 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84561.975..96015.979 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6674.733..13329.115 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6673.266..11527.213 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.624..2512.942 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1264.659..1264.660 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.136..508.347 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.414..1.414 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.396..1.399 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60907.149..60907.149 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12886.520..26999.048 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.907..5733.935 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=434.776..434.777 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.936..312.211 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.880..92.213 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.686..52.686 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.328..38.730 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.644..10.922 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.579..5.579 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.627..2.956 rows=10000 loops=3)",,,,,,,,,""
2021-03-21 23:59:06.576 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,340,"",2021-03-21 14:47:00 CET,4/348,0,LOG,00000,"duration: 148260.731 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15958168.90..15958168.91 rows=1 width=8) (actual time=138811.858..138811.858 rows=1 loops=1)
  ->  Gather  (cost=15958168.68..15958168.89 rows=2 width=8) (actual time=138808.097..148260.559 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15957168.68..15957168.69 rows=1 width=8) (actual time=138752.317..138752.317 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15596001.39 rows=144466917 width=0) (actual time=112180.469..137485.062 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13609272.28 rows=144466917 width=8) (actual time=112175.551..131251.475 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11621259.17 rows=144466917 width=8) (actual time=112151.292..122710.524 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=90141.564..103088.340 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69089.343..83868.686 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.870..4280.730 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.649..2012.274 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.154..1.155 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.138..1.140 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52512.974..52512.974 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.438..8007.120 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=251.832..251.832 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.914..110.949 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1938.222..1938.222 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.965..510.530 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.952..23.952 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.515..12.407 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.587..4.587 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.554..2.553 rows=10000 loops=3)",,,,,,,,,""
