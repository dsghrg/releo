2021-03-20 00:00:06.173 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,13,"",2021-03-19 23:47:13 CET,6/84,0,LOG,00000,"duration: 64107.612 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2680797.37..2680797.38 rows=1 width=8) (actual time=60708.803..60708.804 rows=1 loops=1)
  ->  Gather  (cost=2680797.16..2680797.37 rows=2 width=8) (actual time=60704.395..64107.443 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2679797.16..2679797.17 rows=1 width=8) (actual time=60650.104..60650.104 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=785224.61..2619602.61 rows=24077820 width=0) (actual time=50898.118..59436.743 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=763911.60..2207273.27 rows=25000000 width=8) (actual time=33448.850..45531.506 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.799..7000.693 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=627191.73..627191.73 rows=8333350 width=8) (actual time=16515.863..16515.863 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                ->  Parallel Hash Join  (cost=96697.63..627191.73 rows=8333350 width=8) (actual time=8506.216..12709.325 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.908..3974.480 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.066..1704.935 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.777..0.777 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.481..0.631 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2027.110..2027.110 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..518.123 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=226.046..226.046 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.824..107.240 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:01:25.515 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,14,"",2021-03-19 23:47:13 CET,6/85,0,LOG,00000,"duration: 79283.638 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3012611.00..3012611.01 rows=1 width=8) (actual time=75694.777..75694.777 rows=1 loops=1)
  ->  Gather  (cost=3012610.79..3012611.00 rows=2 width=8) (actual time=75690.709..79283.507 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3011610.79..3011610.80 rows=1 width=8) (actual time=75638.883..75638.884 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=627452.57..2951416.24 rows=24077820 width=0) (actual time=65615.584..74363.071 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=606139.56..2539086.90 rows=25000000 width=8) (actual time=50290.921..59716.445 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=509458.19..1960957.86 rows=25000000 width=16) (actual time=25599.775..40550.100 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.777..6876.399 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=16) (actual time=8164.862..8164.867 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.697..4172.702 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.747..1863.195 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.885..0.885 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.593..0.736 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1968.628..1968.629 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.742..522.682 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.012..217.012 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.592..100.823 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:02:45.492 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,15,"",2021-03-19 23:47:13 CET,6/86,0,LOG,00000,"duration: 79921.608 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=2996951.68..2996951.69 rows=1 width=8) (actual time=76277.352..76277.352 rows=1 loops=1)
  ->  Gather  (cost=2996951.47..2996951.68 rows=2 width=8) (actual time=76274.335..79921.471 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2995951.47..2995951.48 rows=1 width=8) (actual time=76219.683..76219.683 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=627452.57..2935756.92 rows=24077820 width=0) (actual time=66572.226..74930.410 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=530771.19..2422115.19 rows=24077820 width=8) (actual time=47171.908..58111.882 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=509458.19..1960957.86 rows=25000000 width=16) (actual time=27301.529..41026.741 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.783..6975.298 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=16) (actual time=8440.073..8440.073 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.935..4255.501 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.966..1895.267 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.925..0.925 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.670..0.780 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=230.372..230.372 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.833..100.238 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2220.692..2220.692 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.678..517.429 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:03:51.769 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,16,"",2021-03-19 23:47:13 CET,6/87,0,LOG,00000,"duration: 66211.101 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2697073.37..2697073.38 rows=1 width=8) (actual time=62467.935..62467.935 rows=1 loops=1)
  ->  Gather  (cost=2697073.16..2697073.37 rows=2 width=8) (actual time=62463.948..66210.467 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2696073.16..2696073.17 rows=1 width=8) (actual time=62412.062..62412.063 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=801500.61..2635878.61 rows=24077820 width=0) (actual time=52176.816..61108.037 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=780187.60..2223549.27 rows=25000000 width=8) (actual time=34906.141..46822.195 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.736..6999.324 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=8) (actual time=18000.961..18000.961 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                ->  Hash Join  (cost=96697.63..643467.73 rows=8333350 width=8) (actual time=7415.696..14136.167 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7414.794..12197.400 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.800..2525.348 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2067.343..2067.343 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.838..513.189 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.876..0.876 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.711..0.786 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=239.161..239.161 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.819..104.990 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:05:00.796 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,17,"",2021-03-19 23:47:13 CET,6/88,0,LOG,00000,"duration: 68975.380 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2942515.81..2942515.82 rows=1 width=8) (actual time=65949.673..65949.673 rows=1 loops=1)
  ->  Gather  (cost=2942515.59..2942515.80 rows=2 width=8) (actual time=65944.689..68974.734 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2941515.59..2941515.60 rows=1 width=8) (actual time=65893.988..65893.991 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=695055.04..2881321.04 rows=24077820 width=0) (actual time=56198.573..64649.734 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=673742.04..2468991.71 rows=25000000 width=8) (actual time=32112.576..50861.827 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32111.581..45345.711 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.952..7021.075 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15143.857..15143.858 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6423.382..11080.666 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.669..2296.292 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1229.047..1229.048 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.741..474.883 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.953..0.953 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.708..0.821 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.387..217.387 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.585..101.636 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:06:16.067 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,18,"",2021-03-19 23:47:13 CET,6/89,0,LOG,00000,"duration: 75215.503 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=2978663.83..2978663.84 rows=1 width=8) (actual time=72112.695..72112.695 rows=1 loops=1)
  ->  Gather  (cost=2978663.62..2978663.83 rows=2 width=8) (actual time=72108.216..75214.958 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2977663.62..2977663.63 rows=1 width=8) (actual time=72053.455..72053.456 rows=1 loops=3)
              ->  Hash Join  (cost=695055.04..2917469.07 rows=24077820 width=0) (actual time=56463.898..70832.400 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=695038.79..2586382.79 rows=24077820 width=8) (actual time=56462.929..65899.323 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=35193.268..49918.470 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.855..7543.536 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=17104.418..17104.418 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7937.617..12921.043 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.115..2610.056 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1602.201..1602.201 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.880..602.541 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=243.148..243.149 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.563..114.085 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.742..0.743 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.546..0.628 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:07:21.528 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,19,"",2021-03-19 23:47:13 CET,6/90,0,LOG,00000,"duration: 65408.389 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=2680797.37..2680797.38 rows=1 width=8) (actual time=61787.377..61787.377 rows=1 loops=1)
  ->  Gather  (cost=2680797.16..2680797.37 rows=2 width=8) (actual time=61783.215..65407.767 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2679797.16..2679797.17 rows=1 width=8) (actual time=61728.399..61728.399 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=785224.61..2619602.61 rows=24077820 width=0) (actual time=52153.209..60516.693 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=763911.60..2207273.27 rows=25000000 width=8) (actual time=34471.823..46626.931 rows=20000000 loops=3)
                          Hash Cond: (ord_det.order_id = ord.id)
                          ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.742..6816.024 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=627191.73..627191.73 rows=8333350 width=8) (actual time=17358.605..17358.606 rows=6666667 loops=3)
                                Buckets: 131072  Batches: 512  Memory Usage: 2592kB
                                ->  Parallel Hash Join  (cost=96697.63..627191.73 rows=8333350 width=8) (actual time=8848.629..13027.311 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.659..4135.028 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.870..1775.264 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.742..0.743 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.511..0.617 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2118.164..2118.164 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.778..528.696 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=251.344..251.344 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.653..121.285 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:08:39.425 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,20,"",2021-03-19 23:47:13 CET,6/91,0,LOG,00000,"duration: 77848.783 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3012611.00..3012611.01 rows=1 width=8) (actual time=74349.853..74349.854 rows=1 loops=1)
  ->  Gather  (cost=3012610.79..3012611.00 rows=2 width=8) (actual time=74346.487..77847.967 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3011610.79..3011610.80 rows=1 width=8) (actual time=74289.335..74289.335 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=627452.57..2951416.24 rows=24077820 width=0) (actual time=64194.500..73038.204 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=606139.56..2539086.90 rows=25000000 width=8) (actual time=49829.732..58911.826 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=509458.19..1960957.86 rows=25000000 width=16) (actual time=25308.529..40586.213 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.820..6930.412 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=16) (actual time=8571.112..8571.113 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.910..4293.469 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.992..1915.388 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.879..0.879 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.592..0.710 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1369.280..1369.280 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.792..516.897 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=256.571..256.571 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.631..124.477 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:09:58.356 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,21,"",2021-03-19 23:47:13 CET,6/92,0,LOG,00000,"duration: 78877.927 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=2996951.68..2996951.69 rows=1 width=8) (actual time=75359.576..75359.576 rows=1 loops=1)
  ->  Gather  (cost=2996951.47..2996951.68 rows=2 width=8) (actual time=75356.302..78877.780 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=2995951.47..2995951.48 rows=1 width=8) (actual time=75306.082..75306.082 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=627452.57..2935756.92 rows=24077820 width=0) (actual time=65561.405..74021.628 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=530771.19..2422115.19 rows=24077820 width=8) (actual time=45209.640..56692.627 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=509458.19..1960957.86 rows=25000000 width=16) (actual time=25310.298..39183.567 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.846..6994.747 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=16) (actual time=8318.429..8318.432 rows=6666667 loops=3)
                                      Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                      ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=16) (actual time=1.798..4317.127 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.890..1916.369 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.860..0.861 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.645..0.740 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=236.282..236.282 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=4.919..111.593 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2468.195..2468.195 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.651..682.967 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:11:22.465 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,22,"",2021-03-19 23:47:13 CET,6/93,0,LOG,00000,"duration: 84064.091 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3306881.44..3306881.45 rows=1 width=8) (actual time=80459.523..80459.524 rows=1 loops=1)
  ->  Gather  (cost=3306881.22..3306881.43 rows=2 width=8) (actual time=80455.488..84063.344 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3305881.22..3305881.23 rows=1 width=8) (actual time=80369.455..80369.456 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3245686.67 rows=24077820 width=0) (actual time=71080.072..79157.357 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=499694.00..2833357.34 rows=25000000 width=8) (actual time=49488.150..65422.993 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=49487.079..60029.917 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23585.969..39001.921 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.844..7081.920 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6290.678..6290.678 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.771..2372.406 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2091.571..2091.571 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.816..557.381 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.034..1.035 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.853..0.943 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=220.446..220.446 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.704..98.372 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:12:51.888 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,23,"",2021-03-19 23:47:13 CET,6/94,0,LOG,00000,"duration: 89379.857 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3343029.46..3343029.47 rows=1 width=8) (actual time=85742.532..85742.532 rows=1 loops=1)
  ->  Gather  (cost=3343029.25..3343029.46 rows=2 width=8) (actual time=85738.278..89378.609 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3342029.25..3342029.26 rows=1 width=8) (actual time=85680.295..85680.295 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3281834.70 rows=24077820 width=0) (actual time=70698.534..84488.816 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2950748.42 rows=24077820 width=8) (actual time=70697.182..79674.942 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=53556.906..64257.124 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25983.191..42735.897 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.878..7088.845 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8175.078..8175.079 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.555..2795.014 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1569.788..1569.788 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.970..541.997 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.835..218.835 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.898..95.578 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.017..1.017 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.746..0.866 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:14:12.503 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,24,"",2021-03-19 23:47:13 CET,6/95,0,LOG,00000,"duration: 80565.202 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3258053.44..3258053.45 rows=1 width=8) (actual time=77064.356..77064.357 rows=1 loops=1)
  ->  Gather  (cost=3258053.22..3258053.43 rows=2 width=8) (actual time=77061.197..80565.080 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3257053.22..3257053.23 rows=1 width=8) (actual time=77007.170..77007.170 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3196858.67 rows=24077820 width=0) (actual time=66780.795..75688.340 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=499694.00..2784529.34 rows=25000000 width=8) (actual time=53186.610..61950.842 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=403012.63..2206400.29 rows=25000000 width=16) (actual time=23813.832..44465.415 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23812.939..38217.554 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.885..6846.072 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6692.403..6692.404 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.674..2397.143 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.852..0.852 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.638..0.733 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1344.482..1344.482 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.952..510.414 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=212.156..212.156 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.554..93.758 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:15:34.699 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,25,"",2021-03-19 23:47:13 CET,6/96,0,LOG,00000,"duration: 82130.719 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3242394.12..3242394.13 rows=1 width=8) (actual time=78315.159..78315.159 rows=1 loops=1)
  ->  Gather  (cost=3242393.90..3242394.11 rows=2 width=8) (actual time=78312.476..82130.559 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3241393.90..3241393.91 rows=1 width=8) (actual time=78258.309..78258.309 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3181199.35 rows=24077820 width=0) (actual time=68818.320..76993.180 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=424325.63..2667557.63 rows=24077820 width=8) (actual time=50593.918..61618.954 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=403012.63..2206400.29 rows=25000000 width=16) (actual time=23669.283..44526.792 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23668.288..38308.602 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.731..6750.473 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7471.693..7471.694 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.813..2452.555 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.951..0.951 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.774..0.852 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=200.094..200.095 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.853..84.589 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1217.543..1217.543 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.632..467.319 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:17:01.689 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,26,"",2021-03-19 23:47:13 CET,6/97,0,LOG,00000,"duration: 86932.633 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3325570.14..3325570.15 rows=1 width=8) (actual time=83212.529..83212.530 rows=1 loops=1)
  ->  Gather  (cost=3325569.93..3325570.14 rows=2 width=8) (actual time=83209.225..86932.440 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3324569.93..3324569.94 rows=1 width=8) (actual time=83151.020..83151.020 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3264375.38 rows=24077820 width=0) (actual time=67021.759..81867.228 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2933289.10 rows=24077820 width=8) (actual time=67020.647..76744.977 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424309.38..2372619.38 rows=24077820 width=16) (actual time=46228.257..58757.319 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24306.503..38087.178 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.902..7146.166 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6581.806..6581.807 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.892..2429.168 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=217.174..217.175 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.024..91.187 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1213.337..1213.338 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.705..493.806 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.901..0.901 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.700..0.788 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:18:26.609 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,27,"",2021-03-19 23:47:13 CET,6/98,0,LOG,00000,"duration: 84868.128 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3278542.14..3278542.15 rows=1 width=8) (actual time=81258.175..81258.176 rows=1 loops=1)
  ->  Gather  (cost=3278541.93..3278542.14 rows=2 width=8) (actual time=81254.825..84868.020 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3277541.93..3277541.94 rows=1 width=8) (actual time=81200.411..81200.412 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3217347.38 rows=24077820 width=0) (actual time=72064.527..79961.507 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=424325.63..2703705.65 rows=24077820 width=8) (actual time=46383.013..64296.146 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=424309.38..2372619.38 rows=24077820 width=16) (actual time=46381.486..58614.738 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25413.531..39566.377 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.865..7045.353 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8096.140..8096.141 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.736..2629.597 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=232.507..232.507 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.059..97.134 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.451..1.451 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.221..1.328 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1340.776..1340.777 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.541..518.512 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:19:55.083 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,28,"",2021-03-19 23:47:13 CET,6/99,0,LOG,00000,"duration: 88429.330 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3306881.44..3306881.45 rows=1 width=8) (actual time=84297.046..84297.046 rows=1 loops=1)
  ->  Gather  (cost=3306881.22..3306881.43 rows=2 width=8) (actual time=84293.298..88428.804 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3305881.22..3305881.23 rows=1 width=8) (actual time=84240.958..84240.959 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3245686.67 rows=24077820 width=0) (actual time=74357.927..82967.902 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Hash Join  (cost=499694.00..2833357.34 rows=25000000 width=8) (actual time=53440.001..69078.953 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=53438.876..63745.894 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25739.622..41268.024 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.776..7105.370 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7872.143..7872.144 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.894..3480.528 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2207.647..2207.647 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.860..494.276 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.089..1.089 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.921..0.998 rows=500 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=225.468..225.468 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.743..99.425 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:21:20.214 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,29,"",2021-03-19 23:47:13 CET,6/100,0,LOG,00000,"duration: 85089.458 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3343029.46..3343029.47 rows=1 width=8) (actual time=80700.180..80700.180 rows=1 loops=1)
  ->  Gather  (cost=3343029.25..3343029.46 rows=2 width=8) (actual time=80696.626..85088.935 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3342029.25..3342029.26 rows=1 width=8) (actual time=80640.210..80640.210 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3281834.70 rows=24077820 width=0) (actual time=64644.157..79378.214 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2950748.42 rows=24077820 width=8) (actual time=64642.884..74270.949 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=48913.577..58919.495 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24076.690..39256.205 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.885..6963.836 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6927.629..6927.630 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.808..2642.099 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1350.289..1350.289 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.784..505.136 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=223.349..223.350 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.640..101.861 rows=333333 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.069..1.070 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.872..0.961 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:22:44.243 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,30,"",2021-03-19 23:47:13 CET,6/101,0,LOG,00000,"duration: 83985.663 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id;
COMMIT;
Finalize Aggregate  (cost=3258053.44..3258053.45 rows=1 width=8) (actual time=80481.041..80481.041 rows=1 loops=1)
  ->  Gather  (cost=3258053.22..3258053.43 rows=2 width=8) (actual time=80477.883..83985.209 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3257053.22..3257053.23 rows=1 width=8) (actual time=80423.168..80423.169 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3196858.67 rows=24077820 width=0) (actual time=70591.530..79132.791 rows=20000000 loops=3)
                    Hash Cond: (ord_det.product_id = prod.id)
                    ->  Parallel Hash Join  (cost=499694.00..2784529.34 rows=25000000 width=8) (actual time=56983.896..65723.130 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=403012.63..2206400.29 rows=25000000 width=16) (actual time=24998.405..46908.272 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24997.457..40348.600 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.805..7113.350 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7726.733..7726.734 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.745..2641.851 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.893..0.893 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.677..0.772 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1355.944..1355.945 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.985..521.255 rows=1666667 loops=3)
                    ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=221.872..221.872 rows=333333 loops=3)
                          Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                          ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.611..96.945 rows=333333 loops=3)",,,,,,,,,""
2021-03-20 00:24:06.849 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,31,"",2021-03-19 23:47:13 CET,6/102,0,LOG,00000,"duration: 82570.811 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3242394.12..3242394.13 rows=1 width=8) (actual time=78992.828..78992.828 rows=1 loops=1)
  ->  Gather  (cost=3242393.90..3242394.11 rows=2 width=8) (actual time=78989.545..82570.664 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3241393.90..3241393.91 rows=1 width=8) (actual time=78942.899..78942.899 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3181199.35 rows=24077820 width=0) (actual time=69266.637..77648.783 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Parallel Hash Join  (cost=424325.63..2667557.63 rows=24077820 width=8) (actual time=50595.776..61839.281 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=403012.63..2206400.29 rows=25000000 width=16) (actual time=23686.298..44516.299 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23685.298..38328.379 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.957..7205.427 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6609.923..6609.924 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.892..2405.037 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.936..0.936 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.827 rows=500 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=222.017..222.017 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.956..92.046 rows=333333 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1228.169..1228.169 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.696..495.181 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:25:36.875 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,32,"",2021-03-19 23:47:13 CET,6/103,0,LOG,00000,"duration: 89985.308 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3325570.14..3325570.15 rows=1 width=8) (actual time=86391.907..86391.907 rows=1 loops=1)
  ->  Gather  (cost=3325569.93..3325570.14 rows=2 width=8) (actual time=86388.451..89985.226 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3324569.93..3324569.94 rows=1 width=8) (actual time=86332.457..86332.457 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3264375.38 rows=24077820 width=0) (actual time=70103.280..85005.390 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2933289.10 rows=24077820 width=8) (actual time=70102.326..79649.391 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424309.38..2372619.38 rows=24077820 width=16) (actual time=47825.080..61229.955 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25410.370..40200.845 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.775..7318.081 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7568.819..7568.819 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.803..2524.387 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=218.291..218.291 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=1.117..88.876 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1305.842..1305.842 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.580..499.754 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.725..0.725 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.522..0.623 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:27:00.662 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,33,"",2021-03-19 23:47:13 CET,6/104,0,LOG,00000,"duration: 83737.821 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3278542.14..3278542.15 rows=1 width=8) (actual time=79400.283..79400.283 rows=1 loops=1)
  ->  Gather  (cost=3278541.93..3278542.14 rows=2 width=8) (actual time=79397.261..83737.674 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3277541.93..3277541.94 rows=1 width=8) (actual time=79341.359..79341.359 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3217347.38 rows=24077820 width=0) (actual time=69794.792..78055.450 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=424325.63..2703705.65 rows=24077820 width=8) (actual time=44429.635..62107.080 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=424309.38..2372619.38 rows=24077820 width=16) (actual time=44428.718..56450.092 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23607.325..37585.097 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.811..6858.180 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7091.551..7091.551 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.918..2434.387 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=215.785..215.785 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.686..88.291 rows=333333 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.871..0.872 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.697..0.776 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1272.333..1272.333 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.636..510.863 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:28:22.263 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,34,"",2021-03-19 23:47:13 CET,6/105,0,LOG,00000,"duration: 81450.598 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3205338.47..3205338.48 rows=1 width=8) (actual time=77860.906..77860.907 rows=1 loops=1)
  ->  Gather  (cost=3205338.26..3205338.47 rows=2 width=8) (actual time=77857.981..81450.105 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3204338.26..3204338.27 rows=1 width=8) (actual time=77805.527..77805.528 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3144143.71 rows=24077820 width=0) (actual time=63263.188..76568.822 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2813057.43 rows=24077820 width=8) (actual time=63262.131..71568.959 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424309.38..2252387.71 rows=24077820 width=16) (actual time=40847.321..54884.667 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11892.730..23799.030 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.792..5727.628 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=704.597..704.598 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.789..105.354 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7258.047..7258.048 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.895..2681.956 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1277.969..1277.969 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.709..511.259 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.832..0.832 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.616..0.715 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:29:44.265 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,35,"",2021-03-19 23:47:13 CET,6/106,0,LOG,00000,"duration: 81936.677 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3158310.47..3158310.48 rows=1 width=8) (actual time=78480.449..78480.449 rows=1 loops=1)
  ->  Gather  (cost=3158310.26..3158310.47 rows=2 width=8) (actual time=78477.423..81936.180 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3157310.26..3157310.27 rows=1 width=8) (actual time=78415.688..78415.688 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3097115.71 rows=24077820 width=0) (actual time=69054.605..77087.484 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=424325.63..2583473.98 rows=24077820 width=8) (actual time=40485.045..60851.250 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=424309.38..2252387.71 rows=24077820 width=16) (actual time=40483.996..54743.894 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11833.394..24001.790 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.921..5845.138 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=204.993..204.993 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.884..86.961 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7122.223..7122.224 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.832..2623.864 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.994..0.994 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.779..0.874 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1216.490..1216.490 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.704..497.457 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:31:06.429 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,36,"",2021-03-19 23:47:13 CET,6/107,0,LOG,00000,"duration: 82120.267 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=3205338.47..3205338.48 rows=1 width=8) (actual time=78407.020..78407.020 rows=1 loops=1)
  ->  Gather  (cost=3205338.26..3205338.47 rows=2 width=8) (actual time=78404.042..82119.833 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3204338.26..3204338.27 rows=1 width=8) (actual time=78352.666..78352.667 rows=1 loops=3)
              ->  Hash Join  (cost=521007.00..3144143.71 rows=24077820 width=0) (actual time=63827.268..77115.435 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=520990.75..2813057.43 rows=24077820 width=8) (actual time=63826.338..72181.397 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424309.38..2252387.71 rows=24077820 width=16) (actual time=39779.962..54155.137 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11481.707..23196.273 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.140..5733.067 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=202.716..202.717 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.897..86.621 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6456.517..6456.517 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.089..2411.490 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1951.935..1951.935 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.576..499.524 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.723..0.723 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.510..0.603 rows=500 loops=3)",,,,,,,,,""
2021-03-20 00:32:27.571 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,37,"",2021-03-19 23:47:13 CET,6/108,0,LOG,00000,"duration: 81104.268 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=3158310.47..3158310.48 rows=1 width=8) (actual time=77548.991..77548.991 rows=1 loops=1)
  ->  Gather  (cost=3158310.26..3158310.47 rows=2 width=8) (actual time=77546.116..81104.111 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=3157310.26..3157310.27 rows=1 width=8) (actual time=77491.577..77491.577 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=521007.00..3097115.71 rows=24077820 width=0) (actual time=68492.723..76214.089 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=424325.63..2583473.98 rows=24077820 width=8) (actual time=40662.279..60694.746 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=424309.38..2252387.71 rows=24077820 width=16) (actual time=40661.317..54694.910 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=21313.00..1211157.33 rows=24077820 width=8) (actual time=11957.994..23784.591 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.795..5837.606 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=8) (actual time=213.526..213.527 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=8) (actual time=0.724..89.801 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6719.268..6719.268 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.701..2483.545 rows=6666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.872..0.872 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.672..0.759 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1244.506..1244.506 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.633..512.998 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:34:26.360 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,38,"",2021-03-19 23:47:13 CET,6/109,0,LOG,00000,"duration: 118716.481 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=11019770.76..11019770.77 rows=1 width=8) (actual time=112489.659..112489.659 rows=1 loops=1)
  ->  Gather  (cost=11019770.54..11019770.75 rows=2 width=8) (actual time=112485.143..118715.836 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11018770.54..11018770.55 rows=1 width=8) (actual time=112433.674..112433.674 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=0) (actual time=93034.416..111214.871 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=93010.115..103521.217 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=75036.498..87866.335 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6475.415..13052.684 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6473.882..11254.909 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.370..2479.770 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1230.764..1230.765 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.389..488.135 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.471..1.471 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.453..1.455 rows=4 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52984.494..52984.494 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.887..8076.538 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.686..239.686 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.841..101.749 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.808..23.808 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.524..13.374 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:35:46.360 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,39,"",2021-03-19 23:47:13 CET,6/110,0,LOG,00000,"duration: 79935.165 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12148020.05..12148020.06 rows=1 width=8) (actual time=76561.295..76561.296 rows=1 loops=1)
  ->  Gather  (cost=12148019.84..12148020.05 rows=2 width=8) (actual time=76551.235..79934.720 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12147019.84..12147019.85 rows=1 width=8) (actual time=76494.444..76494.445 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..11785852.54 rows=144466917 width=0) (actual time=57943.815..75293.415 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=695482.79..9797839.43 rows=144466917 width=8) (actual time=57915.580..67809.390 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=673762.79..7437762.46 rows=150000000 width=8) (actual time=33802.916..52645.802 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33802.100..47443.068 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.640..7206.098 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16677.776..16677.776 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7061.415..11771.973 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.534..2504.534 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1332.252..1332.253 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.961..506.083 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.776..0.776 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.767..0.769 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.018..242.018 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.785..108.498 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=27.620..27.620 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.660..13.050 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:37:09.075 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,40,"",2021-03-19 23:47:13 CET,6/111,0,LOG,00000,"duration: 82657.239 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10053951.18..10053951.19 rows=1 width=8) (actual time=79329.024..79329.024 rows=1 loops=1)
  ->  Gather  (cost=10053950.96..10053951.17 rows=2 width=8) (actual time=79323.549..82656.641 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10052950.96..10052950.97 rows=1 width=8) (actual time=79272.110..79272.110 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=0) (actual time=53456.766..78017.310 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=53435.274..69800.341 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=53434.505..65104.046 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33254.752..47077.693 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.809..7031.029 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15672.165..15672.166 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6558.736..11322.340 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.116..2335.008 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1617.646..1617.646 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..511.023 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.324..236.324 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.684..105.325 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.721..0.721 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.703..0.705 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.972..20.972 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.611..10.269 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:38:24.562 CET,,,5184,,6055275a.1440,1,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 00:38:32.521 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,41,"",2021-03-19 23:47:13 CET,6/112,0,LOG,00000,"duration: 83395.421 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8398601.08..8398601.09 rows=1 width=8) (actual time=80107.088..80107.088 rows=1 loops=1)
  ->  Gather  (cost=8398600.86..8398601.07 rows=2 width=8) (actual time=80100.939..83394.029 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8397600.86..8397600.87 rows=1 width=8) (actual time=80044.214..80044.214 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=0) (actual time=54933.045..78827.460 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=8) (actual time=54932.106..73976.409 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=54908.055..66208.898 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33904.387..48176.011 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.851..7415.866 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16167.531..16167.531 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7270.251..11993.424 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.294..2512.071 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1536.883..1536.887 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.887..530.510 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.321..243.321 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.738..107.501 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.359..23.360 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.632..11.116 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.629..0.629 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.590..0.592 rows=4 loops=3)",,,,,,,,,""
2021-03-20 00:40:30.382 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,42,"",2021-03-19 23:47:13 CET,6/113,0,LOG,00000,"duration: 117799.514 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=11792341.97..11792341.98 rows=1 width=8) (actual time=111560.063..111560.064 rows=1 loops=1)
  ->  Gather  (cost=11792341.75..11792341.96 rows=2 width=8) (actual time=111555.009..117798.010 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11791341.75..11791341.76 rows=1 width=8) (actual time=111505.617..111505.617 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=0) (actual time=92597.478..110305.409 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=92575.359..102880.708 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=74043.685..87141.364 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=7750.445..12326.458 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.804..3987.872 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.965..1762.504 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.754..0.755 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.738..0.740 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1203.886..1203.887 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.444..481.767 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52408.563..52408.563 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.776..9134.808 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.609..245.610 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.765..110.597 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.624..21.628 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.512..10.345 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:42:49.499 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,43,"",2021-03-19 23:47:13 CET,6/114,0,LOG,00000,"duration: 139043.712 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=13783225.72..13783225.73 rows=1 width=8) (actual time=130934.344..130934.344 rows=1 loops=1)
  ->  Gather  (cost=13783225.50..13783225.71 rows=2 width=8) (actual time=130929.601..139043.079 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13782225.50..13782225.51 rows=1 width=8) (actual time=130879.127..130879.127 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=0) (actual time=111518.807..129650.737 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=111495.432..122011.511 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=97248.749..106291.953 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=72271.380..88481.837 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.832..4568.452 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.812..2144.828 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.966..1.967 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.951..1.953 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=56133.021..56133.022 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.066..11397.442 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1750.673..1750.673 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..534.659 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=279.089..279.089 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.831..109.619 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.858..22.858 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.536..10.656 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:45:08.555 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,44,"",2021-03-19 23:47:13 CET,6/115,0,LOG,00000,"duration: 138992.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=13971439.79..13971439.80 rows=1 width=8) (actual time=131692.810..131692.810 rows=1 loops=1)
  ->  Gather  (cost=13971439.58..13971439.79 rows=2 width=8) (actual time=131687.070..138991.314 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13970439.58..13970439.59 rows=1 width=8) (actual time=131633.060..131633.060 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..13609272.28 rows=144466917 width=0) (actual time=111383.120..130298.963 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..11621259.17 rows=144466917 width=8) (actual time=111360.843..122078.173 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=88941.949..102418.712 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68551.693..82923.221 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.879..4407.176 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.663..2061.263 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.134..1.135 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.119..1.121 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51613.124..51613.125 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.996..8115.715 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.544..245.544 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.782..101.068 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1230.361..1230.361 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.030..498.833 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.571..21.571 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.698..10.319 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:47:26.712 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,45,"",2021-03-19 23:47:13 CET,6/116,0,LOG,00000,"duration: 138117.707 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13689277.79..13689277.80 rows=1 width=8) (actual time=131270.311..131270.311 rows=1 loops=1)
  ->  Gather  (cost=13689277.58..13689277.79 rows=2 width=8) (actual time=131265.906..138117.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13688277.58..13688277.59 rows=1 width=8) (actual time=131219.124..131219.124 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304602.38..13327110.28 rows=144466917 width=0) (actual time=122201.623..130016.494 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=8) (actual time=89932.217..114049.376 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89912.678..103969.352 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69449.842..83812.147 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.071..4378.597 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.823..2075.968 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.185..1.186 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.164..1.166 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52291.814..52291.815 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.368..8125.242 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=208.322..208.322 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.756..90.533 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.165..19.165 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.712..9.591 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1215.057..1215.057 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.619..467.828 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 00:49:23.690 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,46,"",2021-03-19 23:47:13 CET,6/117,0,LOG,00000,"duration: 116918.396 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=11019770.76..11019770.77 rows=1 width=8) (actual time=110262.959..110262.959 rows=1 loops=1)
  ->  Gather  (cost=11019770.54..11019770.75 rows=2 width=8) (actual time=110256.804..116917.876 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11018770.54..11018770.55 rows=1 width=8) (actual time=110207.087..110207.087 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=0) (actual time=90663.353..108999.124 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=90642.472..101276.493 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=72046.332..85329.587 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6464.503..13274.798 rows=6666667 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6462.741..11431.230 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.637..2411.193 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.163..1335.164 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.772..504.792 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.705..1.705 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.688..1.691 rows=4 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49424.581..49424.581 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.339..8096.415 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.848..244.848 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.858..107.644 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.367..20.367 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.551..9.948 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:50:41.528 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,47,"",2021-03-19 23:47:13 CET,6/118,0,LOG,00000,"duration: 77769.633 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12148020.05..12148020.06 rows=1 width=8) (actual time=74702.588..74702.588 rows=1 loops=1)
  ->  Gather  (cost=12148019.84..12148020.05 rows=2 width=8) (actual time=74694.737..77769.095 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12147019.84..12147019.85 rows=1 width=8) (actual time=74638.934..74638.935 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..11785852.54 rows=144466917 width=0) (actual time=55927.350..73443.862 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=695482.79..9797839.43 rows=144466917 width=8) (actual time=55905.033..65904.600 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=673762.79..7437762.46 rows=150000000 width=8) (actual time=32366.498..50733.836 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32365.494..45553.496 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.570..6793.114 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16080.542..16080.542 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6930.127..11560.412 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.823..2483.742 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1358.196..1358.197 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.078..517.058 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.949..0.949 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.941..0.942 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.233..225.233 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.769..98.710 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.749..21.749 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.541..10.581 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:52:03.024 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,48,"",2021-03-19 23:47:13 CET,6/119,0,LOG,00000,"duration: 81443.702 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10053951.18..10053951.19 rows=1 width=8) (actual time=78274.758..78274.759 rows=1 loops=1)
  ->  Gather  (cost=10053950.96..10053951.17 rows=2 width=8) (actual time=78268.525..81442.405 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10052950.96..10052950.97 rows=1 width=8) (actual time=78213.035..78213.036 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=0) (actual time=52821.925..76958.162 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=52799.451..68886.863 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52798.150..64231.034 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33122.407..46740.561 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.853..7220.743 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15976.847..15976.848 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6827.353..11446.997 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.761..2458.415 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1327.437..1327.438 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.903..506.458 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.204..245.204 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.926..104.671 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.263..1.263 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.242..1.243 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.939..21.939 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.565..10.710 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:53:24.752 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,49,"",2021-03-19 23:47:13 CET,6/120,0,LOG,00000,"duration: 81667.345 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8398601.08..8398601.09 rows=1 width=8) (actual time=78377.790..78377.790 rows=1 loops=1)
  ->  Gather  (cost=8398600.86..8398601.07 rows=2 width=8) (actual time=78371.619..81666.954 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8397600.86..8397600.87 rows=1 width=8) (actual time=78318.052..78318.053 rows=1 loops=3)
              ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=0) (actual time=52377.470..77044.547 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=8) (actual time=52376.678..72050.475 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52352.498..64031.465 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32745.938..46410.344 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.071..7059.827 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16005.647..16005.648 rows=6666667 loops=3)
                                            Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6811.423..11556.531 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.115..2400.332 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1728.039..1728.040 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.910..537.911 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.479..234.479 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.856..101.906 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.748..23.748 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.518..10.742 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.583..0.583 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.554..0.556 rows=4 loops=3)",,,,,,,,,""
2021-03-20 00:55:24.230 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,50,"",2021-03-19 23:47:13 CET,6/121,0,LOG,00000,"duration: 119420.895 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=11792341.97..11792341.98 rows=1 width=8) (actual time=112909.091..112909.091 rows=1 loops=1)
  ->  Gather  (cost=11792341.75..11792341.96 rows=2 width=8) (actual time=112904.144..119420.270 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11791341.75..11791341.76 rows=1 width=8) (actual time=112845.748..112845.749 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=0) (actual time=93663.196..111618.741 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=93638.592..104089.412 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=75131.275..88369.235 rows=20000000 loops=3)
                                Hash Cond: (ord.id = ord_det.order_id)
                                ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=7618.581..12221.323 rows=6666667 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.559..3741.370 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.452..1667.158 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.059..1.060 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.021..1.023 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1314.654..1314.654 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.992..510.728 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53326.720..53326.720 rows=20000000 loops=3)
                                      Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.876..8032.438 rows=20000000 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.455..238.455 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.897..105.776 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.959..23.959 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.563..11.360 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:57:36.821 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,51,"",2021-03-19 23:47:13 CET,6/122,0,LOG,00000,"duration: 132531.822 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=13783225.72..13783225.73 rows=1 width=8) (actual time=125738.214..125738.214 rows=1 loops=1)
  ->  Gather  (cost=13783225.50..13783225.71 rows=2 width=8) (actual time=125734.280..132531.677 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13782225.50..13782225.51 rows=1 width=8) (actual time=125676.695..125676.695 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=0) (actual time=106466.694..124446.605 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=106441.421..116890.518 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=92658.461..101227.122 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69313.424..84796.349 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.326..4334.253 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.239..2056.175 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.016..1.017 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.989..0.991 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52115.791..52115.791 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.661..8059.072 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1347.089..1347.089 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.079..511.142 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=258.778..258.778 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.166..116.243 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=24.615..24.615 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.611..11.489 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 00:59:55.684 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,52,"",2021-03-19 23:47:13 CET,6/123,0,LOG,00000,"duration: 138796.889 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=13971439.79..13971439.80 rows=1 width=8) (actual time=131656.552..131656.552 rows=1 loops=1)
  ->  Gather  (cost=13971439.58..13971439.79 rows=2 width=8) (actual time=131652.318..138796.746 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13970439.58..13970439.59 rows=1 width=8) (actual time=131599.493..131599.493 rows=1 loops=3)
              ->  Hash Join  (cost=1304602.38..13609272.28 rows=144466917 width=0) (actual time=112427.821..130346.336 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=1303009.38..11621259.17 rows=144466917 width=8) (actual time=112402.535..122591.042 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89289.051..102531.801 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68409.944..83134.188 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.560..4451.884 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.415..2095.785 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.080..1.080 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.059..1.061 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51688.403..51688.403 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.817..8186.859 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.678..243.679 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.730..107.575 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1588.911..1588.911 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.847..505.574 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=24.653..24.653 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.538..11.656 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:02:15.150 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,53,"",2021-03-19 23:47:13 CET,6/124,0,LOG,00000,"duration: 139396.704 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13689277.79..13689277.80 rows=1 width=8) (actual time=132260.002..132260.002 rows=1 loops=1)
  ->  Gather  (cost=13689277.58..13689277.79 rows=2 width=8) (actual time=132254.213..139396.507 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13688277.58..13688277.59 rows=1 width=8) (actual time=132199.495..132199.495 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304602.38..13327110.28 rows=144466917 width=0) (actual time=122730.759..130953.896 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=8) (actual time=89830.974..113781.858 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89798.139..103752.824 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68969.755..83465.304 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=4.078..4379.458 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.491..2061.634 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.455..1.455 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.427..1.430 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52663.667..52663.668 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.747..8154.010 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=450.951..450.951 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.058..105.697 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=32.373..32.373 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.716..14.585 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1308.122..1308.122 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.837..506.426 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:03:49.532 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,54,"",2021-03-19 23:47:13 CET,6/125,0,LOG,00000,"duration: 94323.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12512385.68..12512385.69 rows=1 width=8) (actual time=90777.216..90777.216 rows=1 loops=1)
  ->  Gather  (cost=12512385.47..12512385.68 rows=2 width=8) (actual time=90770.993..94322.851 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12511385.47..12511385.48 rows=1 width=8) (actual time=90717.612..90717.612 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=0) (actual time=71580.749..89492.636 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=71557.640..81964.431 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=50529.413..66106.109 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50528.441..61081.358 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23873.748..40312.017 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.411..7108.256 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7003.441..7003.441 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.551..2591.272 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1351.441..1351.441 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.875..513.349 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.939..0.939 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.931..0.933 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.562..241.562 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.007..113.301 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.621..22.621 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.548..10.704 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:05:23.858 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,55,"",2021-03-19 23:47:13 CET,6/126,0,LOG,00000,"duration: 94252.376 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10418316.81..10418316.82 rows=1 width=8) (actual time=90811.064..90811.064 rows=1 loops=1)
  ->  Gather  (cost=10418316.59..10418316.80 rows=2 width=8) (actual time=90806.045..94252.222 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10417316.59..10417316.60 rows=1 width=8) (actual time=90753.917..90753.917 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10056149.30 rows=144466918 width=0) (actual time=65952.070..89550.102 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8068136.17 rows=144466918 width=8) (actual time=65930.847..81712.531 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=65930.010..77113.455 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=49744.376..59843.577 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24680.365..39964.151 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.915..7177.440 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7029.907..7029.908 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.869..2600.320 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1388.608..1388.609 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.856..506.191 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.068..243.068 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.983..104.687 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.808..0.808 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.789..0.791 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.672..20.673 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.525..10.302 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:06:58.895 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,56,"",2021-03-19 23:47:13 CET,6/127,0,LOG,00000,"duration: 94988.895 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8762966.71..8762966.72 rows=1 width=8) (actual time=91458.333..91458.333 rows=1 loops=1)
  ->  Gather  (cost=8762966.49..8762966.70 rows=2 width=8) (actual time=91454.079..94988.787 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8761966.49..8761966.50 rows=1 width=8) (actual time=91363.159..91363.159 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=0) (actual time=66303.916..90161.743 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=8) (actual time=66302.971..85425.839 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=66272.863..77559.202 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50625.761..60540.551 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24316.073..39504.880 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.900..6972.076 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7005.908..7005.909 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.697..2660.645 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2066.817..2066.817 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.012..500.204 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=256.447..256.447 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.107..114.305 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=29.718..29.719 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.651..14.093 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.599..0.599 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.576..0.577 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:08:30.494 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,57,"",2021-03-19 23:47:13 CET,6/128,0,LOG,00000,"duration: 91553.726 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=14830093.01..14830093.02 rows=1 width=8) (actual time=87419.260..87419.261 rows=1 loops=1)
  ->  Gather  (cost=14830092.80..14830093.01 rows=2 width=8) (actual time=87414.185..91553.443 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14829092.80..14829092.81 rows=1 width=8) (actual time=87364.063..87364.063 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..14467925.50 rows=144466917 width=0) (actual time=68460.398..86140.054 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..12479912.39 rows=144466917 width=8) (actual time=68438.646..78562.289 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=499714.75..10119835.42 rows=150000000 width=8) (actual time=54368.459..63294.852 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=24739.431..45321.245 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24738.427..39429.955 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.836..7048.587 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7194.811..7194.815 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.844..2722.062 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.936..0.936 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.917..0.918 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1808.752..1808.753 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.756..512.298 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=291.050..291.050 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.569..130.913 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.258..21.258 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.765..10.232 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:10:03.451 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,58,"",2021-03-19 23:47:13 CET,6/129,0,LOG,00000,"duration: 92902.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=15018307.09..15018307.10 rows=1 width=8) (actual time=89398.407..89398.407 rows=1 loops=1)
  ->  Gather  (cost=15018306.87..15018307.08 rows=2 width=8) (actual time=89394.927..92900.925 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15017306.87..15017306.88 rows=1 width=8) (actual time=89299.498..89299.498 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..14656139.58 rows=144466917 width=0) (actual time=71042.477..88082.743 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..12668126.47 rows=144466917 width=8) (actual time=71019.161..80524.541 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=50216.172..62822.895 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=23912.607..44156.318 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23911.768..38424.184 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.039..7009.253 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6719.949..6719.950 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.032..2538.096 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.794..0.794 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.780..0.782 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=252.415..252.415 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.723..109.763 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1212.859..1212.859 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.917..491.891 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.784..22.784 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.707..10.984 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:11:34.790 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,59,"",2021-03-19 23:47:13 CET,6/130,0,LOG,00000,"duration: 91284.979 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14736145.09..14736145.10 rows=1 width=8) (actual time=87815.300..87815.301 rows=1 loops=1)
  ->  Gather  (cost=14736144.87..14736145.08 rows=2 width=8) (actual time=87811.644..91284.769 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14735144.87..14735144.88 rows=1 width=8) (actual time=87757.357..87757.357 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..14373977.58 rows=144466917 width=0) (actual time=79276.076..86586.822 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..11816229.13 rows=144466917 width=8) (actual time=49200.915..70886.137 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=49179.619..61658.674 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=23465.902..42896.516 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23465.112..37328.772 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.805..6844.000 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6492.110..6492.111 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.873..2415.594 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.738..0.738 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.722..0.723 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.027..243.027 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.012..107.181 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.958..20.958 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.810..10.309 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1928.523..1928.523 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.998..509.643 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:13:15.325 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,60,"",2021-03-19 23:47:13 CET,6/131,0,LOG,00000,"duration: 100473.956 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10447883.49..10447883.50 rows=1 width=8) (actual time=97151.919..97151.919 rows=1 loops=1)
  ->  Gather  (cost=10447883.27..10447883.48 rows=2 width=8) (actual time=97145.710..100473.224 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10446883.27..10446883.28 rows=1 width=8) (actual time=97084.623..97084.624 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=0) (actual time=71819.763..95774.961 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=71797.845..87457.655 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=71797.074..82803.900 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=47068.499..61122.777 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24818.301..39567.002 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.965..7319.110 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6717.471..6717.471 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.952..2577.337 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.348..236.349 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.118..103.868 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2086.637..2086.637 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.899..611.068 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.730..0.730 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.711..0.712 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.375..21.375 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.615..10.348 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:14:51.907 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,61,"",2021-03-19 23:47:13 CET,6/132,0,LOG,00000,"duration: 96517.285 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8792533.39..8792533.40 rows=1 width=8) (actual time=92950.226..92950.226 rows=1 loops=1)
  ->  Gather  (cost=8792533.17..8792533.38 rows=2 width=8) (actual time=92946.026..96515.829 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8791533.17..8791533.18 rows=1 width=8) (actual time=92897.464..92897.464 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=0) (actual time=68358.395..91608.795 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=8) (actual time=68357.618..86612.434 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68332.794..78890.725 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45715.716..59120.612 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24788.811..38805.552 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.944..7048.120 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7668.136..7668.137 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.054..2581.362 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.072..242.073 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.885..99.868 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.909..1304.909 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.870..514.850 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=24.456..24.457 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.465..11.239 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.539..0.539 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.505..0.507 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:16:28.068 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,62,"",2021-03-19 23:47:13 CET,6/133,0,LOG,00000,"duration: 96101.747 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12680098.22..12680098.23 rows=1 width=8) (actual time=92219.329..92219.329 rows=1 loops=1)
  ->  Gather  (cost=12680098.00..12680098.21 rows=2 width=8) (actual time=92215.907..96100.779 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12679098.00..12679098.01 rows=1 width=8) (actual time=92162.305..92162.306 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=0) (actual time=74438.077..90944.272 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10329917.58 rows=144466918 width=8) (actual time=74416.274..83681.544 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=46456.408..65429.580 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46455.660..59479.326 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24719.101..38999.059 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.980..7165.264 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7321.092..7321.092 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.987..2479.069 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.284..235.284 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.758..100.050 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.700..0.701 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.683 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1359.007..1359.025 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.437..524.553 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.218..21.219 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.769..10.305 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:18:03.687 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,63,"",2021-03-19 23:47:13 CET,6/134,0,LOG,00000,"duration: 95577.226 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12397936.22..12397936.23 rows=1 width=8) (actual time=91854.107..91854.108 rows=1 loops=1)
  ->  Gather  (cost=12397936.00..12397936.21 rows=2 width=8) (actual time=91850.193..95577.130 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12396936.00..12396936.01 rows=1 width=8) (actual time=91799.574..91799.575 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..12035768.71 rows=144466918 width=0) (actual time=83135.163..90606.004 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=8) (actual time=45225.054..74009.806 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45203.588..64399.854 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45202.538..58992.440 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24141.711..38315.066 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.958..7104.214 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6486.006..6486.007 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.924..2463.002 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=212.489..212.490 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..88.209 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.024..1.024 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.011..1.012 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.079..21.079 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=1.141..10.850 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1952.603..1952.603 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.951..481.813 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:19:39.315 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,64,"",2021-03-19 23:47:13 CET,6/135,0,LOG,00000,"duration: 95570.742 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8745507.39..8745507.40 rows=1 width=8) (actual time=91742.339..91742.339 rows=1 loops=1)
  ->  Gather  (cost=8745507.17..8745507.38 rows=2 width=8) (actual time=91739.471..95570.614 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8744507.17..8744507.18 rows=1 width=8) (actual time=91688.877..91688.877 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8383339.88 rows=144466918 width=0) (actual time=77348.318..90439.684 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3266766.13 rows=24077820 width=8) (actual time=77347.573..85771.168 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=16) (actual time=44280.629..68551.792 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44262.170..58223.826 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23707.091..37576.066 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.862..6988.746 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6270.043..6270.043 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.854..2321.863 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=210.927..210.927 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.649..89.679 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.159..18.160 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.681..8.874 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1173.722..1173.722 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.789..449.156 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.530..0.530 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.505..0.507 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:21:14.590 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,65,"",2021-03-19 23:47:13 CET,6/136,0,LOG,00000,"duration: 95220.743 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10742586.12..10742586.13 rows=1 width=8) (actual time=91169.059..91169.059 rows=1 loops=1)
  ->  Gather  (cost=10742585.90..10742586.11 rows=2 width=8) (actual time=91165.799..95220.529 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10741585.90..10741585.91 rows=1 width=8) (actual time=91113.545..91113.545 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10380418.61 rows=144466918 width=0) (actual time=81486.555..89790.012 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=8) (actual time=45306.446..73634.928 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=16) (actual time=45305.766..68409.028 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45288.607..58888.712 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24361.776..38481.218 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.889..6966.004 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6710.163..6710.164 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.725..2355.336 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.575..222.576 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.002..95.908 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=16.915..16.915 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.405..8.565 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.639..0.639 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.627..0.629 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1187.128..1187.128 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.870..476.477 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:22:48.135 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,66,"",2021-03-19 23:47:13 CET,6/137,0,LOG,00000,"duration: 93490.535 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12512385.68..12512385.69 rows=1 width=8) (actual time=90105.961..90105.962 rows=1 loops=1)
  ->  Gather  (cost=12512385.47..12512385.68 rows=2 width=8) (actual time=90100.518..93490.336 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12511385.47..12511385.48 rows=1 width=8) (actual time=90052.108..90052.108 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=0) (actual time=71444.891..88833.793 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=71424.113..81349.713 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=50316.176..65716.549 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50315.159..60675.256 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23523.269..38645.324 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.857..6908.501 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6176.628..6176.629 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.679..2330.295 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1223.145..1223.145 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.851..467.900 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.979..0.982 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.965..0.967 rows=4 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.791..233.791 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.147..103.263 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.283..20.283 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.690..9.716 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:24:23.580 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,67,"",2021-03-19 23:47:13 CET,6/138,0,LOG,00000,"duration: 95390.106 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10418316.81..10418316.82 rows=1 width=8) (actual time=91354.079..91354.079 rows=1 loops=1)
  ->  Gather  (cost=10418316.59..10418316.80 rows=2 width=8) (actual time=91348.061..95389.902 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10417316.59..10417316.60 rows=1 width=8) (actual time=91291.825..91291.825 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10056149.30 rows=144466918 width=0) (actual time=66448.003..90075.541 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8068136.17 rows=144466918 width=8) (actual time=66418.612..82223.751 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=66417.897..77578.747 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50399.090..60623.623 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24623.762..39951.685 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.893..7240.226 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6779.712..6779.712 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.771..2531.357 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2214.480..2214.480 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.116..514.719 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.586..236.586 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.746..103.502 rows=333333 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.681..0.681 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.646..0.648 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=28.672..28.672 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.525..13.227 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:25:57.652 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,68,"",2021-03-19 23:47:13 CET,6/139,0,LOG,00000,"duration: 94029.303 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8762966.71..8762966.72 rows=1 width=8) (actual time=90630.998..90630.998 rows=1 loops=1)
  ->  Gather  (cost=8762966.49..8762966.70 rows=2 width=8) (actual time=90625.695..94029.181 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8761966.49..8761966.50 rows=1 width=8) (actual time=90577.450..90577.451 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=0) (actual time=65052.899..89339.631 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=8) (actual time=65052.035..84485.016 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=65031.613..76488.384 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=49506.996..59373.257 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24639.420..39903.322 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.871..6814.685 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7699.257..7699.257 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.723..3252.784 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.141..1248.141 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.996..458.899 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.591..232.591 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.187..101.373 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.086..20.086 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.551..9.582 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.652..0.652 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.624..0.626 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:27:32.165 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,69,"",2021-03-19 23:47:13 CET,6/140,0,LOG,00000,"duration: 94455.413 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=14830093.01..14830093.02 rows=1 width=8) (actual time=90712.265..90712.265 rows=1 loops=1)
  ->  Gather  (cost=14830092.80..14830093.01 rows=2 width=8) (actual time=90703.877..94455.274 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14829092.80..14829092.81 rows=1 width=8) (actual time=90651.514..90651.515 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..14467925.50 rows=144466917 width=0) (actual time=72017.370..89444.668 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..12479912.39 rows=144466917 width=8) (actual time=71996.229..81971.966 rows=20000000 loops=3)
                          Hash Cond: (ord_det.product_id = prod.id)
                          ->  Parallel Hash Join  (cost=499714.75..10119835.42 rows=150000000 width=8) (actual time=56604.455..66467.348 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=24366.182..46366.050 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24365.332..40077.508 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.098..7049.714 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6939.419..6939.420 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.630..2561.416 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.802..0.803 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.787..0.789 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2462.227..2462.228 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.784..531.202 rows=1666667 loops=3)
                          ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.520..227.520 rows=333333 loops=3)
                                Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.922..100.270 rows=333333 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.518..20.518 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.604..9.957 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:29:06.313 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,70,"",2021-03-19 23:47:13 CET,6/141,0,LOG,00000,"duration: 94082.210 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=15018307.09..15018307.10 rows=1 width=8) (actual time=90493.499..90493.499 rows=1 loops=1)
  ->  Gather  (cost=15018306.87..15018307.08 rows=2 width=8) (actual time=90490.461..94081.132 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15017306.87..15017306.88 rows=1 width=8) (actual time=90438.075..90438.075 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..14656139.58 rows=144466917 width=0) (actual time=72317.730..89218.135 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..12668126.47 rows=144466917 width=8) (actual time=72295.076..81741.468 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=51343.012..64072.941 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=24668.175..44207.514 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24667.215..38608.577 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.972..6962.403 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7722.793..7722.794 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.121..2570.178 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.905..0.905 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.891..0.893 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.933..237.933 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.844..99.859 rows=333333 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1270.381..1270.381 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.987..495.006 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.129..22.129 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.544..10.435 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:30:40.048 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,71,"",2021-03-19 23:47:13 CET,6/142,0,LOG,00000,"duration: 93683.317 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14736145.09..14736145.10 rows=1 width=8) (actual time=90029.454..90029.454 rows=1 loops=1)
  ->  Gather  (cost=14736144.87..14736145.08 rows=2 width=8) (actual time=90025.245..93683.211 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14735144.87..14735144.88 rows=1 width=8) (actual time=89971.255..89971.255 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..14373977.58 rows=144466917 width=0) (actual time=80941.632..88712.223 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..11816229.13 rows=144466917 width=8) (actual time=50162.761..72028.328 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=50143.815..62691.541 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=23898.492..43774.661 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23897.569..38060.868 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.004..6903.246 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6464.620..6464.621 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.965..2370.350 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.864..0.865 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.851..0.852 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.052..239.052 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.091..98.478 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.640..18.640 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.813..9.351 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2407.685..2407.685 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.819..514.124 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:32:16.179 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,72,"",2021-03-19 23:47:13 CET,6/143,0,LOG,00000,"duration: 96084.069 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10447883.49..10447883.50 rows=1 width=8) (actual time=92328.815..92328.815 rows=1 loops=1)
  ->  Gather  (cost=10447883.27..10447883.48 rows=2 width=8) (actual time=92325.886..96083.953 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10446883.27..10446883.28 rows=1 width=8) (actual time=92274.159..92274.159 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=0) (actual time=68438.198..91037.635 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=68416.942..83164.918 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68416.059..78699.581 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45772.253..59170.112 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24672.969..38960.585 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.866..7147.515 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6880.436..6880.437 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.969..2535.288 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.099..237.099 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.758..99.001 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1249.729..1249.730 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.979..483.908 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.854..0.854 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.840 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.746..20.747 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.444..9.738 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:33:53.397 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,73,"",2021-03-19 23:47:13 CET,6/144,0,LOG,00000,"duration: 97164.592 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8792533.39..8792533.40 rows=1 width=8) (actual time=93231.379..93231.379 rows=1 loops=1)
  ->  Gather  (cost=8792533.17..8792533.38 rows=2 width=8) (actual time=93228.496..97162.871 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8791533.17..8791533.18 rows=1 width=8) (actual time=93168.491..93168.491 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=0) (actual time=68199.343..91862.156 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=8) (actual time=68198.453..86877.745 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68175.392..78958.748 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44521.919..58086.659 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23592.211..37795.773 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.899..6869.279 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6672.331..6672.332 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.003..2404.090 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.729..229.730 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..99.377 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2196.794..2196.794 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.106..492.841 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.593..22.594 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.566..10.742 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.652..0.652 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.613..0.619 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:35:30.252 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,74,"",2021-03-19 23:47:13 CET,6/145,0,LOG,00000,"duration: 96803.725 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12680098.22..12680098.23 rows=1 width=8) (actual time=92943.588..92943.588 rows=1 loops=1)
  ->  Gather  (cost=12680098.00..12680098.21 rows=2 width=8) (actual time=92940.907..96803.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12679098.00..12679098.01 rows=1 width=8) (actual time=92886.917..92886.917 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=0) (actual time=73924.467..91579.105 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10329917.58 rows=144466918 width=8) (actual time=73904.600..83794.711 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=46481.635..65598.466 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46480.709..59610.239 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24210.462..38124.471 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.190..7117.448 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7174.083..7174.084 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.852..2382.229 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.395..236.396 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.012..100.553 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.888..0.888 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.867..0.869 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.664..1246.664 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.907..487.844 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.239..19.239 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.544..9.452 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:37:06.495 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,75,"",2021-03-19 23:47:13 CET,6/146,0,LOG,00000,"duration: 96190.187 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12397936.22..12397936.23 rows=1 width=8) (actual time=92115.076..92115.076 rows=1 loops=1)
  ->  Gather  (cost=12397936.00..12397936.21 rows=2 width=8) (actual time=92109.849..96186.987 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12396936.00..12396936.01 rows=1 width=8) (actual time=92055.954..92055.954 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..12035768.71 rows=144466918 width=0) (actual time=82510.304..90726.244 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=8) (actual time=45446.793..74518.527 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45420.783..64825.638 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45420.009..59384.947 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24348.159..38134.665 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.799..6813.936 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7704.740..7704.741 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.032..2567.423 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.267..230.268 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.663..99.041 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.746..0.746 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.733..0.735 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=25.587..25.588 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.775..12.222 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1212.112..1212.112 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..475.464 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:38:42.162 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,76,"",2021-03-19 23:47:13 CET,6/147,0,LOG,00000,"duration: 95620.300 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8745507.39..8745507.40 rows=1 width=8) (actual time=91322.637..91322.638 rows=1 loops=1)
  ->  Gather  (cost=8745507.17..8745507.38 rows=2 width=8) (actual time=91318.910..95620.139 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8744507.17..8744507.18 rows=1 width=8) (actual time=91263.265..91263.266 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8383339.88 rows=144466918 width=0) (actual time=77152.836..90034.309 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3266766.13 rows=24077820 width=8) (actual time=77151.928..85450.191 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=16) (actual time=44758.906..68585.115 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44738.390..58400.821 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24200.298..37988.257 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.212..7162.086 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6988.689..6988.690 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.033..2380.435 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.707..237.708 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.721..107.116 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.192..20.192 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.849..9.949 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1288.624..1288.624 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.990..512.532 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.663..0.664 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.635..0.637 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:40:16.340 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,77,"",2021-03-19 23:47:13 CET,6/148,0,LOG,00000,"duration: 94135.305 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10742586.12..10742586.13 rows=1 width=8) (actual time=90241.499..90241.499 rows=1 loops=1)
  ->  Gather  (cost=10742585.90..10742586.11 rows=2 width=8) (actual time=90237.536..94135.182 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10741585.90..10741585.91 rows=1 width=8) (actual time=90182.976..90182.976 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10380418.61 rows=144466918 width=0) (actual time=81241.997..88957.016 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=8) (actual time=44818.689..73357.352 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=16) (actual time=44817.948..68096.752 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44798.683..58480.628 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24090.692..38104.995 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.017..7042.114 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6824.601..6824.601 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.113..2515.443 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.964..241.964 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.928..106.323 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.991..18.992 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.425..9.450 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.693..0.694 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.681..0.683 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1189.003..1189.003 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.122..475.269 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:41:49.856 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,78,"",2021-03-19 23:47:13 CET,6/149,0,LOG,00000,"duration: 93458.920 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10374679.82..10374679.83 rows=1 width=8) (actual time=89793.232..89793.232 rows=1 loops=1)
  ->  Gather  (cost=10374679.60..10374679.81 rows=2 width=8) (actual time=89789.516..93458.488 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10373679.60..10373679.61 rows=1 width=8) (actual time=89740.357..89740.357 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10012512.31 rows=144466918 width=0) (actual time=66237.902..88528.975 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8024499.18 rows=144466918 width=8) (actual time=66216.362..80813.184 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=66215.642..76379.932 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=41619.851..56837.588 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11589.437..25107.481 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.145..5654.048 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.540..246.541 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.753..105.872 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6635.401..6635.401 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.949..2420.024 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1223.618..1223.618 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.834..482.438 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.690..0.690 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.667..0.668 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.984..20.985 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.575..10.060 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:43:24.491 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,79,"",2021-03-19 23:47:13 CET,6/150,0,LOG,00000,"duration: 94589.375 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8719329.72..8719329.73 rows=1 width=8) (actual time=90909.300..90909.300 rows=1 loops=1)
  ->  Gather  (cost=8719329.50..8719329.71 rows=2 width=8) (actual time=90904.815..94588.677 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8718329.50..8718329.51 rows=1 width=8) (actual time=90851.112..90851.112 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=0) (actual time=67595.810..89647.548 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=8) (actual time=67594.955..84934.266 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=67574.451..77624.051 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=41886.927..57056.860 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11591.196..25214.658 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.154..5651.378 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.396..226.397 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.817..98.495 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6657.641..6657.641 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.930..2390.233 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2068.208..2068.208 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.999..483.064 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.187..20.188 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.585..9.698 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.615..0.615 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.589..0.591 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:44:58.013 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,80,"",2021-03-19 23:47:13 CET,6/151,0,LOG,00000,"duration: 93480.293 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12606894.55..12606894.56 rows=1 width=8) (actual time=89898.214..89898.214 rows=1 loops=1)
  ->  Gather  (cost=12606894.33..12606894.54 rows=2 width=8) (actual time=89893.945..93479.498 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12605894.33..12605894.34 rows=1 width=8) (actual time=89846.130..89846.131 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12244727.04 rows=144466918 width=0) (actual time=71905.488..88636.127 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10256713.91 rows=144466918 width=8) (actual time=71884.728..81236.292 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=42038.588..62770.600 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42037.709..56825.449 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11516.701..25260.139 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.275..5706.208 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.783..228.783 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..98.935 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6642.863..6642.863 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.806..2446.244 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.827..0.827 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.812..0.814 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1207.719..1207.719 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..465.648 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.206..20.207 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.516..9.482 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:46:32.629 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,81,"",2021-03-19 23:47:13 CET,6/152,0,LOG,00000,"duration: 94571.871 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12324732.55..12324732.56 rows=1 width=8) (actual time=90804.874..90804.874 rows=1 loops=1)
  ->  Gather  (cost=12324732.33..12324732.54 rows=2 width=8) (actual time=90801.032..94571.732 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12323732.33..12323732.34 rows=1 width=8) (actual time=90749.123..90749.124 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..11962565.04 rows=144466918 width=0) (actual time=81410.555..89409.144 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=8) (actual time=42115.273..72529.535 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=42096.428..62651.813 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42095.802..57419.221 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11720.299..25608.505 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.221..5721.783 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=561.752..561.753 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..121.449 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6397.055..6397.055 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.555..2390.640 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.585..0.586 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.569..0.570 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=18.515..18.515 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.646..9.316 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2002.732..2002.732 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.774..484.631 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:48:09.868 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,82,"",2021-03-19 23:47:13 CET,6/153,0,LOG,00000,"duration: 97194.091 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8672303.72..8672303.73 rows=1 width=8) (actual time=93542.148..93542.149 rows=1 loops=1)
  ->  Gather  (cost=8672303.50..8672303.71 rows=2 width=8) (actual time=93538.748..97193.524 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8671303.50..8671303.51 rows=1 width=8) (actual time=93484.639..93484.639 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8310136.21 rows=144466918 width=0) (actual time=79731.357..92283.258 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3193562.46 rows=24077820 width=8) (actual time=79730.549..87741.669 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=16) (actual time=44254.691..70229.110 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=44234.523..59807.881 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12238.124..26232.948 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.193..6040.798 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=450.006..450.007 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.855..106.248 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7653.326..7653.326 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.714..2458.947 rows=6666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.881..19.881 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.904..9.655 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1316.859..1316.859 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.809..510.577 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.566..0.566 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.537..0.539 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:49:47.228 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,83,"",2021-03-19 23:47:13 CET,6/154,0,LOG,00000,"duration: 97307.802 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10669382.45..10669382.46 rows=1 width=8) (actual time=93721.319..93721.320 rows=1 loops=1)
  ->  Gather  (cost=10669382.23..10669382.44 rows=2 width=8) (actual time=93716.867..97307.127 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10668382.23..10668382.24 rows=1 width=8) (actual time=93660.148..93660.148 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10307214.94 rows=144466918 width=0) (actual time=84478.521..92329.403 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=8) (actual time=43811.896..75851.095 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=16) (actual time=43810.707..70125.969 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43786.930..59987.360 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12463.808..25959.036 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.233..6551.850 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.053..234.054 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.951..100.829 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6794.043..6794.043 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.722..2359.700 rows=6666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=23.386..23.387 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.685..11.134 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.113..1.113 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.090..1.093 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1308.418..1308.418 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.960..482.197 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:51:20.526 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,84,"",2021-03-19 23:47:13 CET,6/155,0,LOG,00000,"duration: 93242.481 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8625275.72..8625275.73 rows=1 width=8) (actual time=90083.464..90083.464 rows=1 loops=1)
  ->  Gather  (cost=8625275.50..8625275.71 rows=2 width=8) (actual time=90079.197..93242.100 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8624275.50..8624275.51 rows=1 width=8) (actual time=89990.849..89990.849 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8263108.21 rows=144466918 width=0) (actual time=75615.582..88738.612 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3146534.46 rows=24077820 width=8) (actual time=75614.697..84022.938 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=426309.38..2585864.73 rows=24077820 width=16) (actual time=53385.971..67280.397 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=12690.806..36267.982 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12670.965..26491.304 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.038..6665.588 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.543..237.544 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.967..106.132 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.489..19.489 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.851..9.890 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7614.627..7614.627 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.720..2599.445 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.617..1255.617 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.931..495.166 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.556..0.556 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.523..0.525 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:52:51.695 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,85,"",2021-03-19 23:47:13 CET,6/156,0,LOG,00000,"duration: 91107.369 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10622354.45..10622354.46 rows=1 width=8) (actual time=88030.853..88030.853 rows=1 loops=1)
  ->  Gather  (cost=10622354.23..10622354.44 rows=2 width=8) (actual time=88026.797..91107.265 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10621354.23..10621354.24 rows=1 width=8) (actual time=87971.996..87971.997 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10260186.94 rows=144466918 width=0) (actual time=79044.233..86713.434 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7702438.48 rows=144466918 width=8) (actual time=51956.806..70883.473 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426309.38..2585864.73 rows=24077820 width=16) (actual time=51955.991..65462.097 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=12219.285..35231.884 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12197.091..25638.363 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.299..6459.852 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=219.303..219.303 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.704..98.210 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.773..21.773 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.932..10.942 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6571.291..6571.291 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.674..2394.317 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.768..0.769 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.750..0.751 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1929.151..1929.151 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.824..492.838 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 01:54:31.711 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,86,"",2021-03-19 23:47:13 CET,6/157,0,LOG,00000,"duration: 99967.511 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=10374679.82..10374679.83 rows=1 width=8) (actual time=96498.795..96498.795 rows=1 loops=1)
  ->  Gather  (cost=10374679.60..10374679.81 rows=2 width=8) (actual time=96495.041..99966.789 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10373679.60..10373679.61 rows=1 width=8) (actual time=96437.921..96437.921 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..10012512.31 rows=144466918 width=0) (actual time=72665.549..95211.710 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Hash Join  (cost=521434.75..8024499.18 rows=144466918 width=8) (actual time=72644.156..87416.487 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=72643.334..82915.586 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=45757.942..62020.971 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=14041.206..27891.003 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.264..7341.136 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=269.039..269.039 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.907..120.588 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7136.066..7136.066 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.978..2464.741 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2086.121..2086.121 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.988..541.317 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.773..0.773 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.749..0.751 rows=4 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.702..20.702 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.603..10.026 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:56:06.577 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,87,"",2021-03-19 23:47:13 CET,6/158,0,LOG,00000,"duration: 94818.827 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8719329.72..8719329.73 rows=1 width=8) (actual time=91124.944..91124.944 rows=1 loops=1)
  ->  Gather  (cost=8719329.50..8719329.71 rows=2 width=8) (actual time=91121.374..94818.062 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8718329.50..8718329.51 rows=1 width=8) (actual time=91036.890..91036.891 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=0) (actual time=67797.817..89836.415 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=8) (actual time=67796.995..85117.983 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=67775.319..77799.431 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42699.810..57772.841 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11923.191..25796.278 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.349..5894.772 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.233..238.234 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.850..103.925 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6383.865..6383.865 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.764..2338.795 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1884.029..1884.029 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.944..464.110 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.335..21.336 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.567..10.392 rows=50000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.600..0.600 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.574..0.576 rows=4 loops=3)",,,,,,,,,""
2021-03-20 01:57:42.581 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,88,"",2021-03-19 23:47:13 CET,6/159,0,LOG,00000,"duration: 95959.565 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id;
COMMIT;
Finalize Aggregate  (cost=12606894.55..12606894.56 rows=1 width=8) (actual time=92118.780..92118.780 rows=1 loops=1)
  ->  Gather  (cost=12606894.33..12606894.54 rows=2 width=8) (actual time=92115.276..95959.129 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12605894.33..12605894.34 rows=1 width=8) (actual time=92027.339..92027.339 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..12244727.04 rows=144466918 width=0) (actual time=73847.352..90785.702 rows=20000000 loops=3)
                    Hash Cond: (prod.subcategory_id = sub.id)
                    ->  Parallel Hash Join  (cost=521434.75..10256713.91 rows=144466918 width=8) (actual time=73824.721..83320.231 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=43343.976..64730.875 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43342.942..58604.020 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12010.107..25812.561 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.266..5960.387 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.920..236.928 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.931..104.434 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6843.410..6843.411 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.969..2475.005 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.985..0.985 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.969..0.971 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1295.886..1295.886 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.131..519.156 rows=1666667 loops=3)
                    ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.106..22.107 rows=50000 loops=3)
                          Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                          ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.653..10.434 rows=50000 loops=3)",,,,,,,,,""
2021-03-20 01:59:15.711 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,89,"",2021-03-19 23:47:13 CET,6/160,0,LOG,00000,"duration: 93077.881 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12324732.55..12324732.56 rows=1 width=8) (actual time=89643.630..89643.630 rows=1 loops=1)
  ->  Gather  (cost=12324732.33..12324732.54 rows=2 width=8) (actual time=89639.096..93077.045 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12323732.33..12323732.34 rows=1 width=8) (actual time=89585.636..89585.636 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..11962565.04 rows=144466918 width=0) (actual time=81000.669..88354.496 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=8) (actual time=42439.748..72087.931 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=42420.099..62450.142 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42419.367..57324.701 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11407.153..24655.907 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.333..5693.255 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.529..227.530 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.863..99.403 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8072.794..8072.794 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.628..2533.957 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.703..0.703 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.688..0.689 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.370..19.370 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.785..9.760 rows=50000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1242.087..1242.087 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.833..481.633 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:00:54.885 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,90,"",2021-03-19 23:47:13 CET,6/161,0,LOG,00000,"duration: 99113.244 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8672303.72..8672303.73 rows=1 width=8) (actual time=95190.423..95190.423 rows=1 loops=1)
  ->  Gather  (cost=8672303.50..8672303.71 rows=2 width=8) (actual time=95186.085..99112.577 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8671303.50..8671303.51 rows=1 width=8) (actual time=95132.792..95132.792 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8310136.21 rows=144466918 width=0) (actual time=81186.135..93923.523 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3193562.46 rows=24077820 width=8) (actual time=81185.320..89374.182 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=16) (actual time=44028.767..71531.928 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=44008.099..60587.663 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12443.820..26409.769 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.986..6063.275 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=497.729..497.729 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.974..134.742 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7281.044..7281.044 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.741..2523.621 rows=6666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=20.330..20.330 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.672..10.159 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1357.041..1357.041 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.894..551.756 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.596..0.596 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.572..0.574 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:02:27.727 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,91,"",2021-03-19 23:47:13 CET,6/162,0,LOG,00000,"duration: 92786.303 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10669382.45..10669382.46 rows=1 width=8) (actual time=88986.458..88986.458 rows=1 loops=1)
  ->  Gather  (cost=10669382.23..10669382.44 rows=2 width=8) (actual time=88982.647..92785.641 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10668382.23..10668382.24 rows=1 width=8) (actual time=88933.430..88933.430 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10307214.94 rows=144466918 width=0) (actual time=79876.933..87638.344 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=8) (actual time=42393.384..71985.269 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=16) (actual time=42392.542..66630.519 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42362.197..57275.293 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11889.688..25120.866 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.310..5910.514 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.973..249.974 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.040..110.030 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6676.677..6676.677 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.893..2402.832 rows=6666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=30.088..30.088 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.474..12.707 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.792..0.792 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.781..0.783 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1172.565..1172.565 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.779..479.934 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:04:00.899 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,92,"",2021-03-19 23:47:13 CET,6/163,0,LOG,00000,"duration: 93120.739 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8625275.72..8625275.73 rows=1 width=8) (actual time=89264.053..89264.053 rows=1 loops=1)
  ->  Gather  (cost=8625275.50..8625275.71 rows=2 width=8) (actual time=89260.421..93120.225 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8624275.50..8624275.51 rows=1 width=8) (actual time=89205.404..89205.404 rows=1 loops=3)
              ->  Hash Join  (cost=523027.75..8263108.21 rows=144466918 width=0) (actual time=75678.404..88004.260 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=522990.75..3146534.46 rows=24077820 width=8) (actual time=75677.487..83545.425 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=426309.38..2585864.73 rows=24077820 width=16) (actual time=52067.624..66053.744 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=11757.881..34841.949 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11732.897..25242.553 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.115..5854.855 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.921..226.922 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..100.823 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=24.611..24.611 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.747..11.567 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6660.632..6660.633 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.793..2388.107 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1242.164..1242.164 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.983..498.180 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.593..0.593 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.566..0.568 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:05:33.375 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,93,"",2021-03-19 23:47:13 CET,6/164,0,LOG,00000,"duration: 92416.037 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10622354.45..10622354.46 rows=1 width=8) (actual time=88158.754..88158.755 rows=1 loops=1)
  ->  Gather  (cost=10622354.23..10622354.44 rows=2 width=8) (actual time=88154.599..92415.698 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10621354.23..10621354.24 rows=1 width=8) (actual time=88103.982..88103.982 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523027.75..10260186.94 rows=144466918 width=0) (actual time=79464.398..86879.819 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426346.38..7702438.48 rows=144466918 width=8) (actual time=53085.729..72051.683 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426309.38..2585864.73 rows=24077820 width=16) (actual time=53084.754..66575.703 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=8) (actual time=11554.806..34576.735 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11532.158..24981.848 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.083..5737.143 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.778..227.779 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.710..99.513 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=22.244..22.245 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.754..10.556 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6705.279..6705.279 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.805..2320.734 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.917..0.917 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.891..0.894 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1158.188..1158.188 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..470.546 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:06:54.643 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,94,"",2021-03-19 23:47:13 CET,6/165,0,LOG,00000,"duration: 81216.092 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8299120.87..8299120.88 rows=1 width=8) (actual time=77440.187..77440.187 rows=1 loops=1)
  ->  Gather  (cost=8299120.65..8299120.86 rows=2 width=8) (actual time=77435.213..81215.551 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8298120.65..8298120.66 rows=1 width=8) (actual time=77382.965..77382.965 rows=1 loops=3)
              ->  Hash Join  (cost=528349.93..7936953.36 rows=144466918 width=0) (actual time=63725.251..76187.107 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=528312.93..2820379.61 rows=24077820 width=8) (actual time=63724.365..71682.010 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=431631.55..2259709.88 rows=24077820 width=16) (actual time=40719.373..54907.624 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=11767.783..23846.239 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.216..5787.209 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=391.784..391.785 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=26.149..272.924 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.908..92.796 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=24.859..24.859 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.556..11.760 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6591.630..6591.630 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.813..2365.793 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1209.874..1209.874 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.839..488.758 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.593..0.594 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.571..0.573 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:08:14.496 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,95,"",2021-03-19 23:47:13 CET,6/166,0,LOG,00000,"duration: 79802.893 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10296199.60..10296199.61 rows=1 width=8) (actual time=75525.624..75525.624 rows=1 loops=1)
  ->  Gather  (cost=10296199.38..10296199.59 rows=2 width=8) (actual time=75520.533..79802.257 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10295199.38..10295199.39 rows=1 width=8) (actual time=75469.661..75469.661 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=528349.93..9934032.09 rows=144466918 width=0) (actual time=67238.935..74292.755 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=431668.55..7376283.63 rows=144466918 width=8) (actual time=40587.618..59620.561 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=431631.55..2259709.88 rows=24077820 width=16) (actual time=40586.599..54170.829 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12164.935..23925.590 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.249..6019.248 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=387.036..387.036 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=22.757..269.103 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..95.604 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=21.465..21.465 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.636..10.763 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7119.049..7119.049 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.205..2586.417 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.980..0.981 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.957..0.960 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1252.180..1252.180 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.008..488.554 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:09:35.658 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,96,"",2021-03-19 23:47:13 CET,6/167,0,LOG,00000,"duration: 81116.432 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8299120.87..8299120.88 rows=1 width=8) (actual time=77500.610..77500.610 rows=1 loops=1)
  ->  Gather  (cost=8299120.65..8299120.86 rows=2 width=8) (actual time=77496.661..81115.276 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8298120.65..8298120.66 rows=1 width=8) (actual time=77437.698..77437.698 rows=1 loops=3)
              ->  Hash Join  (cost=528349.93..7936953.36 rows=144466918 width=0) (actual time=63734.966..76242.235 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=528312.93..2820379.61 rows=24077820 width=8) (actual time=63734.034..71758.331 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=431631.55..2259709.88 rows=24077820 width=16) (actual time=40866.090..55169.528 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12032.990..23679.682 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.214..5873.867 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=394.496..394.496 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=28.264..275.932 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.807..96.102 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=27.090..27.090 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.462..12.314 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6806.868..6806.869 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.641..2441.844 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1200.347..1200.348 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..489.637 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.637..0.637 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.610..0.612 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:10:57.471 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,97,"",2021-03-19 23:47:13 CET,6/168,0,LOG,00000,"duration: 81752.764 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10296199.60..10296199.61 rows=1 width=8) (actual time=77689.378..77689.378 rows=1 loops=1)
  ->  Gather  (cost=10296199.38..10296199.59 rows=2 width=8) (actual time=77684.908..81752.305 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10295199.38..10295199.39 rows=1 width=8) (actual time=77624.893..77624.894 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=528349.93..9934032.09 rows=144466918 width=0) (actual time=69415.740..76447.577 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=431668.55..7376283.63 rows=144466918 width=8) (actual time=42788.940..61832.452 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=431631.55..2259709.88 rows=24077820 width=16) (actual time=42788.173..56366.467 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=28635.18..1218479.51 rows=24077820 width=8) (actual time=12090.608..24325.525 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.413..5997.271 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=8) (actual time=389.615..389.615 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=8) (actual time=20.433..270.337 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.847..93.281 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=8) (actual time=19.264..19.265 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=8) (actual time=0.463..9.618 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7274.783..7274.783 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.771..2547.430 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.717..0.718 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.706..0.708 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1265.037..1265.037 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.954..495.686 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:12:41.436 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,98,"",2021-03-19 23:47:13 CET,6/169,0,LOG,00000,"duration: 103861.016 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12434612.61..12434612.62 rows=1 width=8) (actual time=100375.002..100375.002 rows=1 loops=1)
  ->  Gather  (cost=12434612.39..12434612.60 rows=2 width=8) (actual time=100370.767..103860.872 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12433612.39..12433612.40 rows=1 width=8) (actual time=100316.072..100316.072 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12072445.10 rows=144466918 width=0) (actual time=68971.282..98867.059 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=8) (actual time=68965.658..92751.965 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=68940.568..84234.132 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68939.654..79878.854 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45163.103..58856.905 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24216.230..38099.188 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.562..7005.738 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6761.394..6761.394 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.886..2466.153 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.456..239.457 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.807..103.427 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1194.958..1194.958 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.772..482.407 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.872..0.873 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.860..0.861 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.772..24.772 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.657..12.436 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.336..5.336 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.659..3.438 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:14:30.259 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,99,"",2021-03-19 23:47:13 CET,6/170,0,LOG,00000,"duration: 108759.676 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12729315.24..12729315.25 rows=1 width=8) (actual time=104489.635..104489.635 rows=1 loops=1)
  ->  Gather  (cost=12729315.03..12729315.24 rows=2 width=8) (actual time=104483.859..108759.488 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12728315.03..12728315.04 rows=1 width=8) (actual time=104428.816..104428.816 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12367147.73 rows=144466918 width=0) (actual time=95303.969..103189.014 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9809399.28 rows=144466918 width=8) (actual time=48102.976..86000.673 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=16) (actual time=48097.654..78807.694 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=48097.033..73431.574 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=48075.435..62275.601 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25847.027..40713.695 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.325..7673.635 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7519.965..7519.965 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.662..2671.740 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.014..221.014 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.620..99.212 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.236..21.236 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.489..10.833 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.588..0.589 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.579..0.580 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.200..5.200 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.886..2.864 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2176.529..2176.529 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.948..489.006 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:16:14.691 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,100,"",2021-03-19 23:47:13 CET,6/171,0,LOG,00000,"duration: 104361.497 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=100615.766..100615.766 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=100612.234..104361.338 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=100557.543..100557.543 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=79364.292..99327.194 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=79358.924..93380.458 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=79358.322..88960.268 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=44527.187..69927.606 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44503.158..58481.222 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23738.501..37663.242 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.153..7005.567 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6372.623..6372.623 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.811..2380.790 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.263..233.263 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.726..107.478 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.727..23.727 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.886..12.319 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1166.684..1166.684 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.821..473.293 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.564..0.564 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.548..0.549 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.081..5.081 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.830 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:18:25.336 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,101,"",2021-03-19 23:47:13 CET,6/172,0,LOG,00000,"duration: 130596.368 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13006499.86..13006499.87 rows=1 width=8) (actual time=124471.014..124471.015 rows=1 loops=1)
  ->  Gather  (cost=13006499.65..13006499.86 rows=2 width=8) (actual time=124464.418..130595.463 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13005499.65..13005499.66 rows=1 width=8) (actual time=124413.800..124413.800 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..12644332.36 rows=144466917 width=0) (actual time=98008.677..123165.033 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=8) (actual time=98003.344..117103.522 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=97977.541..108815.484 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=77918.582..92237.645 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7182.589..14426.133 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7180.490..12413.701 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.253..2505.668 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1884.442..1884.443 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.586..572.041 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.000..2.001 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.972..1.975 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52575.175..52575.175 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.943..8500.666 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.717..249.717 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.940..111.548 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.420..25.420 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.815..12.896 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.984..4.984 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.720..2.852 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:20:15.096 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,102,"",2021-03-19 23:47:13 CET,6/173,0,LOG,00000,"duration: 109692.370 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=105545.154..105545.154 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=105540.733..109692.213 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=105486.269..105486.269 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=90180.258..104137.168 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=90179.344..99135.006 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=56511.112..79900.916 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=56505.279..72093.609 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11844.887..37823.556 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11815.617..26325.236 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.541..5785.779 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.803..242.804 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.965..109.261 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.880..28.880 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=3.116..18.470 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7019.190..7019.190 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.075..2573.159 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.710..5.710 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.002..3.265 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1726.435..1726.435 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.154..532.471 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.698..0.698 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.674..0.676 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:21:55.013 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,103,"",2021-03-19 23:47:13 CET,6/174,0,LOG,00000,"duration: 99858.829 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10953733.47..10953733.48 rows=1 width=8) (actual time=96546.571..96546.571 rows=1 loops=1)
  ->  Gather  (cost=10953733.26..10953733.47 rows=2 width=8) (actual time=96542.654..99858.431 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10952733.26..10952733.27 rows=1 width=8) (actual time=96484.820..96484.820 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10591565.96 rows=144466918 width=0) (actual time=88134.352..95284.210 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8033817.51 rows=144466918 width=8) (actual time=61790.307..80628.461 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426618.38..2917243.76 rows=24077820 width=16) (actual time=61789.632..75225.314 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=11917.125..44334.605 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11912.856..36896.153 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11891.093..25986.095 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.069..5877.678 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.054..238.054 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.668..112.134 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.459..21.460 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.571..11.069 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.137..4.137 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.664..2.358 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6664.093..6664.093 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.617..2434.629 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.643..0.643 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.631 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1204.048..1204.048 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.003..482.220 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:23:40.051 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,104,"",2021-03-19 23:47:13 CET,6/175,0,LOG,00000,"duration: 104988.682 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=101497.425..101497.426 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=101492.488..104988.032 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=101439.174..101439.174 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=85287.710..100166.756 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=85282.152..94320.993 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=54908.040..76205.467 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54906.935..70069.897 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12228.951..37380.987 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12205.328..26208.062 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.991..6059.772 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.632..230.633 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.911..104.614 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.185..23.186 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.844..11.926 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6690.678..6690.679 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.913..2454.976 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.059..1.059 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.041..1.043 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1528.277..1528.277 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.896..514.955 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.088..5.089 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.865..2.915 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:25:24.446 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,105,"",2021-03-19 23:47:13 CET,6/176,0,LOG,00000,"duration: 104346.652 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=100756.429..100756.433 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=100752.048..104346.033 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=100694.673..100694.674 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=85190.011..99463.938 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=85184.053..93819.589 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=55051.432..75674.791 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55050.258..69713.648 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11899.639..36827.680 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11876.078..25725.094 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.032..5781.140 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.672..225.672 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.553..102.556 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.117..23.117 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.053..11.969 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6721.085..6721.085 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.017..2489.649 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.118..1.118 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.097..1.099 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2045.722..2045.722 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.860..506.820 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.564..5.564 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.490..3.013 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:27:02.265 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,106,"",2021-03-19 23:47:13 CET,6/177,0,LOG,00000,"duration: 97760.295 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16816822.12..16816822.13 rows=1 width=8) (actual time=94617.459..94617.459 rows=1 loops=1)
  ->  Gather  (cost=16816821.90..16816822.11 rows=2 width=8) (actual time=94612.581..97759.764 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16815821.90..16815821.91 rows=1 width=8) (actual time=94557.021..94557.021 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..16454654.61 rows=144466917 width=0) (actual time=68389.593..93329.739 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..14467925.50 rows=144466917 width=8) (actual time=68384.064..87280.851 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..12479912.39 rows=144466917 width=8) (actual time=68359.931..78836.362 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499714.75..10119835.42 rows=150000000 width=8) (actual time=54779.427..63493.609 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=24522.537..45663.285 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24521.688..39588.801 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.891..6879.843 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7272.936..7272.937 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.682..2441.427 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.786..0.786 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.771..0.773 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1509.990..1509.990 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.746..644.613 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.493..230.493 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..103.158 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.829..23.829 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.536..11.981 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.220..5.220 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.529..2.851 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:28:23.808 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,107,"",2021-03-19 23:47:13 CET,6/178,0,LOG,00000,"duration: 81487.997 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10302237.77..10302237.78 rows=1 width=8) (actual time=78611.624..78611.624 rows=1 loops=1)
  ->  Gather  (cost=10302237.55..10302237.76 rows=2 width=8) (actual time=78607.677..81487.882 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10301237.55..10301237.56 rows=1 width=8) (actual time=78553.838..78553.838 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=534388.10..9940070.26 rows=144466918 width=0) (actual time=70124.457..77340.359 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=437706.72..7382321.80 rows=144466918 width=8) (actual time=41262.387..61514.717 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=41261.479..55753.447 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=11801.353..23458.573 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.067..5715.105 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=568.240..568.240 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=26.359..445.576 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.075..318.930 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.548..100.246 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.234..21.234 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..11.063 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.199..4.200 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.750..2.432 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7304.692..7304.692 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.760..2672.580 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.867..0.868 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.852..0.854 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1978.304..1978.304 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.893..523.062 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:30:10.918 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,108,"",2021-03-19 23:47:13 CET,6/179,0,LOG,00000,"duration: 107054.724 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=102852.888..102852.888 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=102848.642..107054.522 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=102789.360..102789.361 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=81216.896..101515.228 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=81209.695..95495.988 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=81209.048..90934.223 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=44810.315..70646.801 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44788.789..59038.636 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23727.113..37817.910 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.961..7070.283 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6394.800..6394.803 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.019..2385.240 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.419..242.419 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.021..103.057 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.187..21.187 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.704..11.081 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1917.623..1917.623 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.859..540.109 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.603..0.603 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.571..0.573 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.618..6.618 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.578..3.419 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:31:58.589 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,109,"",2021-03-19 23:47:13 CET,6/180,0,LOG,00000,"duration: 107618.714 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=104070.974..104070.974 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=104067.519..107618.076 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=104012.692..104012.692 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=90299.979..102791.485 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=90299.194..98254.159 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=43994.591..80890.523 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43989.303..72563.874 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43966.327..60678.516 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12062.507..25712.133 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.233..5929.832 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.914..234.915 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.773..101.119 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7201.619..7201.619 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.732..2534.499 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.610..22.611 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.840..11.798 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.186..5.187 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.771..2.880 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1215.425..1215.426 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.779..483.894 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.566..0.567 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.535..0.538 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:33:36.076 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,110,"",2021-03-19 23:47:13 CET,6/181,0,LOG,00000,"duration: 97422.181 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16816822.12..16816822.13 rows=1 width=8) (actual time=93963.165..93963.165 rows=1 loops=1)
  ->  Gather  (cost=16816821.90..16816822.11 rows=2 width=8) (actual time=93956.694..97421.994 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16815821.90..16815821.91 rows=1 width=8) (actual time=93904.379..93904.379 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..16454654.61 rows=144466917 width=0) (actual time=67531.359..92653.311 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..14467925.50 rows=144466917 width=8) (actual time=67525.366..86464.417 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..12479912.39 rows=144466917 width=8) (actual time=67501.023..78021.605 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=499714.75..10119835.42 rows=150000000 width=8) (actual time=53312.503..62443.162 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=23566.035..44504.453 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23565.069..38452.063 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.051..6627.844 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7612.985..7612.985 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.790..2533.839 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.895..0.896 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.876..0.878 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1405.521..1405.521 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.743..500.160 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.261..237.261 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.868..99.693 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.056..24.056 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.517..11.993 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.715..5.715 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.974 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:35:21.421 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,111,"",2021-03-19 23:47:13 CET,6/182,0,LOG,00000,"duration: 105302.313 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14666827.34..14666827.35 rows=1 width=8) (actual time=101533.276..101533.276 rows=1 loops=1)
  ->  Gather  (cost=14666827.12..14666827.33 rows=2 width=8) (actual time=101529.647..105302.219 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14665827.12..14665827.13 rows=1 width=8) (actual time=101480.831..101480.831 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14304659.83 rows=144466918 width=0) (actual time=85675.315..100264.069 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=8) (actual time=85669.812..94615.066 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=44535.572..76234.148 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=44512.330..64729.744 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44511.611..59136.892 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23572.534..37698.453 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.124..6951.204 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6632.901..6632.901 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.832..2430.028 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.129..242.129 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.616..105.902 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.689..0.689 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.679..0.680 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.836..22.836 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.888..11.790 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1690.296..1690.296 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.771..491.928 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.201..5.201 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.531..2.766 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:37:41.640 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,112,"",2021-03-19 23:47:13 CET,6/183,0,LOG,00000,"duration: 140163.422 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15769954.82..15769954.83 rows=1 width=8) (actual time=133330.517..133330.517 rows=1 loops=1)
  ->  Gather  (cost=15769954.61..15769954.82 rows=2 width=8) (actual time=133326.001..140163.174 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15768954.61..15768954.62 rows=1 width=8) (actual time=133276.645..133276.645 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15407787.32 rows=144466917 width=0) (actual time=105904.439..132009.572 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=8) (actual time=105899.178..125782.552 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=105875.904..117131.346 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=91984.465..100768.852 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68468.319..83290.266 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.027..4377.051 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.914..2062.858 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.068..1.069 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.050..1.053 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51247.433..51247.434 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.708..8000.903 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2251.045..2251.045 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.948..487.435 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.159..257.159 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.216..112.008 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.941..22.941 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.676..11.535 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.972..4.972 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.699 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:39:49.435 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,113,"",2021-03-19 23:47:13 CET,6/184,0,LOG,00000,"duration: 127724.688 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13779071.07..13779071.08 rows=1 width=8) (actual time=120562.981..120562.982 rows=1 loops=1)
  ->  Gather  (cost=13779070.86..13779071.07 rows=2 width=8) (actual time=120557.318..127723.705 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13778070.86..13778070.87 rows=1 width=8) (actual time=120506.713..120506.713 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..13416903.57 rows=144466917 width=0) (actual time=93930.284..119279.401 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=8) (actual time=93924.788..113184.239 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=93901.923..104839.939 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=74935.656..88466.050 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=8122.591..12793.788 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.732..4087.889 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.816..1846.229 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.864..0.865 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.849..0.850 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1419.313..1419.313 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.792..513.376 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52497.076..52497.077 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.352..8031.062 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.736..236.736 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.912..99.222 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.410..22.411 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.525..11.278 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.159..5.159 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.532..2.763 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:41:33.916 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,114,"",2021-03-19 23:47:13 CET,6/185,0,LOG,00000,"duration: 104422.617 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=100595.805..100595.805 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=100591.565..104422.520 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=100544.221..100544.222 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=67290.259..99021.718 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=67285.808..92406.400 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=67285.293..87601.902 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=67260.880..78251.811 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43039.323..58066.118 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12023.458..25863.891 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.814..5930.915 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=402.320..402.321 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.764..96.457 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7267.440..7267.440 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.302..2921.855 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1220.306..1220.306 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.925..504.031 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.142..24.142 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.455..12.098 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.496..0.496 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.483..0.484 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.174..4.175 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.483..2.352 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:43:02.611 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,115,"",2021-03-19 23:47:13 CET,6/186,0,LOG,00000,"duration: 88641.761 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8631313.89..8631313.90 rows=1 width=8) (actual time=85199.362..85199.362 rows=1 loops=1)
  ->  Gather  (cost=8631313.68..8631313.89 rows=2 width=8) (actual time=85196.063..88641.074 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8630313.68..8630313.69 rows=1 width=8) (actual time=85141.257..85141.257 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8269146.38 rows=144466918 width=0) (actual time=70714.059..83859.065 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3152572.63 rows=24077820 width=8) (actual time=70713.125..79111.609 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=48798.882..62339.567 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=11630.615..31727.794 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11625.641..24728.246 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.915..5623.856 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=605.322..605.322 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.554..320.917 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.610..97.817 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.598..21.599 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.616..11.253 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.845..4.845 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.951..2.823 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6832.912..6832.913 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.987..2568.647 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.918..1248.918 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.935..474.851 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.659..0.659 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.632..0.634 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:44:44.590 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,116,"",2021-03-19 23:47:13 CET,6/187,0,LOG,00000,"duration: 101916.737 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=98163.481..98163.481 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=98159.267..101916.281 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=98105.932..98105.932 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=89672.692..96903.075 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=54781.848..80697.315 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=54780.952..75453.174 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54775.675..68886.651 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12208.163..37502.683 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12175.964..26289.671 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.072..5843.680 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=723.122..723.125 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.978..115.207 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.759..31.759 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.689..15.342 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7083.985..7083.985 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.631..2630.540 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.188..5.188 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.560..2.796 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.856..0.857 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.838..0.840 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2040.379..2040.379 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.073..512.425 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:46:31.780 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,117,"",2021-03-19 23:47:13 CET,6/188,0,LOG,00000,"duration: 107132.657 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=103781.825..103781.825 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=103777.563..107132.532 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=103723.687..103723.687 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=95135.948..102503.243 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=43763.287..86419.395 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=43757.631..78686.565 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43756.920..73028.307 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43733.409..60866.304 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11701.268..25780.487 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.912..5781.649 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.485..235.486 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.760..100.392 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7939.280..7939.280 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.984..2590.508 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.155..23.155 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.657..11.844 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.680..0.680 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.668..0.669 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.534..5.535 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.998..3.177 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1387.654..1387.655 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.045..498.037 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:48:16.498 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,118,"",2021-03-19 23:47:13 CET,6/189,0,LOG,00000,"duration: 104660.062 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=100337.972..100337.972 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=100333.290..104659.411 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=100278.125..100278.126 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=68196.471..98799.727 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=68195.655..93807.744 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=68191.270..87748.583 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=68168.406..78706.628 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42416.675..57170.211 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11489.381..25561.727 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.014..5741.267 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.264..234.265 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..101.117 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6615.541..6615.541 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.021..2399.358 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1723.801..1723.801 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.009..498.619 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.537..22.537 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.625..11.424 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.289..4.290 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.562..2.399 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.609..0.609 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.584..0.586 rows=4 loops=3)",,,,,,,,,""
2021-03-20 02:50:03.506 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,119,"",2021-03-19 23:47:13 CET,6/190,0,LOG,00000,"duration: 106946.839 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11073965.14..11073965.15 rows=1 width=8) (actual time=102998.238..102998.238 rows=1 loops=1)
  ->  Gather  (cost=11073964.93..11073965.14 rows=2 width=8) (actual time=102993.773..106946.750 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11072964.93..11072964.94 rows=1 width=8) (actual time=102940.801..102940.801 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10711797.63 rows=144466918 width=0) (actual time=93581.077..101657.454 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8154049.18 rows=144466918 width=8) (actual time=45111.647..84477.744 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=45110.727..79064.527 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=45106.324..71467.686 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45080.398..59925.050 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23994.995..38191.368 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.819..6764.950 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6890.442..6890.442 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.006..2550.446 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.440..225.440 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.752..99.205 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.630..25.630 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.602..12.466 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.316..4.316 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.327 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.874..0.874 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.856..0.858 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1216.716..1216.716 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.851..481.469 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:51:45.894 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,120,"",2021-03-19 23:47:13 CET,6/191,0,LOG,00000,"duration: 102334.143 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10749695.83..10749695.84 rows=1 width=8) (actual time=98252.662..98252.662 rows=1 loops=1)
  ->  Gather  (cost=10749695.62..10749695.83 rows=2 width=8) (actual time=98247.083..102333.652 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10748695.62..10748695.63 rows=1 width=8) (actual time=98200.146..98200.147 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10387528.32 rows=144466918 width=0) (actual time=64629.862..96721.639 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=8) (actual time=64624.767..90255.155 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=64624.226..85561.952 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=64600.630..76251.765 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=48220.727..58638.400 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23777.252..38859.563 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.926..6801.755 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7099.796..7099.797 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.693..2522.159 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.720..1255.720 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.740..480.836 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=220.125..220.125 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.923..98.505 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.289..23.289 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.499..11.852 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.515..0.515 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.498..0.499 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.810..4.810 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.658 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:53:15.184 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,121,"",2021-03-19 23:47:13 CET,6/192,0,LOG,00000,"duration: 89241.848 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=86073.542..86073.542 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=86068.277..89241.677 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=86016.465..86016.465 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=50925.576..84492.863 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=50920.694..77793.800 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=50919.996..72997.740 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=50894.866..63177.425 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32011.199..45059.220 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.035..6733.641 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15344.232..15344.232 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6615.723..11234.138 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.799..2402.331 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1277.795..1277.795 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.962..495.997 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=217.538..217.538 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.001..98.100 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.826..24.826 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.667..12.483 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.679..0.679 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.661..0.663 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.590..4.590 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.696..2.683 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:54:54.148 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,122,"",2021-03-19 23:47:13 CET,6/193,0,LOG,00000,"duration: 98917.871 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14499114.79..14499114.80 rows=1 width=8) (actual time=95532.768..95532.768 rows=1 loops=1)
  ->  Gather  (cost=14499114.57..14499114.78 rows=2 width=8) (actual time=95527.714..98917.743 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14498114.57..14498114.58 rows=1 width=8) (actual time=95462.706..95462.706 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14136947.28 rows=144466917 width=0) (actual time=69295.385..94246.184 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=8) (actual time=69289.260..88195.060 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=69256.007..79747.932 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=48122.375..63258.179 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=48121.543..58303.247 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23167.261..38227.003 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.097..6986.464 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6257.785..6257.786 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.826..2347.798 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1264.568..1264.569 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.839..471.309 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.791..0.791 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.781..0.782 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1149.920..1149.920 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.279..114.568 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.905..32.905 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.940..15.786 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.777..5.777 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.656..3.102 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 02:56:38.166 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,123,"",2021-03-19 23:47:13 CET,6/194,0,LOG,00000,"duration: 103957.874 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=100035.838..100035.838 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=100032.282..103957.342 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=99976.344..99976.344 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=90990.535..98716.630 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=56807.857..83125.717 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=56806.987..77825.844 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=56801.399..71181.723 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12175.556..37694.040 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12154.061..26356.927 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.222..5955.353 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.110..234.111 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.100..104.084 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.189..21.189 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.880..10.983 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7274.214..7274.214 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.603..2522.680 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.500..5.500 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.811 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.833..0.833 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.819..0.821 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1187.043..1187.043 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.950..465.464 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:56:44.159 CET,,,5184,,6055275a.1440,2,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 02:58:18.753 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,124,"",2021-03-19 23:47:13 CET,6/195,0,LOG,00000,"duration: 100536.471 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=97119.285..97119.285 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=97115.921..100535.846 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=97059.089..97059.089 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=88717.464..95864.153 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=54431.536..80652.495 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=54426.948..73811.506 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54426.346..68623.335 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11293.979..36472.516 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11264.707..25275.244 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.911..5590.485 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.658..225.658 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.060..99.349 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.859..28.859 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.734..13.915 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7061.529..7061.529 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.547..2592.695 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.571..0.571 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.561..0.562 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.455..4.455 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.932..2.626 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1210.882..1210.882 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.128..487.004 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 02:59:46.565 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,125,"",2021-03-19 23:47:13 CET,6/196,0,LOG,00000,"duration: 87758.730 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10628392.62..10628392.63 rows=1 width=8) (actual time=83883.505..83883.506 rows=1 loops=1)
  ->  Gather  (cost=10628392.41..10628392.62 rows=2 width=8) (actual time=83879.882..87757.819 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10627392.41..10627392.42 rows=1 width=8) (actual time=83822.636..83822.636 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10266225.11 rows=144466918 width=0) (actual time=74954.756..82561.118 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7708476.66 rows=144466918 width=8) (actual time=48342.749..66656.416 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=48341.727..61474.862 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=11487.804..32112.567 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11482.931..24950.169 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.041..5648.193 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=418.655..418.656 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=21.647..289.593 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.702..89.961 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.646..20.647 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.479..10.728 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.761..4.762 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.740..2.656 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6773.644..6773.644 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.924..2508.336 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.965..0.965 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.943..0.945 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1972.629..1972.629 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.948..493.792 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:01:31.218 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,126,"",2021-03-19 23:47:13 CET,6/197,0,LOG,00000,"duration: 104588.440 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=101293.197..101293.197 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=101289.248..104587.954 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=101231.265..101231.265 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=92623.357..99989.943 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=42802.165..84039.997 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=42801.215..78559.457 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42797.006..71119.815 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42775.196..59346.800 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11408.009..25175.954 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..5665.877 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.177..238.177 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.901..105.084 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6925.992..6925.993 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.708..2534.783 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.471..21.471 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.592..11.156 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.116..4.116 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.262 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.905..0.905 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.888..0.890 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1262.252..1262.252 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.867..494.286 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:02:50.576 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,127,"",2021-03-19 23:47:13 CET,6/198,0,LOG,00000,"duration: 79290.505 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10302237.77..10302237.78 rows=1 width=8) (actual time=76091.780..76091.780 rows=1 loops=1)
  ->  Gather  (cost=10302237.55..10302237.76 rows=2 width=8) (actual time=76087.723..79289.971 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10301237.55..10301237.56 rows=1 width=8) (actual time=76028.349..76028.349 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=534388.10..9940070.26 rows=144466918 width=0) (actual time=67246.615..74760.470 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=437706.72..7382321.80 rows=144466918 width=8) (actual time=39872.109..58915.153 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=39871.225..53432.308 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=11865.921..23674.611 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.196..5587.928 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=912.448..912.449 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=27.612..484.127 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.821..343.583 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.532..105.769 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.969..21.970 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.688..11.196 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.693..4.693 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.798..2.653 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6724.517..6724.517 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.790..2477.617 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.830..0.830 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.818..0.820 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2090.956..2090.956 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.791..494.971 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:04:33.376 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,128,"",2021-03-19 23:47:13 CET,6/199,0,LOG,00000,"duration: 102754.999 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12405045.93..12405045.94 rows=1 width=8) (actual time=99455.937..99455.938 rows=1 loops=1)
  ->  Gather  (cost=12405045.71..12405045.92 rows=2 width=8) (actual time=99449.988..102754.458 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12404045.71..12404045.72 rows=1 width=8) (actual time=99399.816..99399.816 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12042878.42 rows=144466918 width=0) (actual time=66263.108..97912.731 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10056149.30 rows=144466918 width=8) (actual time=66257.568..91576.443 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8068136.17 rows=144466918 width=8) (actual time=66232.355..82771.890 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=66231.398..78146.858 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50649.254..60410.181 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24743.481..39807.428 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.396..7169.184 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7478.912..7478.913 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.842..2443.941 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1471.630..1471.630 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.745..506.300 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.448..234.448 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.113..100.335 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.919..0.919 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.906..0.907 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.891..24.891 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..12.526 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.213..5.213 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.788..2.969 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:06:17.953 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,129,"",2021-03-19 23:47:13 CET,6/200,0,LOG,00000,"duration: 104513.560 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=101369.567..101369.567 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=101365.869..104512.969 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=101311.587..101311.588 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=67906.625..99773.803 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=67905.794..94642.043 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=67900.090..88341.716 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=67871.741..78849.372 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42882.935..58076.273 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11530.825..25651.110 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.878..5628.762 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=449.280..449.280 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.841..100.207 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7012.825..7012.825 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.037..2404.736 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1262.120..1262.120 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.827..484.308 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.030..28.031 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.579..13.961 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.588..5.588 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.684..3.101 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.539..0.539 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.495..0.498 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:06:58.479 CET,,,5184,,6055275a.1440,3,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 03:07:03.039 CET,,,1952,,605558b7.7a0,1,,2021-03-20 03:06:47 CET,8/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 03:08:00.691 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,130,"",2021-03-19 23:47:13 CET,6/201,0,LOG,00000,"duration: 102671.791 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=98461.601..98461.601 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=98457.388..102671.604 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=98404.827..98404.827 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=90166.383..97231.005 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=54946.837..81569.412 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=54946.160..76204.806 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54942.458..69488.008 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11998.352..37331.069 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11973.365..26111.538 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.056..6160.762 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.588..236.589 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.856..106.540 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.478..24.478 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.085..12.890 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6526.118..6526.118 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.579..2449.060 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=3.616..3.617 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.487..2.029 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.642..0.642 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.627..0.629 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2059.220..2059.220 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.129..464.431 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:09:46.613 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,131,"",2021-03-19 23:47:13 CET,6/202,0,LOG,00000,"duration: 105862.252 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=102275.416..102275.416 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=102271.180..105861.690 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=102219.980..102219.980 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=87458.051..100906.533 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=87457.248..96040.474 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=55816.788..78568.394 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55810.510..71006.901 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12223.110..37366.672 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12195.568..26217.305 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.056..6332.665 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=217.182..217.183 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.708..100.131 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.148..27.148 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.882..13.573 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6757.831..6757.832 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.169..2438.165 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.137..6.137 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.011..3.429 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1247.232..1247.232 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.035..482.390 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.582..0.582 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.554..0.555 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:11:30.953 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,132,"",2021-03-19 23:47:13 CET,6/203,0,LOG,00000,"duration: 104274.373 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14666827.34..14666827.35 rows=1 width=8) (actual time=99948.353..99948.353 rows=1 loops=1)
  ->  Gather  (cost=14666827.12..14666827.33 rows=2 width=8) (actual time=99944.694..104274.270 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14665827.12..14665827.13 rows=1 width=8) (actual time=99888.250..99888.251 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14304659.83 rows=144466918 width=0) (actual time=72747.242..98581.636 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=8) (actual time=72742.309..92098.953 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10329917.58 rows=144466918 width=8) (actual time=72719.872..83242.854 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=45254.812..63797.850 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45254.046..57923.849 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24181.082..38336.190 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.053..7539.182 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6563.491..6563.492 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.812..2411.524 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.537..240.538 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.724..100.989 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.712..0.712 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.691..0.693 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2096.502..2096.502 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.317..495.661 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.123..22.124 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.517..11.510 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.522..4.522 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.550..2.548 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:13:15.261 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,133,"",2021-03-19 23:47:13 CET,6/204,0,LOG,00000,"duration: 104251.466 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8956654.74..8956654.75 rows=1 width=8) (actual time=100879.177..100879.177 rows=1 loops=1)
  ->  Gather  (cost=8956654.53..8956654.74 rows=2 width=8) (actual time=100873.539..104251.385 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8955654.53..8955654.54 rows=1 width=8) (actual time=100818.996..100818.996 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8594487.23 rows=144466918 width=0) (actual time=85982.833..99532.544 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3477913.48 rows=24077820 width=8) (actual time=85982.064..94700.093 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=426618.38..2917243.76 rows=24077820 width=16) (actual time=63109.698..77306.634 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=13474.721..46373.974 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=13469.255..38847.126 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=13442.258..27686.933 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.208..7330.046 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.219..233.220 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.882..102.971 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.669..26.669 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..12.594 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.339..5.339 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.784..2.811 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6972.922..6972.923 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.754..2582.074 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1206.857..1206.857 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.772..477.600 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.567..0.567 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.543..0.545 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:15:00.697 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,134,"",2021-03-19 23:47:13 CET,6/205,0,LOG,00000,"duration: 105382.785 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=101813.400..101813.400 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=101808.561..105382.676 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=101755.833..101755.833 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=93573.656..100568.412 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=42335.060..84248.902 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=42334.309..78661.506 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42328.503..71089.668 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42295.518..59127.328 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11749.731..25614.686 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.244..5854.530 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.916..232.917 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.092..101.316 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6465.068..6465.068 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.170..2366.727 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.647..32.647 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.625..15.271 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.732..5.732 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..2.890 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.706..0.706 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.690..0.692 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2053.950..2053.950 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.949..490.751 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:17:24.939 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,135,"",2021-03-19 23:47:13 CET,6/206,0,LOG,00000,"duration: 144167.909 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15769954.82..15769954.83 rows=1 width=8) (actual time=136110.720..136110.720 rows=1 loops=1)
  ->  Gather  (cost=15769954.61..15769954.82 rows=2 width=8) (actual time=136106.491..144167.710 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15768954.61..15768954.62 rows=1 width=8) (actual time=136050.559..136050.560 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15407787.32 rows=144466917 width=0) (actual time=107239.197..134716.750 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=8) (actual time=107233.456..128095.833 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=107207.536..119012.430 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=93459.572..102121.734 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69696.893..84791.734 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.824..4417.278 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.653..2110.335 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.087..1.088 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.063..1.066 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52476.252..52476.252 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.777..8154.901 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.249..1321.249 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.840..493.470 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.211..238.211 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.573..102.067 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.455..25.455 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.858..12.419 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.405..5.405 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.818..2.928 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:18:54.269 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,136,"",2021-03-19 23:47:13 CET,6/207,0,LOG,00000,"duration: 89263.330 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8729980.10..8729980.11 rows=1 width=8) (actual time=85920.779..85920.779 rows=1 loops=1)
  ->  Gather  (cost=8729979.89..8729980.10 rows=2 width=8) (actual time=85916.655..89262.910 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8728979.89..8728979.90 rows=1 width=8) (actual time=85862.133..85862.133 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..8367812.59 rows=144466918 width=0) (actual time=52481.347..84406.887 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=697347.79..3251238.84 rows=24077820 width=8) (actual time=52480.232..79472.563 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=52474.292..73419.834 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52439.577..64074.756 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=31767.696..45513.973 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.683..6905.999 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15255.889..15255.890 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6393.499..11083.915 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.912..2374.813 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.681..1268.694 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.896..478.518 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=736.188..736.188 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.995..103.007 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=34.338..34.338 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.749..16.889 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.816..5.816 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.618..3.080 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.841..0.841 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.803..0.806 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:20:38.725 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,137,"",2021-03-19 23:47:13 CET,6/208,0,LOG,00000,"duration: 104400.197 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=100962.870..100962.870 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=100958.975..104399.538 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=100908.361..100908.362 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=69208.372..99455.302 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=69203.098..93188.032 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=69202.506..88600.342 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=69179.631..79642.623 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42892.446..57910.063 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11953.910..25826.066 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.091..5781.502 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.367..237.367 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.980..103.972 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6784.737..6784.738 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.814..2434.893 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.471..1246.471 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.967..503.373 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.556..22.557 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.551..11.540 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.560..0.560 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.543..0.545 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.975..4.975 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.551..2.748 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:22:26.641 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,138,"",2021-03-19 23:47:13 CET,6/209,0,LOG,00000,"duration: 107855.855 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=103864.707..103864.707 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=103858.739..107854.960 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=103810.665..103810.666 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=81607.672..102497.341 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=81602.102..96328.389 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=81601.450..91613.987 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=56773.215..72040.997 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11646.202..37188.560 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11622.750..25876.776 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.005..5747.116 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.900..244.900 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.719..102.670 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.028..23.028 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.917..12.056 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7311.305..7311.306 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.806..2360.080 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.452..1304.452 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.852..479.309 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.615..0.616 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.600..0.601 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.222..5.222 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.610..2.817 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:24:12.696 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,139,"",2021-03-19 23:47:13 CET,6/210,0,LOG,00000,"duration: 105996.266 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=102713.455..102713.456 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=102708.812..105995.682 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=102659.767..102659.768 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=88884.499..101417.256 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=88883.764..96872.017 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=42983.793..79379.884 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42977.717..71168.014 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42955.065..59488.552 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11331.170..25230.479 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.266..5552.667 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.898..234.899 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.227..99.111 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6525.165..6525.165 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.820..2370.222 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.301..22.301 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.685..11.514 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.976..5.976 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.874..3.185 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1214.595..1214.595 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.869..485.352 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.530..0.530 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.492..0.494 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:25:57.482 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,140,"",2021-03-19 23:47:13 CET,6/211,0,LOG,00000,"duration: 104733.423 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14311461.67..14311461.68 rows=1 width=8) (actual time=100877.145..100877.145 rows=1 loops=1)
  ->  Gather  (cost=14311461.45..14311461.66 rows=2 width=8) (actual time=100873.658..104732.695 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14310461.45..14310461.46 rows=1 width=8) (actual time=100747.772..100747.772 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..13949294.16 rows=144466918 width=0) (actual time=92413.217..99544.087 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11391545.70 rows=144466918 width=8) (actual time=42391.381..83053.413 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=42386.967..75367.929 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=42365.280..64077.647 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42364.535..58700.863 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11619.790..25318.388 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.083..5446.625 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=699.009..699.010 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.852..105.318 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6440.523..6440.523 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.641..2353.555 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.694..0.694 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.676..0.677 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.352..21.352 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.546..10.915 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.292..4.292 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.696..2.429 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2165.730..2165.730 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.106..488.955 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:27:43.964 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,141,"",2021-03-19 23:47:13 CET,6/212,0,LOG,00000,"duration: 106419.152 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9076886.41..9076886.42 rows=1 width=8) (actual time=101675.164..101675.165 rows=1 loops=1)
  ->  Gather  (cost=9076886.20..9076886.41 rows=2 width=8) (actual time=101670.780..106417.793 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9075886.20..9075886.21 rows=1 width=8) (actual time=101615.637..101615.637 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8714718.90 rows=144466918 width=0) (actual time=87751.585..100417.829 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3598145.15 rows=24077820 width=8) (actual time=87750.459..95844.316 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=44380.660..78644.439 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=44375.831..70377.623 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44354.428..59046.555 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23505.713..37440.356 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.377..6804.503 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6360.530..6360.530 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.893..2369.908 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.182..229.183 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.739..97.988 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.104..21.104 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.462..10.896 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.726..4.726 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.735..2.614 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1204.855..1204.855 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.105..463.065 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.816..0.816 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.778..0.781 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:29:15.253 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,142,"",2021-03-19 23:47:13 CET,6/213,0,LOG,00000,"duration: 91224.541 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10380717.99..10380718.00 rows=1 width=8) (actual time=87111.456..87111.457 rows=1 loops=1)
  ->  Gather  (cost=10380717.77..10380717.98 rows=2 width=8) (actual time=87107.706..91223.786 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10379717.77..10379717.78 rows=1 width=8) (actual time=87055.091..87055.092 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..10018550.48 rows=144466918 width=0) (actual time=65573.277..85833.599 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=528756.93..8031821.36 rows=144466918 width=8) (actual time=65568.658..79925.115 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=65567.893..75449.363 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=40841.621..56113.957 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11614.275..24416.584 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.990..5682.261 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=464.678..464.678 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.881..323.026 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.754..103.178 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.829..21.830 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.455..11.404 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6552.171..6552.171 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.721..2404.171 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1276.719..1276.719 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.150..494.981 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.735..0.736 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.719..0.721 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.343..4.343 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.688..2.559 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:31:22.794 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,143,"",2021-03-19 23:47:13 CET,6/214,0,LOG,00000,"duration: 127482.122 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13779071.07..13779071.08 rows=1 width=8) (actual time=121010.016..121010.017 rows=1 loops=1)
  ->  Gather  (cost=13779070.86..13779071.07 rows=2 width=8) (actual time=121001.360..127481.883 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13778070.86..13778070.87 rows=1 width=8) (actual time=120951.179..120951.180 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..13416903.57 rows=144466917 width=0) (actual time=91981.064..119606.155 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=8) (actual time=91973.805..112978.412 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=91936.696..103861.412 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=73495.902..86581.554 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=7789.589..12648.733 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.046..3929.699 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.959..1750.082 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.004..1.005 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.980..0.982 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1300.891..1300.892 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.378..507.941 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51557.975..51557.975 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.849..8081.071 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.134..248.134 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.418..119.024 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=36.627..36.627 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.855..17.278 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.828..6.828 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.549..3.459 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:33:30.732 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,144,"",2021-03-19 23:47:13 CET,6/215,0,LOG,00000,"duration: 127873.734 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13779071.07..13779071.08 rows=1 width=8) (actual time=123205.380..123205.380 rows=1 loops=1)
  ->  Gather  (cost=13779070.86..13779071.07 rows=2 width=8) (actual time=123198.529..127873.034 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13778070.86..13778070.87 rows=1 width=8) (actual time=123145.144..123145.144 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..13416903.57 rows=144466917 width=0) (actual time=94651.311..121814.589 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=8) (actual time=94646.373..115318.386 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=94621.784..106363.855 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=75866.355..89287.680 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=7965.301..12633.109 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.581..3951.579 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.511..1760.816 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.016..1.016 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.993..0.996 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1351.159..1351.160 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.837..486.734 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53098.784..53098.784 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.646..8133.827 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=278.713..278.713 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.156..120.601 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.277..24.277 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.778..12.262 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.593..4.593 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.820..2.689 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:35:15.355 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,145,"",2021-03-19 23:47:13 CET,6/216,0,LOG,00000,"duration: 104558.326 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14666827.34..14666827.35 rows=1 width=8) (actual time=101129.840..101129.840 rows=1 loops=1)
  ->  Gather  (cost=14666827.12..14666827.33 rows=2 width=8) (actual time=101126.132..104558.215 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14665827.12..14665827.13 rows=1 width=8) (actual time=101076.662..101076.663 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14304659.83 rows=144466918 width=0) (actual time=75246.529..99813.139 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=8) (actual time=75240.093..93668.618 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10329917.58 rows=144466918 width=8) (actual time=75205.993..85207.267 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=44288.499..63660.895 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44287.778..57602.158 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23554.325..37441.076 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.698..6915.680 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6556.467..6556.468 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.627..2396.097 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=224.455..224.455 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.693..95.498 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.677..0.678 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.662..0.664 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3853.068..3853.068 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.082..462.547 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.699..33.699 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.727..16.328 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.072..6.072 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.604..3.243 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:36:45.753 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,146,"",2021-03-19 23:47:13 CET,6/217,0,LOG,00000,"duration: 90343.388 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8725367.89..8725367.90 rows=1 width=8) (actual time=86778.347..86778.348 rows=1 loops=1)
  ->  Gather  (cost=8725367.68..8725367.89 rows=2 width=8) (actual time=86774.827..90342.824 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8724367.68..8724367.69 rows=1 width=8) (actual time=86719.098..86719.098 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8363200.38 rows=144466918 width=0) (actual time=66437.675..85552.227 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529028.93..3246626.63 rows=24077820 width=8) (actual time=66436.891..80973.442 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=66432.258..75646.624 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=41890.339..56859.625 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12098.092..24600.853 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.128..5750.812 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=516.406..516.407 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=21.663..363.183 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.726..107.833 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.630..20.631 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.466..10.565 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6199.761..6199.761 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.937..2330.704 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1229.372..1229.372 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.155..504.508 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.513..4.517 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.650..2.602 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.546..0.546 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.509..0.512 rows=4 loops=3)",,,,,,,,,""
2021-03-20 03:38:29.993 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,147,"",2021-03-19 23:47:13 CET,6/218,0,LOG,00000,"duration: 104189.301 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12434612.61..12434612.62 rows=1 width=8) (actual time=100929.800..100929.800 rows=1 loops=1)
  ->  Gather  (cost=12434612.39..12434612.60 rows=2 width=8) (actual time=100925.896..104189.069 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12433612.39..12433612.40 rows=1 width=8) (actual time=100872.247..100872.247 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12072445.10 rows=144466918 width=0) (actual time=68933.707..99369.199 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=8) (actual time=68928.789..93086.162 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=68905.161..84304.921 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68904.442..79845.279 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45591.369..59441.554 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24989.148..38805.998 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.831..6985.144 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6508.060..6508.061 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.784..2375.557 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.030..229.030 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.942..101.349 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1172.323..1172.324 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..473.574 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.678..0.679 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.663..0.665 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.297..23.297 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.521..11.994 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.593..4.593 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.551..2.593 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:40:14.722 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,148,"",2021-03-19 23:47:13 CET,6/219,0,LOG,00000,"duration: 104669.657 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12361408.94..12361408.95 rows=1 width=8) (actual time=100878.517..100878.517 rows=1 loops=1)
  ->  Gather  (cost=12361408.72..12361408.93 rows=2 width=8) (actual time=100874.744..104669.085 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12360408.72..12360408.73 rows=1 width=8) (actual time=100819.927..100819.927 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..11999241.43 rows=144466918 width=0) (actual time=69828.871..99360.475 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10012512.31 rows=144466918 width=8) (actual time=69822.654..93224.107 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8024499.18 rows=144466918 width=8) (actual time=69791.264..84748.576 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=69790.555..80404.426 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43803.801..58996.137 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11510.304..25493.412 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.815..5641.198 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=322.297..322.300 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.989..105.464 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6839.044..6839.045 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.784..2518.338 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2365.132..2365.132 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.877..508.345 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.660..0.660 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.636..0.638 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.003..31.003 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.654..15.579 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.841..5.842 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..3.082 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:41:55.789 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,149,"",2021-03-19 23:47:13 CET,6/220,0,LOG,00000,"duration: 100997.513 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14499114.79..14499114.80 rows=1 width=8) (actual time=97388.593..97388.593 rows=1 loops=1)
  ->  Gather  (cost=14499114.57..14499114.78 rows=2 width=8) (actual time=97382.531..100997.308 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14498114.57..14498114.58 rows=1 width=8) (actual time=97330.621..97330.621 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14136947.28 rows=144466917 width=0) (actual time=70626.013..96061.225 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=8) (actual time=70621.455..89850.507 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=70590.829..81364.447 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=50645.794..65569.586 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50644.870..60660.922 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24605.881..39965.307 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.781..7113.964 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7065.832..7065.839 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.766..2615.710 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.622..1283.622 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.885..484.166 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.877..0.877 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.866..0.867 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.372..236.372 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.205..109.962 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=30.314..30.314 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.573..11.955 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.263..4.263 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.590..2.444 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:43:42.568 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,150,"",2021-03-19 23:47:13 CET,6/221,0,LOG,00000,"duration: 106711.717 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=103276.230..103276.230 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=103271.528..106711.192 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=103219.813..103219.813 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=82575.896..101992.318 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=82570.056..96247.819 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=82569.371..91886.818 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=44205.647..72601.084 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=44180.540..60571.749 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12121.418..25919.360 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.097..5979.448 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.300..250.303 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.834..112.744 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7111.059..7111.059 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.013..2442.139 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.743..24.743 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.941..12.631 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1197.548..1197.548 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.006..477.681 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.654..0.654 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.638 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.536..5.536 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.704..3.028 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:45:13.139 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,151,"",2021-03-19 23:47:13 CET,6/222,0,LOG,00000,"duration: 90502.560 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=87228.725..87228.725 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=87220.455..90501.745 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=87130.317..87130.317 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=53151.829..85652.938 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=53146.469..79146.440 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=53145.845..74535.259 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=53122.501..65024.418 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33703.621..46987.220 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.814..7084.489 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16402.506..16402.506 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7437.111..12078.314 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.811..2336.227 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1451.528..1451.529 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.849..524.917 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.299..249.300 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.021..116.133 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.004..23.004 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.550..11.837 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.578..0.578 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.560..0.561 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.051..5.051 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..2.833 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:47:35.488 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,152,"",2021-03-19 23:47:13 CET,6/223,0,LOG,00000,"duration: 142283.187 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15769954.82..15769954.83 rows=1 width=8) (actual time=134322.627..134322.627 rows=1 loops=1)
  ->  Gather  (cost=15769954.61..15769954.82 rows=2 width=8) (actual time=134318.528..142282.720 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15768954.61..15768954.62 rows=1 width=8) (actual time=134267.430..134267.430 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15407787.32 rows=144466917 width=0) (actual time=105984.166..132949.058 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..13421058.21 rows=144466917 width=8) (actual time=105978.478..126483.631 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..11433045.10 rows=144466917 width=8) (actual time=105954.131..117612.601 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..9072968.13 rows=150000000 width=8) (actual time=92436.100..100953.650 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68676.666..83848.029 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.342..4394.468 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.126..2055.504 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.144..1.145 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.117..1.119 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51896.570..51896.570 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.650..7930.229 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1422.701..1422.702 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.715..573.259 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.080..245.080 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.296..113.330 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.040..24.040 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.461..12.072 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.381..5.381 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.464..2.861 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:49:20.438 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,153,"",2021-03-19 23:47:13 CET,6/224,0,LOG,00000,"duration: 104894.196 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=100850.347..100850.348 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=100846.461..104893.791 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=100792.869..100792.869 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=91830.887..99510.434 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=42304.373..83171.228 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=42299.819..75731.720 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42299.109..70334.805 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42275.387..58721.092 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11592.392..25405.773 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.701..5742.083 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.412..246.413 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.195..111.163 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6638.790..6638.790 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.935..2378.738 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.436..23.436 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.620..12.207 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.688..0.688 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.674..0.676 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.463..4.464 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.907..2.630 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1519.519..1519.519 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.042..596.508 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:51:03.712 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,154,"",2021-03-19 23:47:13 CET,6/225,0,LOG,00000,"duration: 103224.448 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=99512.868..99512.868 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=99506.755..103222.284 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=99455.804..99455.804 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=66476.608..97939.347 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=66470.367..91395.906 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=66469.771..86629.240 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=66443.132..77286.209 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42122.938..57176.885 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11598.297..25311.328 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.009..5728.058 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.494..230.495 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..104.330 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6845.377..6845.377 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.823..2482.717 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1228.712..1228.712 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.835..511.130 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.257..26.257 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.575..13.572 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.574..0.574 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.553..0.555 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.687..5.687 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.541..3.119 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:52:31.731 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,155,"",2021-03-19 23:47:13 CET,6/226,0,LOG,00000,"duration: 87954.533 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12040680.30..12040680.31 rows=1 width=8) (actual time=84924.385..84924.385 rows=1 loops=1)
  ->  Gather  (cost=12040680.08..12040680.29 rows=2 width=8) (actual time=84917.837..87954.071 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12039680.08..12039680.09 rows=1 width=8) (actual time=84860.875..84860.876 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..11678512.79 rows=144466918 width=0) (actual time=52255.970..83395.749 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=8) (actual time=52251.035..77146.634 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=52226.040..68559.407 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52225.151..63930.122 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32731.806..46250.846 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.219..6922.476 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16232.669..16232.669 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7337.399..11946.233 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.919..2537.764 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1303.467..1303.468 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.765..500.186 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.155..233.155 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.933..104.384 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.840..0.840 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.813..0.815 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.582..24.582 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.593..12.231 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.612..4.612 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.575..2.544 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:54:35.604 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,156,"",2021-03-19 23:47:13 CET,6/227,0,LOG,00000,"duration: 123835.906 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13006499.86..13006499.87 rows=1 width=8) (actual time=119116.117..119116.118 rows=1 loops=1)
  ->  Gather  (cost=13006499.65..13006499.86 rows=2 width=8) (actual time=119110.367..123834.542 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13005499.65..13005499.66 rows=1 width=8) (actual time=119059.025..119059.025 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..12644332.36 rows=144466917 width=0) (actual time=93014.518..117845.041 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=8) (actual time=93009.829..111877.951 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=92985.033..103688.462 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=74694.339..87484.689 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=5984.481..12663.019 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=5982.818..10793.784 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.363..2272.163 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.110..1246.111 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.629..496.911 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.585..1.586 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.573..1.575 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52327.931..52327.931 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.706..8109.991 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.827..221.827 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.963..101.166 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.500..24.500 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.534..12.283 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.417..4.417 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.500..2.375 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 03:57:06.572 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,157,"",2021-03-19 23:47:13 CET,6/228,0,LOG,00000,"duration: 150909.954 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=142432.034..142432.034 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=142427.510..150909.792 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=142371.585..142371.585 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=133204.389..141122.715 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=90516.670..121688.728 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=90510.667..114499.233 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=90487.452..104051.061 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68915.300..84251.917 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.987..4439.298 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.762..2104.953 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.161..1.161 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.141..1.143 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51172.793..51172.793 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.605..8104.324 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.956..221.956 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.615..96.010 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.841..22.841 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.473..11.508 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.895..5.895 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.804..3.162 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4689.657..4689.657 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.842..467.356 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 03:58:36.972 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,158,"",2021-03-19 23:47:13 CET,6/229,0,LOG,00000,"duration: 90328.801 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10628392.62..10628392.63 rows=1 width=8) (actual time=86895.887..86895.888 rows=1 loops=1)
  ->  Gather  (cost=10628392.41..10628392.62 rows=2 width=8) (actual time=86891.481..90328.680 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10627392.41..10627392.42 rows=1 width=8) (actual time=86835.923..86835.924 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10266225.11 rows=144466918 width=0) (actual time=77612.460..85519.944 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7708476.66 rows=144466918 width=8) (actual time=50139.813..69463.780 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=50138.772..63887.030 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12539.349..32679.306 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12533.942..25687.429 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.031..5918.629 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=417.934..417.934 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.867..285.654 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.891..89.730 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.590..22.591 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.543..11.585 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.265..5.265 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.913..2.976 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7195.337..7195.337 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.612..2639.452 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.984..0.985 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.964..0.966 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1390.485..1390.485 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.967..518.971 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:00:06.808 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,159,"",2021-03-19 23:47:13 CET,6/230,0,LOG,00000,"duration: 89776.712 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10628392.62..10628392.63 rows=1 width=8) (actual time=86503.687..86503.687 rows=1 loops=1)
  ->  Gather  (cost=10628392.41..10628392.62 rows=2 width=8) (actual time=86499.784..89776.587 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10627392.41..10627392.42 rows=1 width=8) (actual time=86448.149..86448.150 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10266225.11 rows=144466918 width=0) (actual time=77141.818..85122.825 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7708476.66 rows=144466918 width=8) (actual time=50008.049..69088.663 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=50007.299..63583.443 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12488.521..32055.059 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12484.125..25228.690 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.239..6023.332 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=692.416..692.416 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.035..303.051 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.873..91.727 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.813..21.814 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..11.368 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.278..4.278 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.675..2.446 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6893.138..6893.138 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.701..2533.911 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.703..0.704 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.683..0.685 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1719.613..1719.613 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.002..512.458 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:01:38.755 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,160,"",2021-03-19 23:47:13 CET,6/231,0,LOG,00000,"duration: 91890.611 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12612932.72..12612932.73 rows=1 width=8) (actual time=88081.918..88081.918 rows=1 loops=1)
  ->  Gather  (cost=12612932.50..12612932.71 rows=2 width=8) (actual time=88077.831..91890.482 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12611932.50..12611932.51 rows=1 width=8) (actual time=88020.966..88020.966 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..12250765.21 rows=144466918 width=0) (actual time=72943.636..86827.927 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=528756.93..10264036.09 rows=144466918 width=8) (actual time=72938.955..81346.389 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432075.55..7424125.63 rows=144466918 width=16) (actual time=43043.448..63773.473 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=43042.317..57767.241 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11714.375..24982.608 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.032..5735.213 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=417.725..417.726 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.009..290.235 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.825..93.518 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.841..20.842 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.491..10.920 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7822.695..7822.696 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.045..3043.729 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.081..1.082 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.062..1.064 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1278.534..1278.534 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.833..505.061 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.323..4.323 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.538..2.402 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:03:25.592 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,161,"",2021-03-19 23:47:13 CET,6/232,0,LOG,00000,"duration: 106796.049 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9094345.73..9094345.74 rows=1 width=8) (actual time=102939.134..102939.134 rows=1 loops=1)
  ->  Gather  (cost=9094345.52..9094345.73 rows=2 width=8) (actual time=102933.698..106795.527 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9093345.52..9093345.53 rows=1 width=8) (actual time=102886.279..102886.279 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8732178.22 rows=144466918 width=0) (actual time=68703.168..101396.629 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3615604.47 rows=24077820 width=8) (actual time=68702.355..96340.573 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=68697.784..90127.605 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=68672.925..80595.551 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=51952.653..62632.464 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25733.983..41899.696 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..7388.483 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7399.452..7399.452 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.682..2808.261 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.679..1248.679 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.859..485.304 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.700..232.700 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.929..104.673 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.523..24.523 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.516..12.322 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.482..4.482 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.489..2.477 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.563..0.563 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.539..0.541 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:04:31.260 CET,,,5184,,6055275a.1440,4,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 04:05:08.732 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,162,"",2021-03-19 23:47:13 CET,6/233,0,LOG,00000,"duration: 103086.932 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=99214.012..99214.012 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=99210.144..103086.847 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=99155.861..99155.861 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=90799.648..97948.928 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=43111.533..82698.964 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=43105.328..75553.623 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43104.474..70289.116 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43079.518..59081.372 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11991.939..25637.222 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.039..5891.245 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=296.091..296.092 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.091..115.586 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7375.249..7375.250 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.799..2545.625 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.595..24.595 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.619..12.509 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.825..0.826 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.812..0.814 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.088..6.088 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.774..3.192 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1245.713..1245.713 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.044..492.899 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:06:56.035 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,163,"",2021-03-19 23:47:13 CET,6/234,0,LOG,00000,"duration: 107252.635 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=17005036.19..17005036.20 rows=1 width=8) (actual time=103643.652..103643.652 rows=1 loops=1)
  ->  Gather  (cost=17005035.98..17005036.19 rows=2 width=8) (actual time=103638.609..107251.917 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=17004035.98..17004035.99 rows=1 width=8) (actual time=103586.171..103586.172 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..16642868.69 rows=144466917 width=0) (actual time=86659.028..102256.170 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..14656139.58 rows=144466917 width=8) (actual time=86653.867..96180.760 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..11816229.13 rows=144466917 width=16) (actual time=53188.269..77745.018 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=53160.113..66617.603 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=26042.752..46861.010 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=26041.759..40933.260 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.229..7299.959 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8130.926..8130.926 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.801..2792.437 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.854..0.855 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.845..0.847 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=284.741..284.744 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.727..123.415 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.783..27.783 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.795..13.623 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.700..1323.700 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.913..529.886 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.800..4.800 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..2.558 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:08:25.983 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,164,"",2021-03-19 23:47:13 CET,6/235,0,LOG,00000,"duration: 89889.473 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12330770.72..12330770.73 rows=1 width=8) (actual time=85249.671..85249.671 rows=1 loops=1)
  ->  Gather  (cost=12330770.50..12330770.71 rows=2 width=8) (actual time=85245.622..89889.060 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12329770.50..12329770.51 rows=1 width=8) (actual time=85195.082..85195.082 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..11968603.21 rows=144466918 width=0) (actual time=76535.224..83945.878 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..9410854.75 rows=144466918 width=8) (actual time=43219.015..68945.261 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=432075.55..7424125.63 rows=144466918 width=16) (actual time=43212.967..62208.240 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=43212.335..57242.584 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11894.193..24638.401 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.171..5709.966 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=686.667..686.667 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=38.015..330.640 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.101..99.583 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=36.441..36.441 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.703..17.159 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7864.196..7864.196 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.680..2575.648 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.596..0.597 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.585..0.586 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.931..5.931 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.946..3.235 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1216.694..1216.694 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.910..457.350 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:10:06.532 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,165,"",2021-03-19 23:47:13 CET,6/236,0,LOG,00000,"duration: 100499.593 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10380717.99..10380718.00 rows=1 width=8) (actual time=96360.733..96360.733 rows=1 loops=1)
  ->  Gather  (cost=10380717.77..10380717.98 rows=2 width=8) (actual time=96356.742..100499.178 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10379717.77..10379717.78 rows=1 width=8) (actual time=96302.658..96302.658 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..10018550.48 rows=144466918 width=0) (actual time=74164.725..95026.199 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=528756.93..8031821.36 rows=144466918 width=8) (actual time=74159.551..88873.615 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=74158.801..84215.058 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=46175.249..62973.277 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12932.383..27745.637 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.039..6234.332 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=472.176..472.177 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=34.138..334.488 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.058..100.300 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.572..32.572 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.740..15.882 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6555.860..6555.860 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.606..2421.801 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1179.151..1179.152 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.004..480.651 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.728..0.728 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.712..0.713 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.849..4.849 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.741..2.749 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:11:53.464 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,166,"",2021-03-19 23:47:13 CET,6/237,0,LOG,00000,"duration: 106888.307 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9076886.41..9076886.42 rows=1 width=8) (actual time=102854.788..102854.788 rows=1 loops=1)
  ->  Gather  (cost=9076886.20..9076886.41 rows=2 width=8) (actual time=102849.714..106887.407 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9075886.20..9075886.21 rows=1 width=8) (actual time=102799.874..102799.874 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8714718.90 rows=144466918 width=0) (actual time=88965.824..101592.091 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3598145.15 rows=24077820 width=8) (actual time=88964.890..97018.930 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=45347.176..79816.809 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=45342.608..71544.020 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45320.527..60091.539 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24475.298..38409.901 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.925..7053.077 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6931.365..6931.366 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.992..2566.256 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.336..244.337 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.694..106.272 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.807..21.807 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.499..11.139 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.449..4.449 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.811..2.588 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1253.685..1253.685 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.894..479.337 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.570..0.570 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.541..0.543 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:13:34.015 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,167,"",2021-03-19 23:47:13 CET,6/238,0,LOG,00000,"duration: 100493.999 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14499114.79..14499114.80 rows=1 width=8) (actual time=96791.669..96791.669 rows=1 loops=1)
  ->  Gather  (cost=14499114.57..14499114.78 rows=2 width=8) (actual time=96786.492..100493.910 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14498114.57..14498114.58 rows=1 width=8) (actual time=96733.721..96733.721 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14136947.28 rows=144466917 width=0) (actual time=69431.205..95453.070 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=8) (actual time=69426.078..89107.829 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=69400.114..80390.389 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=49526.201..64438.238 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=49525.138..59535.313 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24619.482..39905.617 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.802..7246.700 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7036.249..7036.249 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.843..2563.109 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1265.783..1265.783 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.989..483.974 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.030..1.030 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.021..1.023 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.132..227.132 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.347..99.717 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.675..25.675 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.742..12.769 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.808..4.808 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.541..2.656 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:15:06.746 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,168,"",2021-03-19 23:47:13 CET,6/239,0,LOG,00000,"duration: 92678.338 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=89338.349..89338.350 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=89334.476..92678.211 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=89243.232..89243.233 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=80688.960..88033.186 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=44919.242..72471.585 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=44918.223..66972.026 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=44913.451..60006.762 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12118.465..25543.791 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.115..5946.389 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=445.884..445.885 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=34.245..310.591 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.809..90.993 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.061..33.061 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.569..15.810 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7889.641..7889.641 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.662..2561.258 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.684..4.684 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.659..2.604 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.975..0.975 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.956..0.958 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1267.591..1267.591 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.846..516.044 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:16:51.269 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,169,"",2021-03-19 23:47:13 CET,6/240,0,LOG,00000,"duration: 104474.019 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=100729.472..100729.473 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=100725.437..104473.435 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=100665.019..100665.020 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=86027.486..99357.348 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=86026.559..94498.862 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=54107.163..76569.754 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54102.822..69063.805 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11451.364..36944.931 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11429.745..25618.586 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.030..5691.885 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.677..227.678 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.898..101.473 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.302..21.303 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.893..11.188 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6987.616..6987.617 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.755..2594.124 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.246..4.246 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.770..2.434 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2096.389..2096.389 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.064..515.016 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.611..0.611 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.577..0.580 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:18:34.612 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,170,"",2021-03-19 23:47:13 CET,6/241,0,LOG,00000,"duration: 103291.944 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11073965.14..11073965.15 rows=1 width=8) (actual time=99997.992..99997.992 rows=1 loops=1)
  ->  Gather  (cost=11073964.93..11073965.14 rows=2 width=8) (actual time=99993.020..103291.832 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11072964.93..11072964.94 rows=1 width=8) (actual time=99943.380..99943.381 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10711797.63 rows=144466918 width=0) (actual time=91233.477..98735.674 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8154049.18 rows=144466918 width=8) (actual time=45328.804..83155.959 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=45328.019..77889.997 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=45321.957..70548.802 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45293.007..59433.567 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24392.150..38364.981 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.239..6893.539 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7007.933..7007.934 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.943..2550.363 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=224.252..224.253 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.643..100.498 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.534..28.534 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.600..13.971 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.994..5.994 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.526..2.981 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.723..0.724 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.705..0.707 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1168.206..1168.206 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..468.424 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:20:22.926 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,171,"",2021-03-19 23:47:13 CET,6/242,0,LOG,00000,"duration: 108269.162 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13011477.24..13011477.25 rows=1 width=8) (actual time=104172.131..104172.131 rows=1 loops=1)
  ->  Gather  (cost=13011477.03..13011477.24 rows=2 width=8) (actual time=104168.294..108268.967 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13010477.03..13010477.04 rows=1 width=8) (actual time=104116.951..104116.951 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12649309.73 rows=144466918 width=0) (actual time=86869.806..102770.953 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10662580.61 rows=144466918 width=8) (actual time=86864.439..96449.961 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=16) (actual time=44918.343..76952.866 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=44917.497..70649.821 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44897.015..59381.905 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23303.787..37838.379 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.996..7090.352 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6293.274..6293.275 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.860..2335.645 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=217.653..217.654 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.672..95.377 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.143..20.143 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.599..10.569 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.785..0.785 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.771..0.773 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2190.564..2190.564 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.080..473.405 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.051..5.051 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.641..2.761 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:22:04.264 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,172,"",2021-03-19 23:47:13 CET,6/243,0,LOG,00000,"duration: 101278.875 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12405045.93..12405045.94 rows=1 width=8) (actual time=97835.036..97835.036 rows=1 loops=1)
  ->  Gather  (cost=12405045.71..12405045.92 rows=2 width=8) (actual time=97829.062..101278.745 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12404045.71..12404045.72 rows=1 width=8) (actual time=97778.490..97778.490 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12042878.42 rows=144466918 width=0) (actual time=65824.989..96334.612 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10056149.30 rows=144466918 width=8) (actual time=65820.047..90295.023 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8068136.17 rows=144466918 width=8) (actual time=65797.151..81791.952 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=65796.432..77302.095 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=50056.237..60105.766 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24163.021..40025.745 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.965..7044.307 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6977.362..6977.363 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.625..2530.118 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1260.850..1260.850 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.690..490.521 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.038..221.038 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.759..100.452 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.690..0.690 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.672..0.673 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.563..22.563 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.527..11.603 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.659..4.659 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.592..2.590 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:23:36.235 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,173,"",2021-03-19 23:47:13 CET,6/244,0,LOG,00000,"duration: 91910.195 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=88861.533..88861.533 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=88854.110..91909.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=88800.161..88800.161 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=52887.882..87229.238 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=52882.736..80393.737 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=52881.890..75483.417 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52856.192..65476.563 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33283.462..46841.384 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.058..7155.909 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=16279.307..16279.308 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7282.671..11948.984 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.715..2401.513 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1164.994..1164.995 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.103..446.547 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.719..239.719 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.124..104.699 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.420..25.420 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.773..12.458 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.823..0.823 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.806..0.807 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.881..4.881 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.775..2.768 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:25:21.682 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,174,"",2021-03-19 23:47:13 CET,6/245,0,LOG,00000,"duration: 105401.447 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12729315.24..12729315.25 rows=1 width=8) (actual time=101927.914..101927.914 rows=1 loops=1)
  ->  Gather  (cost=12729315.03..12729315.24 rows=2 width=8) (actual time=101924.782..105401.329 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12728315.03..12728315.04 rows=1 width=8) (actual time=101868.659..101868.659 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12367147.73 rows=144466918 width=0) (actual time=92357.013..100545.254 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9809399.28 rows=144466918 width=8) (actual time=46702.344..84054.252 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=16) (actual time=46698.411..76943.613 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=46697.948..71653.541 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46676.413..60661.179 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25719.567..39839.735 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.020..7163.881 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8029.021..8029.021 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.820..2602.205 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=203.379..203.379 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.694..92.436 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.253..21.253 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.485..10.910 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.440..0.440 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.430..0.431 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=3.835..3.835 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.575..2.159 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1193.345..1193.345 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.778..477.816 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:26:54.847 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,175,"",2021-03-19 23:47:13 CET,6/246,0,LOG,00000,"duration: 93112.470 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8725367.89..8725367.90 rows=1 width=8) (actual time=89654.803..89654.803 rows=1 loops=1)
  ->  Gather  (cost=8725367.68..8725367.89 rows=2 width=8) (actual time=89650.119..93111.841 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8724367.68..8724367.69 rows=1 width=8) (actual time=89596.440..89596.443 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8363200.38 rows=144466918 width=0) (actual time=68488.076..88388.426 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529028.93..3246626.63 rows=24077820 width=8) (actual time=68487.102..83641.569 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=68482.524..78107.373 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=42628.999..57835.194 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11740.365..24555.350 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.169..5770.204 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=526.262..526.262 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.455..363.788 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.855..110.225 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.277..23.278 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.499..11.414 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7573.282..7573.283 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.793..2484.000 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.470..1304.471 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.959..523.097 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.484..4.484 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.687..2.540 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.729..0.729 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.705..0.707 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:28:39.600 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,176,"",2021-03-19 23:47:13 CET,6/247,0,LOG,00000,"duration: 104702.739 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14593623.67..14593623.68 rows=1 width=8) (actual time=101157.904..101157.904 rows=1 loops=1)
  ->  Gather  (cost=14593623.45..14593623.66 rows=2 width=8) (actual time=101154.202..104702.299 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14592623.45..14592623.46 rows=1 width=8) (actual time=101065.478..101065.479 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14231456.16 rows=144466918 width=0) (actual time=85603.432..99836.080 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..12244727.04 rows=144466918 width=8) (actual time=85597.595..94256.978 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=43038.413..75841.853 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=43015.645..64104.588 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43014.943..58968.416 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12323.787..26010.270 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.905..6154.851 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.865..250.866 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.976..112.137 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6629.849..6629.849 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.532..2428.210 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.669..0.669 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.658..0.660 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.207..22.207 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.779..11.626 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2213.320..2213.320 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.890..496.034 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.433..5.433 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.573..2.806 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:30:24.629 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,177,"",2021-03-19 23:47:13 CET,6/248,0,LOG,00000,"duration: 104968.310 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=100525.366..100525.366 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=100521.455..104967.460 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=100473.676..100473.677 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=91647.973..99216.864 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=56414.330..83681.204 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=56410.031..76598.828 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=56409.547..71356.874 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12746.757..37895.284 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12724.802..26752.028 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.104..6763.020 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=285.692..285.692 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.792..106.427 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.580..21.580 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.951..11.417 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7746.117..7746.117 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.661..2561.305 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.460..0.461 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.450..0.451 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.199..4.199 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.668..2.363 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1257.314..1257.314 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.954..500.526 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:32:09.776 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,178,"",2021-03-19 23:47:13 CET,6/249,0,LOG,00000,"duration: 105085.351 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11073965.14..11073965.15 rows=1 width=8) (actual time=101681.423..101681.423 rows=1 loops=1)
  ->  Gather  (cost=11073964.93..11073965.14 rows=2 width=8) (actual time=101678.323..105084.360 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11072964.93..11072964.94 rows=1 width=8) (actual time=101619.832..101619.832 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10711797.63 rows=144466918 width=0) (actual time=92987.401..100434.950 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8154049.18 rows=144466918 width=8) (actual time=47345.678..85004.345 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=47344.746..79771.152 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=47340.392..72509.235 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=47315.620..61400.679 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25298.096..39939.567 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.991..7864.262 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6507.214..6507.214 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.788..2407.524 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=214.432..214.432 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.885..90.409 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.482..24.482 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.629..11.695 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.268..4.268 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.487..2.270 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.869..0.869 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.856..0.858 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1130.240..1130.240 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.004..449.592 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:33:33.180 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,179,"",2021-03-19 23:47:13 CET,6/250,0,LOG,00000,"duration: 83349.552 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8305159.04..8305159.05 rows=1 width=8) (actual time=79658.446..79658.446 rows=1 loops=1)
  ->  Gather  (cost=8305158.82..8305159.03 rows=2 width=8) (actual time=79654.496..83349.044 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8304158.82..8304158.83 rows=1 width=8) (actual time=79598.416..79598.416 rows=1 loops=3)
              ->  Hash Join  (cost=534388.10..7942991.53 rows=144466918 width=0) (actual time=65826.564..78383.534 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=534351.10..2826417.78 rows=24077820 width=8) (actual time=65825.618..73823.646 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=42545.990..57070.522 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=13408.204..25024.760 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.065..7174.678 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=563.690..563.690 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=39.325..441.476 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=33.265..315.763 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.526..97.695 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.409..32.410 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.506..15.390 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.939..5.940 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.849..3.197 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7494.923..7494.923 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.762..2389.908 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1240.979..1240.979 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.867..497.492 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.642..0.642 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.609..0.611 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:35:00.617 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,180,"",2021-03-19 23:47:13 CET,6/251,0,LOG,00000,"duration: 87372.288 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14134749.16..14134749.17 rows=1 width=8) (actual time=84173.636..84173.636 rows=1 loops=1)
  ->  Gather  (cost=14134748.94..14134749.15 rows=2 width=8) (actual time=84167.281..87371.713 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14133748.94..14133748.95 rows=1 width=8) (actual time=84083.246..84083.246 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..13772581.65 rows=144466917 width=0) (actual time=58230.253..82870.392 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..11785852.54 rows=144466917 width=8) (actual time=58225.121..76836.590 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=695482.79..9797839.43 rows=144466917 width=8) (actual time=58198.590..68628.888 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=673762.79..7437762.46 rows=150000000 width=8) (actual time=33654.056..52769.718 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33653.342..47442.335 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.147..7449.436 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15758.265..15758.265 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6449.606..11371.757 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.795..2404.572 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.243..1236.243 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.647..482.920 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.672..0.672 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.656..0.658 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.350..235.350 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.080..108.726 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.243..26.243 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.586..13.094 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.838..4.838 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..2.634 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:36:46.454 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,181,"",2021-03-19 23:47:13 CET,6/252,0,LOG,00000,"duration: 105785.438 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=101920.629..101920.629 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=101910.968..105784.865 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=101856.894..101856.894 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=69198.595..100394.436 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=69197.720..95469.734 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=69192.684..89435.615 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=69169.914..80147.026 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=44041.036..59547.228 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11643.535..25430.947 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.301..5794.865 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.260..229.261 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.765..99.868 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=8030.835..8030.835 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.639..2655.483 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.754..1279.754 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.950..518.966 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.470..22.470 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.627..11.531 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.942..4.942 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.727 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.651..0.651 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.626..0.628 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:37:46.882 CET,,,5184,,6055275a.1440,5,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 04:38:33.633 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,182,"",2021-03-19 23:47:13 CET,6/253,0,LOG,00000,"duration: 107115.397 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=104014.054..104014.054 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=104009.250..107115.265 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=103954.223..103954.223 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=70192.433..102418.851 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=70191.651..97268.659 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=70186.798..90919.256 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=70161.625..81339.871 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43893.104..60164.234 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12089.825..26364.357 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.242..6041.879 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=292.857..292.864 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.874..110.787 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7318.470..7318.470 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.991..2467.023 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.370..1309.371 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.197..498.648 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.814..24.814 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.591..12.377 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.758..4.758 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.514..2.576 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.525..0.525 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.499..0.501 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:40:14.721 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,183,"",2021-03-19 23:47:13 CET,6/254,0,LOG,00000,"duration: 101043.282 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16722874.19..16722874.20 rows=1 width=8) (actual time=97015.979..97015.979 rows=1 loops=1)
  ->  Gather  (cost=16722873.98..16722874.19 rows=2 width=8) (actual time=97011.727..101043.183 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16721873.98..16721873.99 rows=1 width=8) (actual time=96962.695..96962.695 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..16360706.69 rows=144466917 width=0) (actual time=88289.869..95773.469 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..13802958.24 rows=144466917 width=8) (actual time=48784.509..79312.247 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..11816229.13 rows=144466917 width=16) (actual time=48779.899..72180.577 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=48757.962..61754.010 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=23112.204..42842.975 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23111.308..37211.643 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.171..6969.447 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6393.648..6393.649 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.848..2373.534 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.837..0.837 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.824..0.826 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=200.399..200.400 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.593..89.370 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.641..21.642 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.566..10.859 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.516..4.516 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.690..2.428 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2162.588..2162.588 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.792..492.042 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:42:02.513 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,184,"",2021-03-19 23:47:13 CET,6/255,0,LOG,00000,"duration: 107744.837 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9076886.41..9076886.42 rows=1 width=8) (actual time=103855.919..103855.919 rows=1 loops=1)
  ->  Gather  (cost=9076886.20..9076886.41 rows=2 width=8) (actual time=103852.313..107744.672 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9075886.20..9075886.21 rows=1 width=8) (actual time=103800.706..103800.706 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8714718.90 rows=144466918 width=0) (actual time=89075.841..102546.340 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3598145.15 rows=24077820 width=8) (actual time=89075.041..97757.676 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=46577.612..80249.128 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=46572.948..72229.255 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46551.863..61024.449 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24470.775..39200.881 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.314..7232.162 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6524.690..6524.691 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.003..2457.565 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=224.236..224.236 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.648..95.874 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.773..20.773 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.548..10.887 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.562..4.563 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.808..2.674 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1206.068..1206.068 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.842..493.755 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.575..0.575 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.549..0.551 rows=4 loops=3)",,,,,,,,,""
2021-03-20 04:43:48.959 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,185,"",2021-03-19 23:47:13 CET,6/256,0,LOG,00000,"duration: 106388.898 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12729315.24..12729315.25 rows=1 width=8) (actual time=101635.697..101635.697 rows=1 loops=1)
  ->  Gather  (cost=12729315.03..12729315.24 rows=2 width=8) (actual time=101631.664..106388.785 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12728315.03..12728315.04 rows=1 width=8) (actual time=101580.816..101580.816 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12367147.73 rows=144466918 width=0) (actual time=92160.802..100266.343 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9809399.28 rows=144466918 width=8) (actual time=44886.236..82785.493 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7822670.15 rows=144466918 width=16) (actual time=44881.830..75541.760 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=44881.234..70150.778 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=44859.458..59074.176 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24136.397..37937.470 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..6998.280 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7206.727..7206.727 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.919..2440.850 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.537..234.537 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.004..104.284 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.440..21.440 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.175 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.564..0.565 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.553..0.555 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.303..4.303 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.775..2.456 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1267.630..1267.630 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.815..506.678 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:45:25.813 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,186,"",2021-03-19 23:47:13 CET,6/257,0,LOG,00000,"duration: 96800.196 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=93054.127..93054.128 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=93049.994..96800.080 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=92996.760..92996.761 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=83953.857..91726.426 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=45777.551..75257.749 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=45776.717..69403.241 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=45771.741..62007.997 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12502.808..26719.991 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.207..6176.922 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=455.987..455.988 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.590..322.396 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.761..92.224 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.460..22.461 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.447..11.239 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6599.290..6599.290 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.651..2476.706 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.869..4.869 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.616..2.728 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.785..0.785 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.764..0.766 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1216.223..1216.224 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.931..494.148 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:47:54.296 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,187,"",2021-03-19 23:47:13 CET,6/258,0,LOG,00000,"duration: 148428.852 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15958168.90..15958168.91 rows=1 width=8) (actual time=139636.900..139636.900 rows=1 loops=1)
  ->  Gather  (cost=15958168.68..15958168.89 rows=2 width=8) (actual time=139632.236..148427.983 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15957168.68..15957168.69 rows=1 width=8) (actual time=139581.576..139581.576 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15596001.39 rows=144466917 width=0) (actual time=123742.821..138372.051 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=1304602.38..13609272.28 rows=144466917 width=8) (actual time=123736.980..132798.027 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=89353.639..114722.214 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89330.013..103480.460 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69230.047..83368.104 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.628..4421.022 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.389..2062.653 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.161..1.161 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.135..1.137 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53128.194..53128.194 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.746..7975.333 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.901..234.901 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.714..104.395 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.122..23.122 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.967..12.162 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1178.797..1178.797 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.879..473.829 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.506..5.506 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.699..2.967 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:50:20.111 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,188,"",2021-03-19 23:47:13 CET,6/259,0,LOG,00000,"duration: 145742.259 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=137351.280..137351.280 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=137345.987..145742.122 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=137260.375..137260.376 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=128363.032..136070.370 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=89786.850..120433.159 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=89781.620..113419.817 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89758.361..103135.770 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68822.026..83616.846 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.789..4411.556 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.915..2062.580 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.816..0.817 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.800..0.802 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52233.289..52233.289 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.749..7994.137 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.699..236.700 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.891..103.813 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.913..22.914 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.830..11.889 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.134..5.134 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.869..2.850 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1233.414..1233.414 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.980..497.893 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:51:40.528 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,189,"",2021-03-19 23:47:13 CET,6/260,0,LOG,00000,"duration: 80336.659 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10302237.77..10302237.78 rows=1 width=8) (actual time=77289.840..77289.840 rows=1 loops=1)
  ->  Gather  (cost=10302237.55..10302237.76 rows=2 width=8) (actual time=77285.662..80336.542 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10301237.55..10301237.56 rows=1 width=8) (actual time=77235.084..77235.085 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=534388.10..9940070.26 rows=144466918 width=0) (actual time=68815.523..76029.887 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=437706.72..7382321.80 rows=144466918 width=8) (actual time=40512.768..60395.736 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=40512.000..54692.214 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12328.185..24029.356 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.872..5890.099 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=561.683..561.683 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=26.939..437.302 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.102..313.663 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.733..107.850 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.040..21.044 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..11.031 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.732..4.732 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.808..2.703 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6469.499..6469.499 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.131..2357.071 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.725..0.726 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.712..0.713 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1761.219..1761.219 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.874..519.326 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:53:27.363 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,190,"",2021-03-19 23:47:13 CET,6/261,0,LOG,00000,"duration: 106771.639 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=103346.441..103346.441 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=103342.637..106770.943 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=103294.304..103294.304 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=93829.994..101955.168 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=42094.483..84691.684 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=42093.567..79093.748 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=42088.800..71380.926 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42065.628..59186.642 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11403.392..25100.739 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.920..5625.665 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=339.604..339.605 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.821..123.916 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7029.775..7029.775 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.714..2577.138 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.833..22.833 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.661..11.767 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.687..4.687 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.673..2.596 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.876..0.877 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.857..0.859 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1250.782..1250.783 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.759..492.745 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:55:55.551 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,191,"",2021-03-19 23:47:13 CET,6/262,0,LOG,00000,"duration: 148124.440 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=139987.812..139987.812 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=139983.013..148123.412 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=139891.183..139891.183 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=130761.309..138669.971 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=89426.803..121834.601 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=89422.420..114379.062 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=89399.756..103494.520 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68793.634..83288.532 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.272..4410.589 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.427..2082.621 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.789..0.789 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.768..0.770 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51761.521..51761.521 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.760..8111.360 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.225..235.225 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.209..105.747 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.336..22.336 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.616..11.749 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.279..4.279 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.777..2.473 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1760.328..1760.328 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.856..497.911 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 04:57:42.410 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,192,"",2021-03-19 23:47:13 CET,6/263,0,LOG,00000,"duration: 106796.896 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=102843.301..102843.301 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=102839.108..106796.052 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=102782.821..102782.821 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=68684.005..101247.993 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=68678.935..94559.543 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=68678.367..89725.285 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=68655.630..80065.829 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45264.659..58989.747 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=23604.528..37467.240 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.618..6869.317 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7062.805..7062.806 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.849..2584.852 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=259.152..259.152 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.047..114.137 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1233.874..1233.874 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.945..480.991 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.442..22.442 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.627 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.542..0.542 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.528..0.530 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.747..4.747 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.534..2.615 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 04:59:08.132 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,193,"",2021-03-19 23:47:13 CET,6/264,0,LOG,00000,"duration: 85676.698 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10302237.77..10302237.78 rows=1 width=8) (actual time=82009.666..82009.666 rows=1 loops=1)
  ->  Gather  (cost=10302237.55..10302237.76 rows=2 width=8) (actual time=82003.020..85676.113 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10301237.55..10301237.56 rows=1 width=8) (actual time=81951.117..81951.117 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=534388.10..9940070.26 rows=144466918 width=0) (actual time=72688.791..80648.524 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=437706.72..7382321.80 rows=144466918 width=8) (actual time=42123.838..63078.211 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=42123.001..57189.465 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12957.366..25404.355 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.058..6017.998 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=1039.315..1039.315 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=26.982..464.092 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.184..334.206 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.558..109.059 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.321..21.321 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.528..11.117 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.699..4.700 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.789..2.721 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7076.248..7076.249 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.737..2613.988 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.788..0.788 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.761..0.763 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1258.425..1258.425 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.955..512.418 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:00:51.772 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,194,"",2021-03-19 23:47:13 CET,6/265,0,LOG,00000,"duration: 103571.084 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14311461.67..14311461.68 rows=1 width=8) (actual time=100095.938..100095.938 rows=1 loops=1)
  ->  Gather  (cost=14311461.45..14311461.66 rows=2 width=8) (actual time=100091.841..103570.528 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14310461.45..14310461.46 rows=1 width=8) (actual time=100035.935..100035.936 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..13949294.16 rows=144466918 width=0) (actual time=91565.477..98842.386 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11391545.70 rows=144466918 width=8) (actual time=42589.317..82757.145 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=42584.532..75184.854 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=42561.827..64059.489 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42560.943..58722.777 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11736.590..25472.876 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.153..5800.436 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.596..240.596 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.842..107.826 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7047.314..7047.314 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.721..2615.515 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.844..0.845 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.828..0.829 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.354..22.355 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.708..11.667 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.671..4.671 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.910..2.726 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.576..1318.576 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.206..516.623 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:02:36.870 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,195,"",2021-03-19 23:47:13 CET,6/266,0,LOG,00000,"duration: 105044.092 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=101125.823..101125.823 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=101118.280..105043.963 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=101070.266..101070.270 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=85670.837..99841.771 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=85665.529..94254.509 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=43328.073..76286.889 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43327.021..70209.638 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43302.426..59144.458 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12284.466..25845.800 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.999..6100.228 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=274.562..274.562 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.008..125.237 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7335.636..7335.637 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.760..2433.415 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.273..24.274 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.508..12.183 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.006..1.006 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.982..0.985 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1336.757..1336.757 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.923..513.712 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.006..5.007 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.510..2.693 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:04:06.774 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,196,"",2021-03-19 23:47:13 CET,6/267,0,LOG,00000,"duration: 89853.928 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=86632.628..86632.628 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=86627.850..89853.034 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=86574.614..86574.614 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=52337.220..85082.624 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=52331.219..78598.799 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=52330.564..73945.566 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=52302.552..64411.739 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=32641.144..46237.156 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.773..7118.200 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=14932.728..14932.728 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6024.567..10618.532 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.714..2242.079 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1216.796..1216.797 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.954..478.875 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.284..232.284 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.061..109.246 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.655..27.655 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.575..13.315 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.631..0.631 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.604..0.606 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.694..5.694 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.985 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:05:35.134 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,197,"",2021-03-19 23:47:13 CET,6/268,0,LOG,00000,"duration: 88296.356 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8631313.89..8631313.90 rows=1 width=8) (actual time=84673.694..84673.695 rows=1 loops=1)
  ->  Gather  (cost=8631313.68..8631313.89 rows=2 width=8) (actual time=84669.814..88295.644 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8630313.68..8630313.69 rows=1 width=8) (actual time=84619.750..84619.751 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8269146.38 rows=144466918 width=0) (actual time=70866.520..83421.190 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3152572.63 rows=24077820 width=8) (actual time=70865.756..78893.189 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=47683.103..62157.972 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12220.512..31140.725 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12214.688..24493.720 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.970..5814.846 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=462.095..462.095 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=26.708..331.848 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.660..106.808 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.678..25.678 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.656..12.832 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.690..5.691 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.725..3.024 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6527.028..6527.028 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.753..2361.338 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1166.385..1166.385 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.800..476.045 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.568..0.568 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.532..0.533 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:07:52.856 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,198,"",2021-03-19 23:47:13 CET,6/269,0,LOG,00000,"duration: 137427.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15182950.11..15182950.12 rows=1 width=8) (actual time=130352.587..130352.588 rows=1 loops=1)
  ->  Gather  (cost=15182949.90..15182950.11 rows=2 width=8) (actual time=130344.810..137425.386 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15181949.90..15181949.91 rows=1 width=8) (actual time=130294.678..130294.678 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14820782.61 rows=144466917 width=0) (actual time=103970.434..129061.783 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12834053.50 rows=144466917 width=8) (actual time=103965.374..123072.472 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10846040.39 rows=144466917 width=8) (actual time=103940.880..114807.524 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=1281305.63..8485963.41 rows=150000000 width=8) (actual time=80414.144..98883.371 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..6423447.17 rows=150000000 width=16) (actual time=80412.865..93758.204 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7044.173..14289.394 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7042.054..12352.795 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.545..2540.771 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1467.342..1467.348 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.034..646.708 rows=1666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.017..2.018 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.995..1.997 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52641.368..52641.368 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.001..8094.106 rows=20000000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.234..1.235 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.975..1.138 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.438..237.439 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.390..106.557 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.003..24.004 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.662..11.878 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.707..4.707 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.559..2.530 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:09:25.863 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,199,"",2021-03-19 23:47:13 CET,6/270,0,LOG,00000,"duration: 92942.121 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN category as cat
ON cat.id = sub.category_id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12582070.47..12582070.48 rows=1 width=8) (actual time=89365.837..89365.837 rows=1 loops=1)
  ->  Gather  (cost=12582070.25..12582070.46 rows=2 width=8) (actual time=89360.978..92941.922 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12581070.25..12581070.26 rows=1 width=8) (actual time=89295.497..89295.498 rows=1 loops=3)
              ->  Hash Join  (cost=537500.68..12219902.96 rows=144466918 width=0) (actual time=73653.692..87968.143 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537484.43..10233466.59 rows=144466918 width=8) (actual time=73652.231..82709.542 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440803.05..7393556.13 rows=144466918 width=16) (actual time=40683.620..62659.837 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=440766.05..2276982.38 rows=24077820 width=24) (actual time=40682.824..56389.230 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12377.092..24309.843 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.907..6029.790 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=456.674..456.674 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=57.516..329.591 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.994..106.686 rows=333333 loops=3)
                                                        ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=56.161..56.161 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                              ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.465..41.294 rows=50000 loops=3)
                                                                    Hash Cond: (sub.category_id = cat.id)
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.573..11.537 rows=50000 loops=3)
                                                                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.762..5.763 rows=10000 loops=3)
                                                                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.536..2.926 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6974.155..6974.155 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.095..2568.693 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.753..0.753 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.737..0.738 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2548.605..2548.605 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.067..500.954 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.120..1.120 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.775..0.939 rows=500 loops=3)",,,,,,,,,""
2021-03-20 05:11:16.987 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,200,"",2021-03-19 23:47:13 CET,6/271,0,LOG,00000,"duration: 111073.513 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11348123.75..11348123.76 rows=1 width=8) (actual time=107795.362..107795.363 rows=1 loops=1)
  ->  Gather  (cost=11348123.53..11348123.74 rows=2 width=8) (actual time=107791.146..111073.064 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11347123.53..11347123.54 rows=1 width=8) (actual time=107738.173..107738.173 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..10985956.24 rows=144466918 width=0) (actual time=98189.531..106366.180 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8428207.78 rows=144466918 width=8) (actual time=56267.714..90071.355 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=56266.913..84656.748 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=56261.266..78147.357 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56260.340..72071.944 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11801.163..37304.795 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11779.781..25904.097 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.836..5832.990 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.198..239.199 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.921..108.077 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.059..21.059 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.833..10.964 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6646.310..6646.310 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.636..2464.947 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.897..0.898 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.662..0.769 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.531..5.532 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.649..2.904 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.754..0.754 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.736..0.738 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.616..1238.616 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.754..519.305 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:13:17.119 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,201,"",2021-03-19 23:47:13 CET,6/272,0,LOG,00000,"duration: 120060.959 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=115099.940..115099.941 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=115095.785..120059.625 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=115043.555..115043.555 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=72895.955..113290.251 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..8873876.90 rows=144466918 width=8) (actual time=72894.805..107203.146 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531437.75..3757303.15 rows=24077820 width=16) (actual time=72894.257..102590.360 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=72889.005..95584.689 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=72864.870..85508.931 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=45669.856..60949.599 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23072.888..37892.841 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.971..6911.427 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6829.453..6829.454 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2471.272 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.602..240.602 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.982..101.157 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1918.167..1918.167 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.860..498.008 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.779..23.779 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.550..12.084 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.148..5.148 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.516..2.773 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.526..0.526 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.505..0.507 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.843..0.843 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.531..0.662 rows=500 loops=3)",,,,,,,,,""
2021-03-20 05:15:11.623 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,202,"",2021-03-19 23:47:13 CET,6/273,0,LOG,00000,"duration: 114452.554 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11470155.42..11470155.43 rows=1 width=8) (actual time=110596.454..110596.454 rows=1 loops=1)
  ->  Gather  (cost=11470155.20..11470155.41 rows=2 width=8) (actual time=110592.219..114452.432 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11469155.20..11469155.21 rows=1 width=8) (actual time=110542.403..110542.403 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11107987.91 rows=144466918 width=0) (actual time=100776.153..109198.551 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8550239.45 rows=144466918 width=8) (actual time=46926.667..91879.594 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=46925.914..86198.442 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=46920.056..79413.779 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=46919.215..73344.973 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46891.933..61828.495 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24373.847..39240.099 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.827..6744.745 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7589.349..7589.350 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.836..2710.357 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.515..239.515 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.691..103.578 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.931..26.931 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.645..13.277 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.810..0.810 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.568..0.672 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.741..5.741 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.738..2.968 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.699..0.700 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.685 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1209.954..1209.954 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.741..479.943 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:17:03.729 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,203,"",2021-03-19 23:47:13 CET,6/274,0,LOG,00000,"duration: 112045.334 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11348123.75..11348123.76 rows=1 width=8) (actual time=108226.291..108226.292 rows=1 loops=1)
  ->  Gather  (cost=11348123.53..11348123.74 rows=2 width=8) (actual time=108222.074..112044.703 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11347123.53..11347123.54 rows=1 width=8) (actual time=108163.645..108163.645 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..10985956.24 rows=144466918 width=0) (actual time=99511.025..106899.297 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8428207.78 rows=144466918 width=8) (actual time=55283.671..90407.467 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=55282.758..84792.176 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55281.624..79365.805 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55274.348..71738.421 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12122.784..37719.627 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12100.612..26268.553 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.070..6070.781 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.408..230.408 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.648..106.243 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.831..21.831 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.717..11.488 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7372.305..7372.305 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.638..2713.682 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.165..7.165 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.803..3.889 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.109..1.109 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.761..0.869 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.861..0.861 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.841 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1916.339..1916.339 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.923..542.240 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:18:55.434 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,204,"",2021-03-19 23:47:13 CET,6/275,0,LOG,00000,"duration: 111643.155 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=108383.163..108383.163 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=108378.139..111642.948 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=108323.823..108323.823 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=88284.968..107148.500 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=88284.051..102548.910 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3587950.73 rows=24077820 width=16) (actual time=88278.368..97247.739 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=43318.980..78191.816 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=43294.883..65832.819 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43293.998..59684.850 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11834.688..25122.093 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.216..5871.252 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=256.627..256.631 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.940..113.923 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7632.693..7632.693 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.614..2742.773 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.855..0.855 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.673..0.760 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.746..23.746 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.868..12.393 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1223.569..1223.569 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.895..498.839 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.535..5.535 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.554..2.848 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.657..0.658 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.622..0.624 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:20:48.007 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,205,"",2021-03-19 23:47:13 CET,6/276,0,LOG,00000,"duration: 112514.868 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15223147.94..15223147.95 rows=1 width=8) (actual time=108880.819..108880.819 rows=1 loops=1)
  ->  Gather  (cost=15223147.73..15223147.94 rows=2 width=8) (actual time=108877.015..112514.376 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15222147.73..15222147.74 rows=1 width=8) (actual time=108821.601..108821.602 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14860980.43 rows=144466918 width=0) (actual time=87477.691..107502.752 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12874251.31 rows=144466918 width=8) (actual time=87472.814..101661.737 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531165.75..10887814.94 rows=144466918 width=16) (actual time=87471.948..96915.154 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=55416.533..77605.871 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55415.426..71048.025 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12407.774..37609.240 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12375.328..26357.458 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.054..6122.226 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=427.357..427.358 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.693..125.598 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.039..32.039 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.634..15.428 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7658.967..7658.967 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.945..2707.063 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.048..1.048 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.031..1.033 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1282.494..1282.494 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.903..512.796 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.583..0.697 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.522..4.522 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.573..2.584 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:22:27.550 CET,,,5184,,6055275a.1440,6,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 05:23:19.430 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,206,"",2021-03-19 23:47:13 CET,6/277,0,LOG,00000,"duration: 151368.277 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16363524.52..16363524.53 rows=1 width=8) (actual time=141999.049..141999.049 rows=1 loops=1)
  ->  Gather  (cost=16363524.31..16363524.52 rows=2 width=8) (actual time=141993.077..151368.148 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16362524.31..16362524.32 rows=1 width=8) (actual time=141942.435..141942.435 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..16001357.02 rows=144466917 width=0) (actual time=131865.937..140595.445 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..13443608.57 rows=144466917 width=8) (actual time=92373.136..123727.233 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..11456879.46 rows=144466917 width=16) (actual time=92368.441..116484.338 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206344.25..9468866.35 rows=144466917 width=16) (actual time=92347.116..105937.261 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=72010.285..86453.790 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=5.415..7458.196 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.775..5262.949 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.549..2889.633 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.170..1.170 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.139..1.141 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.559..2.559 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=2.274..2.399 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52115.316..52115.317 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..7980.178 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.459..244.459 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.787..102.671 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.028..21.028 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.553..10.924 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.599..4.599 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.974..2.750 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1312.879..1312.879 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.778..503.921 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:25:13.039 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,207,"",2021-03-19 23:47:13 CET,6/278,0,LOG,00000,"duration: 113524.892 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=109687.193..109687.193 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=109683.040..113524.415 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=109630.132..109630.132 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=92825.411..108215.632 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=92819.836..102157.406 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=56206.112..83992.836 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=56205.116..77716.283 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56204.636..72078.322 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11753.250..37844.625 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11729.325..26205.383 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.889..5814.548 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.022..228.023 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.834..101.516 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.496..23.496 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.836..12.356 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7050.987..7050.987 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.914..2586.315 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.451..0.451 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.443..0.444 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.963..0.964 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.729..0.841 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1154.383..1154.383 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.272..453.139 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.243..5.243 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.754..2.970 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:27:14.027 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,208,"",2021-03-19 23:47:13 CET,6/279,0,LOG,00000,"duration: 120925.125 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=117349.964..117349.964 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=117345.537..120924.593 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=117291.325..117291.325 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=101433.649..116033.753 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=101426.559..110256.911 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=44984.578..92034.318 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=44956.878..79310.031 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=44955.892..73889.809 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44955.324..68043.982 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11724.823..25823.151 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.958..5830.462 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=251.206..251.206 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.135..109.325 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7600.988..7600.989 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.698..2675.911 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.543..0.544 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.529..0.530 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.958..0.959 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.787..0.864 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.103..27.104 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.291..14.365 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1377.080..1377.080 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.959..516.086 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.633..6.633 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.592..3.497 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:29:14.272 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,209,"",2021-03-19 23:47:13 CET,6/280,0,LOG,00000,"duration: 120195.140 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11175452.79..11175452.80 rows=1 width=8) (actual time=116395.361..116395.361 rows=1 loops=1)
  ->  Gather  (cost=11175452.57..11175452.78 rows=2 width=8) (actual time=116390.539..120194.564 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11174452.57..11174452.58 rows=1 width=8) (actual time=116330.315..116330.315 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10813285.28 rows=144466918 width=0) (actual time=93671.652..115018.150 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8826556.15 rows=144466918 width=8) (actual time=93666.071..108721.201 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=93665.469..103940.063 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=48080.050..82521.272 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=48055.447..70308.052 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48054.553..63837.206 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24513.829..40247.099 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.883..7287.886 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7240.961..7240.961 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2656.617 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.516..250.516 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.666..109.786 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.864..0.864 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.672..0.768 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.193..24.193 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.876..12.732 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2092.401..2092.401 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.901..544.266 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.568..0.569 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.552..0.554 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.274..5.274 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.812..3.024 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:31:06.324 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,210,"",2021-03-19 23:47:13 CET,6/281,0,LOG,00000,"duration: 111988.775 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108315.337..108315.337 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108311.973..111987.906 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=108260.859..108260.859 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99872.812..107051.166 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=42673.429..90831.741 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=42672.560..84356.257 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42668.420..77382.212 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42667.892..71722.714 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42645.410..59587.648 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11153.413..24754.356 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.057..5487.412 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=394.287..394.288 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..113.859 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7936.565..7936.565 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.910..2557.047 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.169..22.170 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.689..11.477 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.503..0.504 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.480..0.482 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.064..4.064 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.402..2.116 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.835..0.835 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.654..0.733 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1244.640..1244.640 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.857..503.328 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:33:03.249 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,211,"",2021-03-19 23:47:13 CET,6/282,0,LOG,00000,"duration: 116869.124 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9473076.69..9473076.70 rows=1 width=8) (actual time=113089.563..113089.563 rows=1 loops=1)
  ->  Gather  (cost=9473076.47..9473076.68 rows=2 width=8) (actual time=113086.224..116869.019 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9472076.47..9472076.48 rows=1 width=8) (actual time=113024.272..113024.272 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9110909.18 rows=144466918 width=0) (actual time=99312.617..111841.644 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3994335.43 rows=24077820 width=8) (actual time=99311.790..107352.513 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=48142.521..89471.029 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=48138.110..81730.787 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48137.480..75350.979 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48115.385..63514.619 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25511.556..40562.307 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.868..7156.640 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7533.533..7533.533 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.896..2792.561 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.045..247.045 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.757..104.984 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.832..21.832 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.453..11.084 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.607..0.607 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.439..0.513 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.326..4.326 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.707..2.410 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1948.432..1948.432 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.872..505.656 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.521..0.521 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.488..0.490 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:35:00.462 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,212,"",2021-03-19 23:47:13 CET,6/283,0,LOG,00000,"duration: 117149.121 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=112754.100..112754.100 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=112749.367..117148.418 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=112690.456..112690.456 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=97389.632..111439.989 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12714413.73 rows=144466918 width=8) (actual time=97388.566..106380.428 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=46853.083..87432.367 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=46848.108..79781.127 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=46847.632..74056.400 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46827.027..62453.533 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24043.205..39280.761 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.835..7114.475 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6676.557..6676.558 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.685..2457.125 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=216.148..216.149 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.611..93.123 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.315..20.315 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.430..10.545 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.448..0.448 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.440..0.442 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.881..4.881 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.636..2.561 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2181.696..2181.696 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.815..478.399 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.763..0.763 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.553..0.655 rows=500 loops=3)",,,,,,,,,""
2021-03-20 05:36:03.902 CET,,,5184,,6055275a.1440,7,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 05:36:08.979 CET,,,1112,,60557ba6.458,1,,2021-03-20 05:35:50 CET,8/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 05:36:58.627 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,213,"",2021-03-19 23:47:13 CET,6/284,0,LOG,00000,"duration: 118110.730 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11100449.12..11100449.13 rows=1 width=8) (actual time=114098.734..114098.734 rows=1 loops=1)
  ->  Gather  (cost=11100448.90..11100449.11 rows=2 width=8) (actual time=114094.305..118110.172 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11099448.90..11099448.91 rows=1 width=8) (actual time=114041.663..114041.663 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10738281.61 rows=144466918 width=0) (actual time=73315.517..112318.573 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8751552.48 rows=144466918 width=8) (actual time=73310.924..105209.373 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=73310.299..100624.634 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=73309.359..94924.616 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=73286.755..85274.639 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44365.833..62492.591 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11991.394..25887.375 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.974..5954.221 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=274.933..274.933 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.630..122.005 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8249.237..8249.238 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.920..2747.063 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1293.067..1293.068 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.366..507.350 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.305..22.305 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.533 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.915..0.915 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.719..0.809 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.600..0.600 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.583..0.585 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.282..4.282 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.531..2.402 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:38:36.239 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,214,"",2021-03-19 23:47:13 CET,6/285,0,LOG,00000,"duration: 97548.515 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14333483.09..14333483.10 rows=1 width=8) (actual time=94065.309..94065.309 rows=1 loops=1)
  ->  Gather  (cost=14333482.88..14333483.09 rows=2 width=8) (actual time=94061.606..97548.414 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14332482.88..14332482.89 rows=1 width=8) (actual time=94008.394..94008.395 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=537220.18..13971315.58 rows=144466918 width=0) (actual time=85705.051..92821.399 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=440538.80..11413567.13 rows=144466918 width=8) (actual time=43594.738..77571.958 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=440522.55..9427130.75 rows=144466918 width=16) (actual time=43593.776..71588.997 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=43589.519..65013.563 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=43588.957..59277.294 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11719.448..25437.455 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.936..5643.412 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=414.639..414.639 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.174..290.027 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.021..90.864 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.843..22.844 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.535..11.787 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7164.444..7164.444 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.558..2609.189 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.540..0.540 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.531..0.533 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.180..4.180 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.496..2.264 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.923 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.739..0.830 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1175.493..1175.494 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.764..459.784 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:40:38.370 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,215,"",2021-03-19 23:47:13 CET,6/286,0,LOG,00000,"duration: 122082.085 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14533180.98..14533180.99 rows=1 width=8) (actual time=118283.873..118283.873 rows=1 loops=1)
  ->  Gather  (cost=14533180.77..14533180.98 rows=2 width=8) (actual time=118279.953..122080.927 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14532180.77..14532180.78 rows=1 width=8) (actual time=118227.314..118227.314 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14171013.47 rows=144466918 width=0) (actual time=74803.708..116397.730 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12184284.35 rows=144466918 width=8) (actual time=74797.333..108857.988 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..10197847.98 rows=144466918 width=16) (actual time=74796.565..103326.569 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8209834.85 rows=144466918 width=16) (actual time=74770.249..93020.761 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=74769.627..87873.363 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46737.406..62214.103 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23542.857..39030.815 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.160..7120.863 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6626.114..6626.114 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.938..2482.221 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=208.478..208.478 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.232..85.622 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1859.495..1859.495 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.704..465.669 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.591..0.591 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.573..0.574 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.989..25.989 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.453..12.839 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.735..0.735 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.493..0.606 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.015..6.015 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.475..3.083 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:42:31.042 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,216,"",2021-03-19 23:47:13 CET,6/287,0,LOG,00000,"duration: 112622.466 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=109218.595..109218.595 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=109215.090..112621.993 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=109163.109..109163.109 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=75893.926..107649.389 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14529894.16 rows=144466918 width=8) (actual time=75892.360..102166.410 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..12543165.04 rows=144466918 width=16) (actual time=75887.569..95965.673 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10555151.91 rows=144466918 width=16) (actual time=75864.387..86668.756 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=43475.302..65596.886 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43474.538..59002.886 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11432.809..25263.693 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.993..5690.694 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.603..235.607 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.842..102.300 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8048.859..8048.859 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.703..2488.327 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.716..0.716 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.698..0.700 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1247.704..1247.704 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.275..479.995 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.804..22.804 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.555..11.317 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.699..4.699 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.551 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.366..1.366 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.117..1.224 rows=500 loops=3)",,,,,,,,,""
2021-03-20 05:44:25.629 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,217,"",2021-03-19 23:47:13 CET,6/288,0,LOG,00000,"duration: 114530.244 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9473076.69..9473076.70 rows=1 width=8) (actual time=110859.829..110859.829 rows=1 loops=1)
  ->  Gather  (cost=9473076.47..9473076.68 rows=2 width=8) (actual time=110856.030..114530.096 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9472076.47..9472076.48 rows=1 width=8) (actual time=110798.252..110798.252 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9110909.18 rows=144466918 width=0) (actual time=96816.809..109600.128 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3994335.43 rows=24077820 width=8) (actual time=96815.924..105114.402 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=47548.915..87867.004 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..3102579.43 rows=24077820 width=24) (actual time=47547.903..81858.243 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47542.955..74261.398 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47518.175..62831.261 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24456.679..39791.465 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.077..6820.917 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8022.654..8022.657 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.860..2649.620 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.406..248.407 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.653..104.081 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.512..24.513 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.526..12.057 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.859..4.859 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.490..2.490 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.969..0.969 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.834 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1181.343..1181.343 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.889..458.640 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.587..0.587 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.559..0.562 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:46:24.836 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,218,"",2021-03-19 23:47:13 CET,6/289,0,LOG,00000,"duration: 119140.078 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9567130.69..9567130.70 rows=1 width=8) (actual time=115432.532..115432.532 rows=1 loops=1)
  ->  Gather  (cost=9567130.47..9567130.68 rows=2 width=8) (actual time=115426.861..119139.267 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9566130.47..9566130.48 rows=1 width=8) (actual time=115372.106..115372.107 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9204963.18 rows=144466918 width=0) (actual time=73690.400..113625.911 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4088389.43 rows=24077820 width=8) (actual time=73689.554..107999.391 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3757303.15 rows=24077820 width=16) (actual time=73688.740..102981.690 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=73684.277..96109.803 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=73661.002..86163.878 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48386.190..63720.385 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25361.817..40583.623 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.883..7116.705 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8136.520..8136.520 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.039..2615.590 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.523..235.523 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.893..96.787 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1232.769..1232.769 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.432..480.451 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.872..22.872 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.548..11.435 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.344..4.344 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.563..2.386 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.793..0.793 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.597..0.684 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.592..0.592 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.561..0.563 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:49:06.230 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,219,"",2021-03-19 23:47:13 CET,6/290,0,LOG,00000,"duration: 161325.425 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=18617393.26..18617393.27 rows=1 width=8) (actual time=152125.276..152125.276 rows=1 loops=1)
  ->  Gather  (cost=18617393.04..18617393.25 rows=2 width=8) (actual time=152119.114..161324.578 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18616393.04..18616393.05 rows=1 width=8) (actual time=152059.845..152059.845 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18255225.75 rows=144466917 width=0) (actual time=130030.707..150831.456 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=1304911.38..16268789.39 rows=144466917 width=8) (actual time=130029.503..145732.399 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=1304602.38..14282060.28 rows=144466917 width=16) (actual time=130022.564..140125.370 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=94150.038..120136.617 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=94126.871..108675.782 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71826.679..86765.324 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.135..4770.265 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.078..2062.383 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.998..0.999 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.981..0.983 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52394.459..52394.460 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.876..8118.556 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=269.174..269.174 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.747..119.338 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.807..22.807 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.794..11.705 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1241.050..1241.050 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.942..485.833 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.824..6.824 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.611..3.471 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.856..0.857 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.567..0.698 rows=500 loops=3)",,,,,,,,,""
2021-03-20 05:51:07.230 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,220,"",2021-03-19 23:47:13 CET,6/291,0,LOG,00000,"duration: 120939.843 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=117200.820..117200.820 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=117196.293..120939.740 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=117144.034..117144.035 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=89342.387..115698.873 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8873584.15 rows=144466918 width=8) (actual time=89337.700..109650.010 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=89337.017..105306.032 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=89336.290..100236.486 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49452.964..78620.683 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49420.509..65784.377 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26772.903..41893.919 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.443..8745.437 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7553.514..7553.515 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.392..2790.654 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=263.949..263.949 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.843..114.893 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.045..32.045 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.707..15.268 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1354.619..1354.619 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.916..504.216 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.708..0.708 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.610 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.664..0.664 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.647..0.648 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.378..4.378 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.537..2.416 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:52:49.188 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,221,"",2021-03-19 23:47:13 CET,6/292,0,LOG,00000,"duration: 101903.045 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=98435.485..98435.485 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=98430.876..101901.810 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=98380.489..98380.490 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=82425.137..97109.811 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=536911.18..10611398.36 rows=144466918 width=8) (actual time=82419.561..91359.854 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440229.80..7771487.91 rows=144466918 width=16) (actual time=44286.762..73012.185 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=44285.846..67021.128 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44284.882..60680.884 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13053.469..26090.152 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.982..6079.839 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=417.506..417.506 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.026..292.981 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.046..92.828 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.640..22.641 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.731..11.698 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7382.306..7382.306 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.638..2566.993 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.935..0.935 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.758..0.841 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.857..0.857 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.842..0.844 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1346.626..1346.626 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.947..487.854 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.194..5.194 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.555..2.808 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 05:54:43.504 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,222,"",2021-03-19 23:47:13 CET,6/293,0,LOG,00000,"duration: 114264.780 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11434007.39..11434007.40 rows=1 width=8) (actual time=110792.227..110792.227 rows=1 loops=1)
  ->  Gather  (cost=11434007.18..11434007.39 rows=2 width=8) (actual time=110788.437..114264.644 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11433007.18..11433007.19 rows=1 width=8) (actual time=110736.460..110736.460 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11071839.88 rows=144466918 width=0) (actual time=102068.255..109556.163 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8514091.43 rows=144466918 width=8) (actual time=55518.904..93347.616 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3397517.68 rows=24077820 width=16) (actual time=55518.176..88067.501 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3066138.65 rows=24077820 width=24) (actual time=55514.427..80818.438 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=55492.918..69854.025 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=27130.782..48750.940 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=27129.485..42277.084 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.981..9021.487 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6914.899..6914.899 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.801..2481.571 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.232..1.232 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.947..1.081 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=207.546..207.546 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.662..93.243 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.215..21.215 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.406..10.804 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=3.664..3.664 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.403..1.954 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.684..0.685 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.668..0.670 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1182.814..1182.815 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.000..491.488 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 05:56:44.579 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,223,"",2021-03-19 23:47:13 CET,6/294,0,LOG,00000,"duration: 121014.129 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9520102.69..9520102.70 rows=1 width=8) (actual time=115877.064..115877.064 rows=1 loops=1)
  ->  Gather  (cost=9520102.47..9520102.68 rows=2 width=8) (actual time=115872.375..121013.925 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9519102.47..9519102.48 rows=1 width=8) (actual time=115817.082..115817.083 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9157935.18 rows=144466918 width=0) (actual time=93600.651..114562.370 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4041361.43 rows=24077820 width=8) (actual time=93599.726..109625.000 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=93595.092..103901.124 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=49205.628..83390.738 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=49185.074..71345.161 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49184.274..65066.941 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25740.953..41298.994 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.108..7246.936 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8425.837..8425.838 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.899..2645.333 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.779..221.779 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.513..90.529 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.768..0.768 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.609..0.679 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.236..20.236 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.730..10.759 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1200.665..1200.665 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.046..465.606 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.532..4.532 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.644..2.596 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.713..0.713 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.689..0.691 rows=4 loops=3)",,,,,,,,,""
2021-03-20 05:58:35.821 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,224,"",2021-03-19 23:47:13 CET,6/295,0,LOG,00000,"duration: 111169.117 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=107730.392..107730.393 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=107726.380..111168.955 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=107674.720..107674.721 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=93142.547..106517.293 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=93137.219..101185.869 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=44591.186..84147.330 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=44589.899..78101.590 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=44589.219..72532.745 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44562.505..60896.628 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12760.151..26410.285 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.006..5813.803 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=998.317..998.318 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.978..116.950 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7273.652..7273.652 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.953..2678.150 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.281..26.282 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.660..13.411 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.649..0.649 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.636..0.637 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.246..1.246 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.011..1.121 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1177.023..1177.024 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.837..464.589 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.041..5.041 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.679 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:00:41.167 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,225,"",2021-03-19 23:47:13 CET,6/296,0,LOG,00000,"duration: 125284.628 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14466588.70..14466588.71 rows=1 width=8) (actual time=120853.699..120853.699 rows=1 loops=1)
  ->  Gather  (cost=14466588.48..14466588.69 rows=2 width=8) (actual time=120848.321..125283.323 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14465588.48..14465588.49 rows=1 width=8) (actual time=120799.434..120799.434 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14104421.19 rows=144466917 width=0) (actual time=93856.526..119557.830 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12117692.08 rows=144466917 width=8) (actual time=93851.401..113410.784 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10129678.97 rows=144466917 width=8) (actual time=93828.389..104964.486 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7769602.00 rows=150000000 width=8) (actual time=75369.571..88540.674 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96734.63..3759830.63 rows=50000100 width=8) (actual time=9692.441..14820.750 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.342..5844.679 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.773..3849.348 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.770..1732.773 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.901..0.901 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.876..0.877 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.506..1.506 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.325..1.407 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1345.274..1345.274 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.711..549.630 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51308.595..51308.595 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.101..8114.562 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=271.746..271.746 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.106..122.011 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.690..22.690 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.523..11.447 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.836..4.836 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.528..2.573 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:02:10.810 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,226,"",2021-03-19 23:47:13 CET,6/297,0,LOG,00000,"duration: 89588.557 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8699547.31..8699547.32 rows=1 width=8) (actual time=85881.292..85881.293 rows=1 loops=1)
  ->  Gather  (cost=8699547.10..8699547.31 rows=2 width=8) (actual time=85877.291..89587.707 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8698547.10..8698547.11 rows=1 width=8) (actual time=85830.595..85830.595 rows=1 loops=3)
              ->  Hash Join  (cost=542542.35..8337379.80 rows=144466918 width=0) (actual time=66335.172..84623.794 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=542505.35..3220806.05 rows=24077820 width=8) (actual time=66334.462..79924.983 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=542489.10..2889719.78 rows=24077820 width=16) (actual time=66333.755..75258.956 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=445807.72..2282024.05 rows=24077820 width=24) (actual time=39383.713..54450.662 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12015.914..23652.408 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.086..5771.730 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=662.157..662.157 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                                  ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=27.654..496.258 rows=333333 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.651..354.296 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.753..107.878 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.525..21.525 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.766..11.143 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.862..4.863 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.816..2.749 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6790.788..6790.789 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.912..2482.092 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3899.981..3899.981 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.820..436.184 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.678..0.679 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.481..0.574 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.509..0.510 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.478..0.480 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:04:06.257 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,227,"",2021-03-19 23:47:13 CET,6/298,0,LOG,00000,"duration: 115383.676 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13125505.52..13125505.53 rows=1 width=8) (actual time=112089.665..112089.665 rows=1 loops=1)
  ->  Gather  (cost=13125505.30..13125505.51 rows=2 width=8) (actual time=112085.973..115383.559 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13124505.30..13124505.31 rows=1 width=8) (actual time=112029.489..112029.489 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12763338.01 rows=144466918 width=0) (actual time=103097.970..110817.980 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10205589.55 rows=144466918 width=8) (actual time=47771.719..94079.450 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..8219153.18 rows=144466918 width=16) (actual time=47770.784..87702.743 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434756.38..3102579.43 rows=24077820 width=24) (actual time=47770.331..82699.493 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47764.283..74963.957 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47740.745..63253.322 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25375.909..40289.401 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.761..6934.787 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6837.416..6837.417 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.893..2467.699 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=219.576..219.576 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.645..94.853 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.169..23.169 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.573..11.367 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.968..5.968 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.558..2.922 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.427..0.427 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.417..0.418 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.880..0.880 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.700..0.779 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1208.188..1208.188 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.164..486.829 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:06:02.548 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,228,"",2021-03-19 23:47:13 CET,6/299,0,LOG,00000,"duration: 116236.690 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=113026.330..113026.331 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=113021.669..116236.051 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=112957.238..112957.238 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=84311.135..111442.552 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=84310.072..106294.179 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=84303.389..100472.300 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=84302.438..95207.720 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56204.368..72784.938 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11926.962..37432.118 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11902.947..25992.144 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.281..5949.892 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.117..240.118 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.366..106.140 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.664..23.664 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.779..12.135 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7266.256..7266.257 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.808..2666.786 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1927.047..1927.047 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.019..482.648 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.924 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.620..0.751 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.554..6.554 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.649..3.428 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.698 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.664..0.666 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:08:44.649 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,229,"",2021-03-19 23:47:13 CET,6/300,0,LOG,00000,"duration: 162055.699 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18439985.18..18439985.19 rows=1 width=8) (actual time=152531.138..152531.138 rows=1 loops=1)
  ->  Gather  (cost=18439984.97..18439985.18 rows=2 width=8) (actual time=152525.840..162055.454 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18438984.97..18438984.98 rows=1 width=8) (actual time=152468.855..152468.855 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18077817.68 rows=144466917 width=0) (actual time=117662.886..151013.986 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..16091088.57 rows=144466917 width=8) (actual time=117657.473..144572.432 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1304602.38..14104652.21 rows=144466917 width=16) (actual time=117656.735..139447.086 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..12116639.10 rows=144466917 width=16) (actual time=117629.772..129899.337 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=101781.234..111693.636 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=73334.516..91585.257 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.164..5317.006 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.907..2323.686 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.203..1.203 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.184..1.186 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53123.717..53123.718 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.166..8433.246 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1585.044..1585.045 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.967..490.755 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=253.864..253.864 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.049..109.514 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.613..26.613 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.455..13.399 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.691..0.691 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.486..0.570 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.970..4.970 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.697 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:10:37.206 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,230,"",2021-03-19 23:47:13 CET,6/301,0,LOG,00000,"duration: 112489.891 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108421.733..108421.733 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108418.030..112489.268 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=108367.442..108367.442 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99986.171..107162.426 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=58457.451..91523.149 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=58452.832..84593.478 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=58452.024..79481.602 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=58451.304..73973.043 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12334.254..39589.235 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12310.614..27454.155 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.715..6185.980 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=270.280..270.281 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.800..118.702 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.287..23.287 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.709..11.928 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7844.631..7844.631 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.807..2825.461 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.687..0.687 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.678..0.680 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.780..0.780 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.595..0.690 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.515..4.516 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.759..2.574 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1278.656..1278.656 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.929..526.018 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:12:28.586 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,231,"",2021-03-19 23:47:13 CET,6/302,0,LOG,00000,"duration: 111337.957 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=107951.346..107951.346 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=107947.385..111337.204 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=107899.590..107899.591 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=73355.579..106403.365 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..17056868.61 rows=144466917 width=8) (actual time=73354.523..101044.183 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..15070139.50 rows=144466917 width=16) (actual time=73349.399..94959.947 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=73323.337..85562.567 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=57705.072..67532.469 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24169.374..46802.637 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24168.627..40193.173 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.986..6922.076 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6931.372..6931.372 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.594..2550.419 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.697 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.686..0.688 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1302.319..1302.319 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.897..501.435 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.609..227.609 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.393..104.840 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.728..25.728 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.632..12.803 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.989..4.989 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.699 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.575..0.693 rows=500 loops=3)",,,,,,,,,""
2021-03-20 06:14:20.108 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,232,"",2021-03-19 23:47:13 CET,6/303,0,LOG,00000,"duration: 111457.296 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=107774.191..107774.191 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=107770.341..111457.166 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=107717.069..107717.069 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=92686.020..106532.901 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12592089.31 rows=144466918 width=8) (actual time=92680.446..101063.308 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9752178.86 rows=144466918 width=16) (actual time=56125.499..82458.343 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=56124.508..76502.250 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56123.926..71078.346 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11799.111..38140.634 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11776.268..26574.744 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.160..5769.369 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.566..241.567 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.613..110.835 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.505..22.506 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.867..11.899 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7471.894..7471.894 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.872..2694.123 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.551..0.552 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.538..0.540 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.942..0.942 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.740..0.833 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2122.084..2122.084 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.932..516.502 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.273..5.274 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.500..2.778 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:16:14.918 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,233,"",2021-03-19 23:47:13 CET,6/304,0,LOG,00000,"duration: 114756.471 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=110852.868..110852.868 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=110849.324..114755.960 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=110799.550..110799.550 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=90713.060..109479.520 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=90712.215..104720.117 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531437.75..3588243.48 rows=24077820 width=16) (actual time=90711.287..100017.073 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=56250.804..80683.234 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56245.285..72496.913 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11725.416..37747.319 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11703.804..26147.755 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.916..5801.276 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.279..235.280 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.626..106.156 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.166..21.167 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.758..11.173 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6978.320..6978.320 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.678..2474.780 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.380..5.380 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.882..2.940 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1213.901..1213.901 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.971..495.793 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.907..0.907 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.670..0.775 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.630..0.630 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.607..0.609 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:18:07.749 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,234,"",2021-03-19 23:47:13 CET,6/305,0,LOG,00000,"duration: 112786.030 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109337.312..109337.313 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109333.460..112785.888 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109284.939..109284.940 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100546.819..108030.396 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=44714.261..91504.724 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=44708.968..83741.498 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=44708.317..78491.082 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=44685.568..67120.148 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44684.687..61113.004 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11887.383..25675.125 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.037..5887.882 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.073..243.074 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.012..111.936 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8261.436..8261.437 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.608..2696.366 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.850..0.850 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.660..0.745 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.425..22.426 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.570..11.758 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.622..0.622 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.613..0.614 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.189..5.189 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.001..3.034 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.641..1335.641 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.993..527.855 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:20:02.898 CET,,,5184,,6055275a.1440,8,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 06:20:03.462 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,235,"",2021-03-19 23:47:13 CET,6/306,0,LOG,00000,"duration: 115652.572 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=111883.501..111883.501 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=111878.590..115651.989 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=111824.395..111824.396 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=71228.966..110107.194 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=71223.666..103093.098 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=71222.886..98163.415 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=71222.351..92869.491 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=71196.697..83059.120 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43171.117..59976.683 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11863.004..25487.426 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.040..5919.953 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.641..243.644 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.806..110.122 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7633.791..7633.791 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.131..2621.449 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.196..1323.196 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.105..519.076 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.305..25.305 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.578..12.700 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.502..0.502 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.485..0.486 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.751..0.751 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.625 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.974..4.974 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.594..2.742 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:20:07.690 CET,,,5204,,605585f7.1454,1,,2021-03-20 06:19:51 CET,8/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 06:21:57.844 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,236,"",2021-03-19 23:47:13 CET,6/307,0,LOG,00000,"duration: 114326.169 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=110305.103..110305.103 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=110301.533..114325.626 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=110246.976..110246.976 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=90485.470..108993.570 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=90484.394..104201.282 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531437.75..3588243.48 rows=24077820 width=16) (actual time=90483.489..99488.141 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55623.230..80468.863 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55618.827..72032.898 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11596.212..36906.263 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11572.834..25612.497 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.951..5747.873 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=279.315..279.316 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.808..108.245 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.934..22.934 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.772..12.190 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7964.778..7964.778 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.834..2673.839 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.304..4.304 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.742..2.472 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.869..1279.869 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.113..519.769 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.876..0.876 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.684..0.775 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.855..0.855 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.825..0.827 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:23:46.436 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,237,"",2021-03-19 23:47:13 CET,6/308,0,LOG,00000,"duration: 108524.325 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=17082916.44..17082916.45 rows=1 width=8) (actual time=105449.259..105449.260 rows=1 loops=1)
  ->  Gather  (cost=17082916.23..17082916.44 rows=2 width=8) (actual time=105445.076..108523.672 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=17081916.23..17081916.24 rows=1 width=8) (actual time=105392.303..105392.303 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..16720748.94 rows=144466917 width=0) (actual time=96628.810..104177.254 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..14163000.49 rows=144466917 width=8) (actual time=57931.691..88587.131 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..12176271.38 rows=144466917 width=16) (actual time=57927.033..81561.773 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=432907.63..10188258.27 rows=144466917 width=16) (actual time=57904.715..71246.675 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=411187.63..7535213.29 rows=150000000 width=16) (actual time=25355.263..51863.481 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25353.984..46471.591 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25353.026..40495.919 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.049..6998.024 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7846.563..7846.563 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.831..2542.821 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.925..0.925 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.715..0.817 rows=500 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.224..1.225 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.206..1.208 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.943..247.943 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.113..109.938 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.989..21.989 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.608..11.309 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.547..4.547 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.950..2.629 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1284.387..1284.388 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.902..496.780 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:25:42.517 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,238,"",2021-03-19 23:47:13 CET,6/309,0,LOG,00000,"duration: 116013.730 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12794654.86..12794654.87 rows=1 width=8) (actual time=111688.313..111688.313 rows=1 loops=1)
  ->  Gather  (cost=12794654.64..12794654.85 rows=2 width=8) (actual time=111684.602..116012.609 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12793654.64..12793654.65 rows=1 width=8) (actual time=111631.119..111631.119 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12432487.35 rows=144466918 width=0) (actual time=77906.372..110096.473 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10445758.23 rows=144466918 width=8) (actual time=77901.775..103600.543 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8457745.10 rows=144466918 width=8) (actual time=77878.710..94494.404 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=529552.00..3341171.35 rows=24077820 width=16) (actual time=77877.999..89887.341 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=53327.548..67245.050 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24899.531..46494.073 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24898.079..39944.210 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.825..7038.887 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7956.116..7956.117 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.964..2622.619 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.404..1.408 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.122..1.239 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=267.047..267.047 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.904..120.061 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.380..1280.380 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.816..516.298 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.672..0.672 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.652..0.654 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.667..22.667 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.537..11.454 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.295..4.295 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.358 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:27:35.251 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,239,"",2021-03-19 23:47:13 CET,6/310,0,LOG,00000,"duration: 112673.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12765088.18..12765088.19 rows=1 width=8) (actual time=108759.275..108759.275 rows=1 loops=1)
  ->  Gather  (cost=12765087.96..12765088.17 rows=2 width=8) (actual time=108751.402..112673.131 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12764087.96..12764087.97 rows=1 width=8) (actual time=108698.322..108698.323 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12402920.67 rows=144466918 width=0) (actual time=74628.635..107084.620 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10416191.55 rows=144466918 width=8) (actual time=74623.190..100611.902 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8428178.42 rows=144466918 width=8) (actual time=74599.894..91643.716 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=529552.00..3311604.67 rows=24077820 width=16) (actual time=74599.164..86908.298 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507832.00..2849633.34 rows=25000000 width=16) (actual time=58636.706..68704.908 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25437.722..48841.431 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25436.731..41705.275 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.911..6995.250 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7437.730..7437.730 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.709..2681.925 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.948..0.948 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.717..0.819 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1330.847..1330.848 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.982..497.588 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.254..229.254 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.856..108.669 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.695..0.696 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.678..0.679 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.982..22.982 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.468..11.622 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.134..5.134 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.455..2.736 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:29:27.155 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,240,"",2021-03-19 23:47:13 CET,6/311,0,LOG,00000,"duration: 111846.393 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=108048.820..108048.821 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=108043.857..111845.851 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=107990.974..107990.974 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=93691.286..106789.630 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..14247732.16 rows=144466918 width=8) (actual time=93690.257..101950.738 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..11407821.70 rows=144466918 width=16) (actual time=42555.798..84449.457 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..9421092.58 rows=144466918 width=24) (actual time=42551.447..76287.764 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42530.344..64630.340 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42529.466..59222.567 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11803.530..25552.521 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.188..5850.140 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=254.947..254.948 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.095..115.197 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6947.635..6947.635 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.733..2525.021 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.848..0.848 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.830..0.831 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.796..20.797 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.561..10.720 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.237..4.237 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.790..2.448 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.057..1304.057 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.947..565.323 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.822..0.822 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.538..0.665 rows=500 loops=3)",,,,,,,,,""
2021-03-20 06:31:15.493 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,241,"",2021-03-19 23:47:13 CET,6/312,0,LOG,00000,"duration: 108271.215 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=13238607.85..13238607.86 rows=1 width=8) (actual time=104521.844..104521.844 rows=1 loops=1)
  ->  Gather  (cost=13238607.63..13238607.84 rows=2 width=8) (actual time=104517.884..108271.064 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13237607.63..13237607.64 rows=1 width=8) (actual time=104463.173..104463.173 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12876440.34 rows=144466918 width=0) (actual time=88939.678..103138.098 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..10890003.96 rows=144466918 width=8) (actual time=88938.501..97897.886 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..8050093.51 rows=144466918 width=16) (actual time=60413.147..80492.235 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=434756.38..2933519.76 rows=24077820 width=24) (actual time=60412.278..74664.743 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=11347.845..43032.918 rows=20000000 loops=3)
                                            Hash Cond: (sub.category_id = cat.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11342.136..35733.443 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11318.708..25019.270 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.069..5607.182 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.626..221.626 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.545..100.474 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.956..22.957 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.596..11.727 rows=50000 loops=3)
                                            ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.567..5.568 rows=10000 loops=3)
                                                  Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                  ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.901..3.117 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6900.517..6900.517 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.708..2511.575 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.810..0.811 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.796..0.798 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.918..1318.918 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.035..559.670 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.916 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.604..0.751 rows=500 loops=3)",,,,,,,,,""
2021-03-20 06:32:54.988 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,242,"",2021-03-19 23:47:13 CET,6/313,0,LOG,00000,"duration: 99438.141 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10797796.48..10797796.49 rows=1 width=8) (actual time=95968.891..95968.891 rows=1 loops=1)
  ->  Gather  (cost=10797796.26..10797796.47 rows=2 width=8) (actual time=95961.954..99437.637 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10796796.26..10796796.27 rows=1 width=8) (actual time=95910.078..95910.079 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10435628.97 rows=144466918 width=0) (actual time=54837.334..94243.092 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8448899.84 rows=144466918 width=8) (actual time=54831.203..87307.963 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3332326.09 rows=24077820 width=16) (actual time=54830.365..82911.751 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=721452.79..3001239.82 rows=24077820 width=24) (actual time=54829.386..77213.063 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=54804.284..67520.136 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=33592.922..47351.372 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.135..7014.493 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16672.559..16672.559 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7528.960..12383.674 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.718..2586.076 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1420.673..1420.674 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.001..549.955 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.179..247.179 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.927..108.920 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.689..24.689 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.728..12.975 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.959..0.959 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.733..0.845 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.806..0.806 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.785..0.786 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.778..5.778 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.740..3.090 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:34:48.198 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,243,"",2021-03-19 23:47:13 CET,6/314,0,LOG,00000,"duration: 113158.716 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109730.667..109730.668 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109726.120..113158.054 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109672.903..109672.903 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100634.653..108374.528 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=44546.676..91997.412 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=44542.397..84101.048 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=44541.774..78772.192 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=44520.563..67176.828 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44519.601..61064.099 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12458.418..26031.408 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.155..6189.009 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.681..247.681 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.033..107.740 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7722.845..7722.845 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.618..2701.692 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.923 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.724..0.814 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.901..20.902 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.450..10.577 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.598..0.599 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.587..0.588 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.169..4.170 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.795..2.402 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1203.760..1203.760 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.875..483.646 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:37:25.276 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,244,"",2021-03-19 23:47:13 CET,6/315,0,LOG,00000,"duration: 157022.194 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=148347.816..148347.816 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=148343.073..157021.421 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=148292.308..148292.308 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=139396.263..147091.163 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=91787.481..130274.418 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1208230.00..13146716.94 rows=144466917 width=16) (actual time=91786.483..124438.047 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=91781.761..117171.862 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91759.302..106221.804 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69879.248..84947.914 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.349..4810.328 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.652..2087.053 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.645..0.646 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.631 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50621.458..50621.458 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.902..8259.038 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.396..229.397 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.662..99.848 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.105..22.105 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..11.278 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.600..4.600 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.437 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.959..0.960 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.732..0.830 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2178.598..2178.598 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..479.444 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:39:20.205 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,245,"",2021-03-19 23:47:13 CET,6/316,0,LOG,00000,"duration: 114870.939 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16718367.71..16718367.72 rows=1 width=8) (actual time=110501.616..110501.616 rows=1 loops=1)
  ->  Gather  (cost=16718367.50..16718367.71 rows=2 width=8) (actual time=110496.511..114870.830 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16717367.50..16717367.51 rows=1 width=8) (actual time=110450.974..110450.974 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16356200.20 rows=144466918 width=0) (actual time=95761.012..109220.401 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..14369763.83 rows=144466918 width=8) (actual time=95760.007..104257.092 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..11529853.37 rows=144466918 width=16) (actual time=47385.533..86640.691 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..9543124.25 rows=144466918 width=24) (actual time=47381.269..78558.767 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7555111.13 rows=144466918 width=24) (actual time=47358.348..67614.283 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47357.266..62256.406 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25152.728..39897.285 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.556..7109.366 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7439.171..7439.171 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.755..2708.159 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.907..226.907 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.791..101.542 rows=333333 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.051..1.051 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.039..1.040 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.563..22.563 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.748..11.878 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.171..4.171 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.717..2.383 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1478.545..1478.545 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.813..499.729 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.798..0.798 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.526..0.649 rows=500 loops=3)",,,,,,,,,""
2021-03-20 06:41:13.202 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,246,"",2021-03-19 23:47:13 CET,6/317,0,LOG,00000,"duration: 112940.318 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109471.320..109471.320 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109467.222..112939.883 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109414.611..109414.611 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=100795.901..108168.723 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=43003.099..91960.384 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=42998.202..83824.091 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=42997.761..78890.963 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42997.152..72679.835 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42974.233..60343.081 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12021.704..25548.950 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..5920.577 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.232..241.233 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.820..105.352 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7445.877..7445.877 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.839..2724.377 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.603..22.603 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.409..11.549 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.585..0.586 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.387..0.475 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.412..0.412 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.402..0.403 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.784..4.784 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.492 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1186.629..1186.629 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.050..489.337 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:43:10.598 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,247,"",2021-03-19 23:47:13 CET,6/318,0,LOG,00000,"duration: 117335.773 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=112545.872..112545.872 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=112542.449..117335.648 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=112484.037..112484.037 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=103335.926..111261.039 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=47227.468..93602.291 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..9874210.53 rows=144466918 width=16) (actual time=47223.230..85760.874 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=47222.599..80164.988 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47221.989..74477.245 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47201.057..62763.865 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24899.882..39727.526 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.961..7105.451 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7111.275..7111.275 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.000..2612.786 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=226.886..226.886 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.739..101.409 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.651..20.651 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.416..10.675 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.590..0.591 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.582..0.583 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.608..0.609 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.439..0.516 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.144..4.144 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.702..2.354 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.999..1236.999 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.060..498.618 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:45:03.826 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,248,"",2021-03-19 23:47:13 CET,6/319,0,LOG,00000,"duration: 113162.333 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=109950.860..109950.860 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=109945.952..113161.646 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=109890.123..109890.124 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=101086.180..108625.567 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=42623.858..91086.883 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..8097121.51 rows=144466918 width=16) (actual time=42622.835..84528.096 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=42622.254..79590.387 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42617.832..71774.241 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42596.007..59588.441 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11827.336..25287.192 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.787..5839.141 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.342..237.343 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.814..106.163 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7579.584..7579.585 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.806..2833.820 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.533..21.534 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..11.127 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.335..4.336 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.530..2.353 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.562..0.562 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.548..0.549 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.947..0.947 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.752..0.840 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1234.760..1234.760 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.751..504.368 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:46:38.458 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,249,"",2021-03-19 23:47:13 CET,6/320,0,LOG,00000,"duration: 94583.881 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16229817.41..16229817.42 rows=1 width=8) (actual time=91126.508..91126.508 rows=1 loops=1)
  ->  Gather  (cost=16229817.19..16229817.40 rows=2 width=8) (actual time=91118.225..94583.364 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16228817.19..16228817.20 rows=1 width=8) (actual time=91035.502..91035.502 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..15867649.90 rows=144466917 width=0) (actual time=65260.504..89792.641 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..13880920.79 rows=144466917 width=8) (actual time=65255.989..83803.737 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=719913.04..11892907.68 rows=144466917 width=8) (actual time=65232.534..75629.324 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=698193.04..9532830.71 rows=150000000 width=8) (actual time=34569.087..59568.233 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=698176.79..7470314.46 rows=150000000 width=16) (actual time=34568.023..53898.208 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34567.307..48624.590 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.102..6844.577 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=18176.489..18176.490 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8552.857..13612.501 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.290..3345.170 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1370.794..1370.794 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.049..510.309 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.686..0.687 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.679..0.680 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.032..1.032 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.815..0.915 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.251..239.251 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.946..107.459 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.143..23.143 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.553..11.810 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.229..4.229 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.553..2.429 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:48:32.910 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,250,"",2021-03-19 23:47:13 CET,6/321,0,LOG,00000,"duration: 114395.924 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=110424.010..110424.010 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=110420.473..114395.289 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=110373.610..110373.610 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=82988.563..108887.955 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..10407195.33 rows=144466918 width=8) (actual time=82987.524..103593.413 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=82982.492..98038.120 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=82981.940..93333.723 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=56220.059..72442.381 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12294.386..38618.575 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12272.754..26902.105 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.903..6015.290 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.221..228.222 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.651..101.546 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.276..21.276 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.713..11.265 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7213.068..7213.068 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.734..2656.231 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.008..1259.008 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.953..510.223 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.526..0.526 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.507..0.508 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.935..4.935 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.629 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.822..0.822 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.558..0.681 rows=500 loops=3)",,,,,,,,,""
2021-03-20 06:51:10.864 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,251,"",2021-03-19 23:47:13 CET,6/322,0,LOG,00000,"duration: 157894.146 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=148247.805..148247.805 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=148243.734..157894.007 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=148183.930..148183.930 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=139173.788..146968.705 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=92745.544..131134.909 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=92739.029..123827.682 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=1206344.25..11158411.08 rows=144466917 width=16) (actual time=92716.112..113240.995 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=92714.469..107367.566 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71310.067..85935.761 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.099..4748.049 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.835..2063.803 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.204..1.205 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.178..1.181 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52366.421..52366.421 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.735..8094.994 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=245.990..245.990 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.576..100.268 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.608..1.609 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.421..1.503 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.498..22.498 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.753..11.634 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.358..6.358 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.043..3.558 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1241.436..1241.436 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.997..474.989 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:52:50.398 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,252,"",2021-03-19 23:47:13 CET,6/323,0,LOG,00000,"duration: 99471.996 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9119758.17..9119758.18 rows=1 width=8) (actual time=95648.357..95648.357 rows=1 loops=1)
  ->  Gather  (cost=9119757.95..9119758.16 rows=2 width=8) (actual time=95644.312..99471.060 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9118757.95..9118757.96 rows=1 width=8) (actual time=95560.654..95560.654 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8757590.66 rows=144466918 width=0) (actual time=68364.708..94106.353 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=537183.18..3641016.91 rows=24077820 width=8) (actual time=68363.925..89113.325 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=537166.93..3309930.63 rows=24077820 width=16) (actual time=68363.172..84312.353 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=536857.93..2978551.61 rows=24077820 width=24) (actual time=68358.641..78473.899 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42123.254..57579.034 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11655.372..24628.845 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.701..5535.202 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=782.553..782.553 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.809..305.369 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.289..92.827 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.148..22.149 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.773..11.720 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7505.848..7505.848 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.561..2739.485 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1475.900..1475.900 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.819..511.545 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.420..4.420 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..2.442 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.729..0.729 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.503..0.616 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.540..0.540 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.515..0.517 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:54:45.282 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,253,"",2021-03-19 23:47:13 CET,6/324,0,LOG,00000,"duration: 114829.621 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=111174.732..111174.732 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=111169.263..114829.239 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=111119.000..111119.001 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=81798.113..109549.709 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=81797.350..104284.647 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3635271.48 rows=24077820 width=16) (actual time=81796.557..99141.062 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=81791.259..92922.831 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55755.802..71855.640 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12647.356..38246.718 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12625.165..26846.106 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..6058.367 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=514.898..514.898 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.608..103.847 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.827..21.827 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.659..11.184 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7547.603..7547.604 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.145..2612.211 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1299.652..1299.652 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.794..479.373 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.213..5.213 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.522..2.805 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.766..0.766 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.511..0.625 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.541..0.541 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.512..0.514 rows=4 loops=3)",,,,,,,,,""
2021-03-20 06:56:17.426 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,254,"",2021-03-19 23:47:13 CET,6/325,0,LOG,00000,"duration: 92097.835 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10499930.01..10499930.02 rows=1 width=8) (actual time=88870.550..88870.550 rows=1 loops=1)
  ->  Gather  (cost=10499929.80..10499930.01 rows=2 width=8) (actual time=88864.747..92097.312 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10498929.80..10498929.81 rows=1 width=8) (actual time=88811.509..88811.509 rows=1 loops=3)
              ->  Hash Join  (cost=811984.61..10137762.50 rows=144466918 width=0) (actual time=55790.711..87377.392 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=811675.61..8151033.38 rows=144466918 width=8) (actual time=55785.914..81135.103 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=811638.61..3034459.63 rows=24077820 width=16) (actual time=55785.337..76557.814 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=810045.61..2701796.61 rows=24077820 width=16) (actual time=55762.064..67335.015 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=35716.604..49141.157 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.858..7333.037 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=18272.199..18272.200 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9115.134..13656.476 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.560..3973.181 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.900..1619.971 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.618..0.618 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.444..0.523 rows=500 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2508.348..2508.348 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.960..499.948 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.042..225.042 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.915..99.377 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.936..22.936 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.526..11.654 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.550..0.550 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.532..0.533 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.516..4.516 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.763..2.636 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 06:58:06.422 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,255,"",2021-03-19 23:47:13 CET,6/326,0,LOG,00000,"duration: 108935.044 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11188564.96..11188564.97 rows=1 width=8) (actual time=105347.502..105347.502 rows=1 loops=1)
  ->  Gather  (cost=11188564.74..11188564.95 rows=2 width=8) (actual time=105343.915..108934.867 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11187564.74..11187564.75 rows=1 width=8) (actual time=105284.548..105284.549 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=637936.57..10826397.45 rows=144466918 width=0) (actual time=95872.278..103975.735 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=541255.19..8268648.99 rows=144466918 width=8) (actual time=48694.282..87491.362 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=541218.19..3152075.24 rows=24077820 width=16) (actual time=48693.372..82054.511 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=540909.19..2820696.22 rows=24077820 width=24) (actual time=48688.554..74544.342 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=48666.839..63218.889 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26806.997..41066.633 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.966..6862.096 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9434.595..9434.596 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.861..4480.898 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.842..1899.720 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.982..0.982 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.779..0.866 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=318.114..318.115 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.573..104.345 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.428..21.429 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.616..10.706 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.734..4.735 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.587..2.524 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.842..0.842 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.828..0.830 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1234.332..1234.332 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.026..484.767 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 06:59:39.920 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,256,"",2021-03-19 23:47:13 CET,6/327,0,LOG,00000,"duration: 93435.831 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8844579.92..8844579.93 rows=1 width=8) (actual time=90457.221..90457.221 rows=1 loops=1)
  ->  Gather  (cost=8844579.70..8844579.91 rows=2 width=8) (actual time=90452.239..93435.282 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8843579.70..8843579.71 rows=1 width=8) (actual time=90403.316..90403.316 rows=1 loops=3)
              ->  Hash Join  (cost=811984.61..8482412.41 rows=144466918 width=0) (actual time=54212.031..88829.031 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=811947.61..3365838.66 rows=24077820 width=8) (actual time=54211.223..83541.553 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=811638.61..3034459.63 rows=24077820 width=16) (actual time=54206.369..76984.988 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=810045.61..2701796.61 rows=24077820 width=16) (actual time=54184.760..66925.116 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=34965.051..48224.623 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.908..7099.365 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=17325.680..17325.680 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8805.118..13266.243 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.879..3895.372 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.921..1588.859 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.904..0.905 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.617..0.737 rows=500 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1345.891..1345.891 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.141..485.546 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.181..228.181 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.884..97.413 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.280..21.280 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..10.936 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.758..4.758 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.580 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.512..0.512 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.483..0.485 rows=4 loops=3)",,,,,,,,,""
2021-03-20 07:01:34.166 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,257,"",2021-03-19 23:47:13 CET,6/328,0,LOG,00000,"duration: 114183.803 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=110038.127..110038.127 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=110034.073..114183.297 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=109981.718..109981.718 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=93795.356..108694.733 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=93790.706..102820.365 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=42863.618..84131.118 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..9421092.58 rows=144466918 width=24) (actual time=42862.553..77264.553 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42837.593..65585.889 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42836.455..59943.117 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11647.076..24733.259 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.036..5783.849 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.526..237.530 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.943..104.191 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7341.675..7341.676 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.609..2489.741 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.106..1.106 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.092..1.093 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.667..24.668 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.494..12.454 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.022..1.022 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.789..0.898 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1189.647..1189.647 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.868..465.632 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.368..4.368 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.604..2.481 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:03:28.153 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,258,"",2021-03-19 23:47:13 CET,6/329,0,LOG,00000,"duration: 113923.558 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13371519.49..13371519.50 rows=1 width=8) (actual time=110305.447..110305.447 rows=1 loops=1)
  ->  Gather  (cost=13371519.28..13371519.49 rows=2 width=8) (actual time=110303.277..113923.419 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13370519.28..13370519.29 rows=1 width=8) (actual time=110241.716..110241.716 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..13009351.98 rows=144466918 width=0) (actual time=93216.002..108924.236 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..11022622.86 rows=144466918 width=8) (actual time=93210.579..102821.327 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..8182712.40 rows=144466918 width=16) (actual time=53462.471..84599.648 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..3066138.65 rows=24077820 width=24) (actual time=53461.678..78346.925 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=53439.541..67457.630 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=24366.394..45655.632 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24365.405..39194.550 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.954..7107.555 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6817.570..6817.573 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.712..2498.606 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.944..0.944 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.773..0.851 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.689..227.689 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.601..100.912 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.870..21.870 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.464..11.070 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.752..0.752 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.735..0.737 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1164.468..1164.468 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.780..467.244 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.095..5.096 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.485..2.731 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:05:16.172 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,259,"",2021-03-19 23:47:13 CET,6/330,0,LOG,00000,"duration: 107975.073 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19188584.37..19188584.38 rows=1 width=8) (actual time=104531.916..104531.916 rows=1 loops=1)
  ->  Gather  (cost=19188584.15..19188584.36 rows=2 width=8) (actual time=104527.171..107974.835 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19187584.15..19187584.16 rows=1 width=8) (actual time=104480.371..104480.372 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18826416.86 rows=144466917 width=0) (actual time=79804.949..103313.725 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..16839687.75 rows=144466917 width=8) (actual time=79800.074..97579.195 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..14851674.64 rows=144466917 width=8) (actual time=79776.457..89837.345 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=507869.00..12491597.67 rows=150000000 width=8) (actual time=59115.908..74705.864 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=59114.767..69459.955 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=25165.197..48775.704 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25164.353..41897.586 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.005..7173.164 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8049.993..8049.994 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.869..2616.290 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.798..0.799 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.781..0.783 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1414.857..1414.857 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.927..521.223 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.105..1.105 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.885..0.976 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.575..237.575 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.947..104.563 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.290..23.290 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.622..11.832 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.591..4.591 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..2.511 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:07:26.694 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,260,"",2021-03-19 23:47:13 CET,6/331,0,LOG,00000,"duration: 130451.555 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14466588.70..14466588.71 rows=1 width=8) (actual time=123004.847..123004.847 rows=1 loops=1)
  ->  Gather  (cost=14466588.48..14466588.69 rows=2 width=8) (actual time=122999.856..130450.980 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14465588.48..14465588.49 rows=1 width=8) (actual time=122946.089..122946.089 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..14104421.19 rows=144466917 width=0) (actual time=94760.920..121668.819 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..12117692.08 rows=144466917 width=8) (actual time=94756.171..115237.144 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..10129678.97 rows=144466917 width=8) (actual time=94731.417..106397.997 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7769602.00 rows=150000000 width=8) (actual time=76682.717..89533.953 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96734.63..3759830.63 rows=50000100 width=8) (actual time=9934.860..14370.354 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=2.924..6158.476 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.410..4047.830 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.738..1803.007 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.611..0.612 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.599..0.600 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.478..1.478 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.305..1.381 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1261.187..1261.187 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.168..508.596 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52419.733..52419.734 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.660..8028.347 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.981..247.981 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..106.074 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.369..24.369 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..11.907 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.424..4.424 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.517..2.399 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:09:21.063 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,261,"",2021-03-19 23:47:13 CET,6/332,0,LOG,00000,"duration: 114300.982 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16843623.15..16843623.16 rows=1 width=8) (actual time=110508.277..110508.278 rows=1 loops=1)
  ->  Gather  (cost=16843622.93..16843623.14 rows=2 width=8) (actual time=110504.075..114300.213 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16842622.93..16842622.94 rows=1 width=8) (actual time=110455.091..110455.091 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16481455.64 rows=144466917 width=0) (actual time=75671.372..108973.237 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14494726.53 rows=144466917 width=8) (actual time=75666.782..102484.560 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..12508290.17 rows=144466917 width=16) (actual time=75666.029..97417.073 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10520277.06 rows=144466917 width=16) (actual time=75640.645..87916.948 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=507852.75..7867232.09 rows=150000000 width=16) (actual time=53566.810..69872.928 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=53565.861..64688.834 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25454.093..41759.167 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.895..7058.131 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7662.959..7662.960 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.219..2749.413 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1569.242..1569.242 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.856..506.117 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.911..0.911 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.890..0.892 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=329.217..329.218 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.586..131.377 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.104..25.104 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.580..12.884 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.735..0.735 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.544..0.631 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.307..4.307 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.638..2.496 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:11:09.828 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,262,"",2021-03-19 23:47:13 CET,6/333,0,LOG,00000,"duration: 108702.906 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=104567.676..104567.676 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=104563.685..108702.330 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=104513.367..104513.367 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=95789.421..103237.372 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=54800.275..87876.844 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=54799.284..82096.569 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=54795.162..75807.168 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=54794.674..70290.322 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11739.889..36783.228 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11713.767..25598.823 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.136..5802.072 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.232..243.232 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.855..106.539 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.778..25.778 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.712..12.613 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7223.775..7223.775 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.616..2591.566 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.461..0.462 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.450..0.452 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.035..4.035 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.518..2.199 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.951..0.951 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.711..0.808 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1243.236..1243.237 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.936..483.618 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:12:49.289 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,263,"",2021-03-19 23:47:13 CET,6/334,0,LOG,00000,"duration: 99403.039 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=95784.579..95784.579 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=95781.129..99402.391 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=95728.410..95728.410 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=81486.696..94504.773 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537203.93..10611691.11 rows=144466918 width=8) (actual time=81485.592..89674.709 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440522.55..7771780.66 rows=144466918 width=16) (actual time=44251.992..72612.172 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440485.55..2655206.91 rows=24077820 width=24) (actual time=44251.141..66973.109 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44245.986..59818.540 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12989.591..26618.462 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.969..6794.423 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=416.874..416.874 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.335..289.468 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.029..91.404 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.944..21.945 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.580..11.255 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7286.189..7286.190 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.718..2587.285 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.064..5.065 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.791..2.783 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.797..0.807 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.783..0.786 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1243.702..1243.702 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.082..488.990 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.852..0.852 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.609..0.721 rows=500 loops=3)",,,,,,,,,""
2021-03-20 07:15:23.136 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,264,"",2021-03-19 23:47:13 CET,6/335,0,LOG,00000,"duration: 153792.054 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18223097.07..18223097.08 rows=1 width=8) (actual time=144637.794..144637.795 rows=1 loops=1)
  ->  Gather  (cost=18223096.86..18223097.07 rows=2 width=8) (actual time=144633.758..153791.458 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18222096.86..18222096.87 rows=1 width=8) (actual time=144577.438..144577.438 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17860929.57 rows=144466917 width=0) (actual time=117155.686..143312.923 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..15874200.46 rows=144466917 width=8) (actual time=117149.650..137020.529 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..13886187.35 rows=144466917 width=8) (actual time=117116.290..128379.559 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=1281305.63..11526110.38 rows=150000000 width=8) (actual time=97024.324..112056.205 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..9463594.13 rows=150000000 width=16) (actual time=97023.369..106804.128 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71488.177..87069.879 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.068..4782.863 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.893..2092.328 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.113..1.114 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.085..1.090 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52085.630..52085.630 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.641..9100.871 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2388.297..2388.298 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.777..496.210 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.916 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.754..0.829 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=270.823..270.823 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.199..122.089 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.016..33.016 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.561..16.670 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.615..5.615 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.620..3.071 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:17:06.438 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,265,"",2021-03-19 23:47:13 CET,6/336,0,LOG,00000,"duration: 103228.834 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=99184.370..99184.370 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=99179.825..103228.701 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=99126.845..99126.846 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=77030.826..97831.070 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..12548910.46 rows=144466918 width=8) (actual time=77024.785..91778.497 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=77023.888..86816.830 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=44799.885..67056.069 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44799.021..60451.961 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13775.115..26533.232 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.946..7395.402 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=432.272..432.272 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.234..299.285 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.904..97.151 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.032..22.033 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.502..11.418 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7390.259..7390.259 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.401..2598.776 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.823..0.823 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.803..0.805 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.955..1226.955 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.881..487.897 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.874..0.874 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.618..0.738 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.632..5.632 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.945 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:18:48.391 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,266,"",2021-03-19 23:47:13 CET,6/337,0,LOG,00000,"duration: 101902.339 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9072730.17..9072730.18 rows=1 width=8) (actual time=98075.125..98075.125 rows=1 loops=1)
  ->  Gather  (cost=9072729.95..9072730.16 rows=2 width=8) (actual time=98071.001..101901.749 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9071729.95..9071729.96 rows=1 width=8) (actual time=98007.408..98007.409 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8710562.66 rows=144466918 width=0) (actual time=76810.685..96769.079 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=537183.18..3593988.91 rows=24077820 width=8) (actual time=76809.357..91944.598 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=536874.18..3262609.88 rows=24077820 width=16) (actual time=76801.945..86369.319 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=42874.085..66164.436 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42872.921..58982.255 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12423.322..25309.364 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.024..6139.033 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=440.053..440.053 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.786..307.934 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.992..96.443 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.455..22.456 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.605..11.487 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7648.198..7648.199 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.897..2808.941 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.117..1.117 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.936..1.018 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.322..1238.322 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.414..488.164 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.275..7.275 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.811..3.839 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.885..0.885 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.716..0.719 rows=4 loops=3)",,,,,,,,,""
2021-03-20 07:20:42.688 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,267,"",2021-03-19 23:47:13 CET,6/338,0,LOG,00000,"duration: 114228.847 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15026869.59..15026869.60 rows=1 width=8) (actual time=110373.404..110373.404 rows=1 loops=1)
  ->  Gather  (cost=15026869.37..15026869.58 rows=2 width=8) (actual time=110368.474..114227.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15025869.37..15025869.38 rows=1 width=8) (actual time=110315.829..110315.829 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14664702.08 rows=144466918 width=0) (actual time=94445.726..109071.154 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12677972.96 rows=144466918 width=8) (actual time=94440.563..103320.595 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9838062.50 rows=144466918 width=16) (actual time=54823.924..85754.775 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..7850049.38 rows=144466918 width=16) (actual time=54801.143..74548.717 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=54800.467..69198.949 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=26005.503..47898.764 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26004.527..41274.432 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.147..7409.201 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8202.058..8202.058 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.703..2720.779 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.927..0.927 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.723..0.817 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=268.989..268.990 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.570..109.050 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.631..0.631 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.621..0.622 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.439..22.439 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.871..11.786 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.955..1255.956 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.143..486.535 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.861..4.862 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.798..2.744 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:22:36.959 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,268,"",2021-03-19 23:47:13 CET,6/339,0,LOG,00000,"duration: 114224.639 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=110216.500..110216.500 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=110212.637..114224.121 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=110156.966..110156.966 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=94401.770..108885.767 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=94397.034..103154.025 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=45150.796..84932.657 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=45123.627..72919.325 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=45122.438..67523.551 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=45121.727..61700.680 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11395.897..25452.422 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.064..5777.475 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.200..234.201 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.879..104.891 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7932.789..7932.789 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.888..2683.485 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.682..0.682 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.667..0.669 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.148..1.148 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.828..0.977 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.832..26.832 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.640..13.243 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1201.009..1201.009 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.786..473.032 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.446..4.446 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.544..2.459 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:24:26.508 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,269,"",2021-03-19 23:47:13 CET,6/340,0,LOG,00000,"duration: 109489.512 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=105740.950..105740.951 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=105737.076..109488.846 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=105683.296..105683.296 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=97389.914..104500.736 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=54439.685..88630.565 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=54438.384..82635.526 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=54432.923..76066.041 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=54432.116..70398.730 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11949.661..36610.295 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11929.586..25625.655 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.080..5971.961 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=206.996..206.997 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.648..92.166 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=19.725..19.725 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..10.379 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7003.835..7003.835 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.762..2557.539 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.770..0.770 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.756..0.757 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.357..5.357 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.763..2.954 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.244..1.244 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.016..1.118 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.455..1226.455 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.018..496.137 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:27:03.205 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,270,"",2021-03-19 23:47:13 CET,6/341,0,LOG,00000,"duration: 156635.774 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=147596.994..147596.995 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=147592.710..156635.530 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=147500.166..147500.167 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=137989.166..146195.940 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=91949.149..129999.439 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=91943.737..122786.415 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=1206344.25..11158411.08 rows=144466917 width=16) (actual time=91921.176..112321.086 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91920.212..106484.798 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69991.646..85016.546 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.174..4906.461 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.922..2128.830 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.179..1.179 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.163..1.165 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51047.979..51047.979 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.011..8210.745 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.542..231.542 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.821..102.353 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.931..0.931 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.757..0.835 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.215..22.215 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..11.701 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.303..5.304 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.865..2.939 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1205.266..1205.266 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.984..489.883 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:28:45.480 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,271,"",2021-03-19 23:47:13 CET,6/342,0,LOG,00000,"duration: 102218.527 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9208945.55..9208945.56 rows=1 width=8) (actual time=98479.282..98479.282 rows=1 loops=1)
  ->  Gather  (cost=9208945.33..9208945.54 rows=2 width=8) (actual time=98473.559..102218.326 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9207945.33..9207945.34 rows=1 width=8) (actual time=98422.974..98422.974 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8846778.04 rows=144466918 width=0) (actual time=65711.623..96981.229 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3730204.29 rows=24077820 width=8) (actual time=65710.685..92156.123 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3398825.26 rows=24077820 width=16) (actual time=65706.055..86195.128 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3066162.24 rows=24077820 width=16) (actual time=65678.775..77072.456 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=49879.714..59938.993 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25029.699..40327.093 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.392..6955.377 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8345.213..8345.213 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.035..4176.921 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.153..1761.639 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.845..0.846 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.671..0.746 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1324.867..1324.867 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.025..482.194 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=216.814..216.814 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.030..98.536 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.884..26.884 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.751..13.238 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.511..4.511 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.662..2.471 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.712..0.712 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.681..0.683 rows=4 loops=3)",,,,,,,,,""
2021-03-20 07:30:54.056 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,272,"",2021-03-19 23:47:13 CET,6/343,0,LOG,00000,"duration: 128512.479 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13121099.68..13121099.69 rows=1 width=8) (actual time=121684.858..121684.859 rows=1 loops=1)
  ->  Gather  (cost=13121099.46..13121099.67 rows=2 width=8) (actual time=121678.357..128511.940 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13120099.46..13120099.47 rows=1 width=8) (actual time=121628.633..121628.634 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..12758932.17 rows=144466917 width=0) (actual time=94859.491..120398.314 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..10772203.06 rows=144466917 width=8) (actual time=94853.609..114237.881 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..8784189.95 rows=144466917 width=8) (actual time=94820.441..105842.995 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=76762.263..89700.515 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8865.463..15702.955 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8863.252..13898.160 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.712..4281.138 rows=6666667 loops=3)
                                                        Hash Cond: (ord.discount_id = dis.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.782..1734.162 rows=6666667 loops=3)
                                                        ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.862..0.866 rows=500 loops=3)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                              ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.664..0.761 rows=500 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1370.699..1370.700 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.087..491.824 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.117..2.117 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.096..2.098 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51373.098..51373.098 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.696..8199.484 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.716..231.716 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.320..102.634 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.697..32.697 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.687..15.164 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.441..5.441 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.648..2.986 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:32:45.409 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,273,"",2021-03-19 23:47:13 CET,6/344,0,LOG,00000,"duration: 111280.191 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14658823.94..14658823.95 rows=1 width=8) (actual time=108051.549..108051.556 rows=1 loops=1)
  ->  Gather  (cost=14658823.73..14658823.94 rows=2 width=8) (actual time=108047.163..111279.418 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14657823.73..14657823.74 rows=1 width=8) (actual time=107996.190..107996.191 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14296656.43 rows=144466918 width=0) (actual time=99719.488..106765.165 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11738907.98 rows=144466918 width=8) (actual time=42485.324..89833.372 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=42484.285..83529.632 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42480.113..76708.431 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42479.494..71184.960 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42456.893..59178.425 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11745.451..25316.511 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.924..5861.709 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.896..236.896 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.749..104.254 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7195.971..7195.971 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.324..2577.114 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.283..22.284 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.554..11.384 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.592..0.592 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.583..0.584 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.088..4.088 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.278 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.002..1.003 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.820..0.901 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2512.104..2512.104 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.873..501.731 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:34:26.679 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,274,"",2021-03-19 23:47:13 CET,6/345,0,LOG,00000,"duration: 101207.825 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=97699.793..97699.793 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=97695.162..101207.667 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=97636.066..97636.067 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=76464.120..96412.372 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..12548910.46 rows=144466918 width=8) (actual time=76459.398..90606.254 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=76458.636..85868.081 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=43932.993..66186.967 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=43932.217..59635.062 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11851.456..25536.100 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.135..5796.037 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=438.666..438.666 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=27.498..303.050 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..97.478 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.347..26.347 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.510..13.081 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7877.191..7877.191 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.845..2633.764 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.730..0.730 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.703..0.706 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1291.682..1291.682 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.843..513.442 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.742..0.742 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.508..0.607 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.434..4.434 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.534..2.448 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:36:15.966 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,275,"",2021-03-19 23:47:13 CET,6/346,0,LOG,00000,"duration: 109239.299 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9238512.23..9238512.24 rows=1 width=8) (actual time=104680.110..104680.110 rows=1 loops=1)
  ->  Gather  (cost=9238512.01..9238512.22 rows=2 width=8) (actual time=104677.191..109238.119 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9237512.01..9237512.02 rows=1 width=8) (actual time=104587.994..104587.994 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8876344.72 rows=144466918 width=0) (actual time=71193.610..103109.533 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3759770.97 rows=24077820 width=8) (actual time=71192.836..98118.103 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=71187.015..91879.112 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3095728.92 rows=24077820 width=16) (actual time=71160.221..82399.654 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=47400.632..61224.961 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25847.712..40154.268 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.801..6772.136 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8591.078..8591.079 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.149..4328.355 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.951..1830.266 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.158..1.158 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.924..1.021 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.951..249.951 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.873..106.666 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1900.815..1900.815 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.271..469.952 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.472..26.472 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..13.354 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.709..5.709 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..3.443 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.543..0.543 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.516..0.518 rows=4 loops=3)",,,,,,,,,""
2021-03-20 07:38:08.996 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,276,"",2021-03-19 23:47:13 CET,6/347,0,LOG,00000,"duration: 112984.640 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19300718.55..19300718.56 rows=1 width=8) (actual time=109080.634..109080.634 rows=1 loops=1)
  ->  Gather  (cost=19300718.34..19300718.55 rows=2 width=8) (actual time=109076.819..112984.538 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19299718.34..19299718.35 rows=1 width=8) (actual time=108986.380..108986.380 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18938551.05 rows=144466917 width=0) (actual time=93307.410..107795.891 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..16951821.94 rows=144466917 width=8) (actual time=93301.895..102289.124 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..14111911.49 rows=144466917 width=16) (actual time=53666.187..84686.377 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..12123898.38 rows=144466917 width=16) (actual time=53645.060..73679.733 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=432891.38..10137462.02 rows=144466917 width=24) (actual time=53644.207..67964.414 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24873.258..46609.668 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24872.400..40356.703 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.774..7030.049 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6998.723..6998.723 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.899..2551.441 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.812..0.812 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.795..0.796 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.126..232.126 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.723..105.029 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.817..0.817 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.631..0.715 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=20.813..20.813 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.570..10.684 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1157.093..1157.093 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.070..479.279 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.101..5.101 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.710..2.891 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:39:58.265 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,277,"",2021-03-19 23:47:13 CET,6/348,0,LOG,00000,"duration: 109210.843 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=105653.347..105653.347 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=105648.393..109210.491 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=105598.166..105598.166 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=74424.189..104138.015 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14529601.41 rows=144466918 width=8) (actual time=74419.062..98036.478 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..12541588.29 rows=144466918 width=8) (actual time=74395.534..89631.723 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=529572.75..10555151.91 rows=144466918 width=16) (actual time=74394.659..84904.803 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42690.825..64404.576 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42690.039..57939.068 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12311.436..25622.228 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.008..5882.567 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.632..249.633 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.141..112.302 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7248.941..7248.941 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.791..2566.429 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.739..0.740 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.719..0.720 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1176.532..1176.532 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.958..465.330 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.834..0.834 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.629..0.736 rows=500 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.202..23.202 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.600..11.907 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.839..4.840 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.518..2.613 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:41:52.039 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,278,"",2021-03-19 23:47:13 CET,6/349,0,LOG,00000,"duration: 113720.747 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=110320.511..110320.512 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=110315.367..113720.127 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=110265.931..110265.931 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=70525.955..108504.449 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=70519.951..101330.366 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8418889.46 rows=144466918 width=8) (actual time=70491.338..92362.918 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=529552.00..3302315.71 rows=24077820 width=16) (actual time=70490.579..87875.899 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=70489.703..82584.431 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43749.357..60153.351 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11856.755..25588.342 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.814..5870.680 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.791..243.791 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.014..112.038 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7317.799..7317.799 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.801..2505.179 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.071..1236.072 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.850..498.995 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.827..0.827 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.584..0.679 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.719..0.719 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.707..0.708 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.220..28.220 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.687..14.079 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.654..5.654 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.521..2.934 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:43:48.179 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,279,"",2021-03-19 23:47:13 CET,6/350,0,LOG,00000,"duration: 116080.588 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11470155.42..11470155.43 rows=1 width=8) (actual time=112367.120..112367.121 rows=1 loops=1)
  ->  Gather  (cost=11470155.20..11470155.41 rows=2 width=8) (actual time=112362.087..116080.401 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11469155.20..11469155.21 rows=1 width=8) (actual time=112311.983..112311.983 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11107987.91 rows=144466918 width=0) (actual time=103143.656..111073.359 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8550239.45 rows=144466918 width=8) (actual time=49138.158..94522.597 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=49137.263..88846.863 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=49132.502..81971.722 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49131.799..75877.375 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49108.208..64396.366 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24653.102..40006.004 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.880..7093.865 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7089.779..7089.780 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.947..2571.480 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1545.812..1545.813 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.691..124.252 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.223..23.223 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.445..11.351 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.679..0.679 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.485..0.569 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.666..4.666 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..2.428 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.846..0.846 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.833..0.835 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1198.074..1198.074 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.858..469.768 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:45:40.376 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,280,"",2021-03-19 23:47:13 CET,6/351,0,LOG,00000,"duration: 112139.014 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15223147.94..15223147.95 rows=1 width=8) (actual time=107984.833..107984.833 rows=1 loops=1)
  ->  Gather  (cost=15223147.73..15223147.94 rows=2 width=8) (actual time=107980.133..112138.839 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15222147.73..15222147.74 rows=1 width=8) (actual time=107929.886..107929.886 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14860980.43 rows=144466918 width=0) (actual time=87105.523..106734.882 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12874251.31 rows=144466918 width=8) (actual time=87100.850..101045.812 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=531165.75..10887814.94 rows=144466918 width=16) (actual time=87100.124..96408.154 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=42713.339..77331.865 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=42712.558..70988.800 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42686.801..59246.415 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11526.779..25280.186 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.966..5741.022 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.162..222.163 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.841..101.805 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6774.467..6774.467 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.635..2513.240 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.443..25.443 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.482..12.501 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.729..0.729 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.709..0.711 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1229.549..1229.549 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.783..498.200 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.696..0.697 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.489..0.578 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.334..4.334 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.494..2.369 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:47:25.313 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,281,"",2021-03-19 23:47:13 CET,6/352,0,LOG,00000,"duration: 104875.038 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9238512.23..9238512.24 rows=1 width=8) (actual time=101582.685..101582.685 rows=1 loops=1)
  ->  Gather  (cost=9238512.01..9238512.22 rows=2 width=8) (actual time=101578.967..104874.154 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9237512.01..9237512.02 rows=1 width=8) (actual time=101527.261..101527.261 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8876344.72 rows=144466918 width=0) (actual time=69128.058..100072.731 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3759770.97 rows=24077820 width=8) (actual time=69127.175..95176.060 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=69121.608..89121.726 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3095728.92 rows=24077820 width=16) (actual time=69095.284..79976.952 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=46491.122..60044.772 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25405.170..39620.089 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.006..7118.353 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8300.571..8300.571 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.890..4088.756 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.029..1744.011 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.818..0.818 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.612..0.711 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=258.510..258.511 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.025..110.375 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1224.142..1224.143 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.951..504.735 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.950..25.950 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.534..13.269 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.454..5.454 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.892 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.573..0.573 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.548..0.550 rows=4 loops=3)",,,,,,,,,""
2021-03-20 07:49:03.790 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,282,"",2021-03-19 23:47:13 CET,6/353,0,LOG,00000,"duration: 98421.621 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=12960294.99..12960295.00 rows=1 width=8) (actual time=94540.639..94540.639 rows=1 loops=1)
  ->  Gather  (cost=12960294.78..12960294.99 rows=2 width=8) (actual time=94536.630..98421.071 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12959294.78..12959294.79 rows=1 width=8) (actual time=94484.708..94484.708 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..12598127.48 rows=144466918 width=0) (actual time=80605.864..93291.931 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=537203.93..10611691.11 rows=144466918 width=8) (actual time=80604.920..88579.595 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440522.55..7771780.66 rows=144466918 width=16) (actual time=42054.517..69801.474 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440485.55..2655206.91 rows=24077820 width=24) (actual time=42053.606..64289.916 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42048.859..57329.130 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11838.068..25434.912 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.040..5753.154 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=447.141..447.141 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.165..310.591 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.816..103.253 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.044..21.044 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..10.982 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6710.311..6710.312 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.714..2491.123 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.651..4.651 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.486 rows=10000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.853..0.853 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.839..0.841 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2444.961..2444.961 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..483.030 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.723..0.723 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.501..0.597 rows=500 loops=3)",,,,,,,,,""
2021-03-20 07:51:15.217 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,283,"",2021-03-19 23:47:13 CET,6/354,0,LOG,00000,"duration: 131362.691 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13710293.49..13710293.50 rows=1 width=8) (actual time=124047.597..124047.597 rows=1 loops=1)
  ->  Gather  (cost=13710293.27..13710293.48 rows=2 width=8) (actual time=124041.684..131361.503 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13709293.27..13709293.28 rows=1 width=8) (actual time=123990.288..123990.288 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..13348125.98 rows=144466917 width=0) (actual time=97732.254..122695.763 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..11361396.87 rows=144466917 width=8) (actual time=97726.556..116706.501 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..9373383.76 rows=144466917 width=8) (actual time=97702.511..108502.507 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7013306.79 rows=150000000 width=8) (actual time=79094.422..92387.553 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..3003535.42 rows=50000100 width=8) (actual time=7647.636..17181.437 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=7645.215..15128.817 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7644.162..13349.697 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.417..2598.126 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.076..1323.077 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.145..526.891 rows=1666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.006..1.007 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.984..0.987 rows=4 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.355..2.356 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=2.088..2.204 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52849.052..52849.052 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.785..8090.912 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=272.603..272.603 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.002..124.355 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.646..23.646 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.537..11.989 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.379..5.379 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.486..2.888 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 07:53:07.703 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,284,"",2021-03-19 23:47:13 CET,6/355,0,LOG,00000,"duration: 112413.985 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=109035.706..109035.706 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=109028.008..112413.760 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=108975.898..108975.898 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=74581.357..107428.243 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..17056868.61 rows=144466917 width=8) (actual time=74580.273..102077.356 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..15070139.50 rows=144466917 width=16) (actual time=74575.692..95986.998 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=74552.074..86520.709 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=58515.072..68558.631 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24987.282..47724.378 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24986.318..41067.122 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.674..6993.529 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7662.925..7662.926 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.648..2726.908 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.912..0.912 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.889..0.891 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2103.322..2103.322 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.876..508.853 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=266.001..266.001 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.260..117.143 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.272..23.272 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.852..12.147 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.477..4.477 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.602..2.561 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.849..0.849 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.635..0.739 rows=500 loops=3)",,,,,,,,,""
2021-03-20 07:54:47.387 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,285,"",2021-03-19 23:47:13 CET,6/356,0,LOG,00000,"duration: 99618.085 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=95178.942..95178.942 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=95173.576..99617.514 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=95122.345..95122.345 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=73666.676..93886.514 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=537203.93..12549203.21 rows=144466918 width=8) (actual time=73665.581..88794.257 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=73661.127..83256.422 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=42008.783..64025.180 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42007.911..57575.266 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12000.938..24797.010 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.084..5852.703 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=442.040..442.040 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.071..307.979 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.099..104.174 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.594..22.595 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.683..11.869 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7169.293..7169.293 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.811..2481.607 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.817..0.817 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.799..0.801 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1369.125..1369.126 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.964..618.053 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.357..4.357 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.595..2.496 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.893..0.893 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.689..0.786 rows=500 loops=3)",,,,,,,,,""
2021-03-20 07:56:40.575 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,286,"",2021-03-19 23:47:13 CET,6/357,0,LOG,00000,"duration: 113106.929 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=109404.047..109404.047 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=109399.158..113106.843 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=109342.783..109342.783 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=101012.082..108185.861 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=47287.929..92373.401 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=47286.773..86161.152 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=47281.454..79266.877 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47280.958..73619.791 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47257.360..62142.436 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24498.679..39590.856 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.870..7052.928 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6932.834..6932.835 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.825..2554.769 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.270..238.270 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.700..105.885 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.229..23.229 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.529..11.809 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.471..0.472 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.453..0.454 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.228..5.229 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.641..2.751 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.105..1.106 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.879..0.968 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1212.422..1212.423 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.066..503.376 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 07:59:19.962 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,287,"",2021-03-19 23:47:13 CET,6/358,0,LOG,00000,"duration: 159346.259 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=18335231.26..18335231.27 rows=1 width=8) (actual time=150753.290..150753.290 rows=1 loops=1)
  ->  Gather  (cost=18335231.04..18335231.25 rows=2 width=8) (actual time=150749.276..159346.098 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18334231.04..18334231.05 rows=1 width=8) (actual time=150699.838..150699.838 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17973063.75 rows=144466917 width=0) (actual time=135531.503..149458.585 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=1304911.38..15986627.39 rows=144466917 width=8) (actual time=135530.461..144497.275 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1208230.00..13146716.94 rows=144466917 width=16) (actual time=93053.579..126613.657 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=93046.140..118616.184 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=93022.335..107719.147 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71405.535..86129.535 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.429..4775.102 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.667..2071.065 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.718..0.719 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.698..0.700 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52391.518..52391.518 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.218..8099.940 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.806..235.806 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.734..100.203 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.349..23.349 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.278..12.339 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.283..7.283 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.402..4.222 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1449.671..1449.671 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.788..493.563 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.830..0.830 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.515..0.646 rows=500 loops=3)",,,,,,,,,""
2021-03-20 08:00:55.549 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,288,"",2021-03-19 23:47:13 CET,6/359,0,LOG,00000,"duration: 95532.793 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12416998.55..12416998.56 rows=1 width=8) (actual time=91994.832..91994.832 rows=1 loops=1)
  ->  Gather  (cost=12416998.33..12416998.54 rows=2 width=8) (actual time=91987.410..95532.205 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12415998.33..12415998.34 rows=1 width=8) (actual time=91938.315..91938.315 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..12054831.04 rows=144466918 width=0) (actual time=59854.977..90451.368 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..10068101.92 rows=144466918 width=8) (actual time=59849.964..84351.189 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=719913.04..8080088.79 rows=144466918 width=8) (actual time=59827.573..75932.704 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=59826.830..71410.307 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=32763.975..53278.451 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=32763.055..47128.045 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.477..6824.509 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16048.276..16048.276 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6462.395..11560.293 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.834..2365.186 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1286.519..1286.519 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.795..488.787 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.889..0.889 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.731..0.804 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=864.465..864.465 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..103.832 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.716..0.716 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.696..0.698 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.076..22.076 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.550..11.543 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.678..4.678 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.611..2.624 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 08:02:48.990 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,289,"",2021-03-19 23:47:13 CET,6/360,0,LOG,00000,"duration: 113386.406 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12755799.21..12755799.22 rows=1 width=8) (actual time=109516.515..109516.515 rows=1 loops=1)
  ->  Gather  (cost=12755799.00..12755799.21 rows=2 width=8) (actual time=109511.661..113386.296 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12754799.00..12754799.01 rows=1 width=8) (actual time=109462.419..109462.419 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12393631.70 rows=144466918 width=0) (actual time=81999.851..107930.104 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10406902.58 rows=144466918 width=8) (actual time=81995.044..101858.091 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8420466.21 rows=144466918 width=16) (actual time=81994.266..97103.121 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=81993.696..92405.676 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55371.483..71557.288 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12157.200..37581.950 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12132.591..26290.181 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.100..5664.566 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1005.847..1005.848 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.660..111.369 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.198..24.198 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.757..12.403 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7705.995..7705.996 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.942..2727.697 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.925..1226.925 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.805..495.669 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.545..0.545 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.526..0.527 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.754..0.755 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.626 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.535..4.535 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.527..2.505 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 08:04:44.250 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,290,"",2021-03-19 23:47:13 CET,6/361,0,LOG,00000,"duration: 115200.598 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9539364.01..9539364.02 rows=1 width=8) (actual time=111455.771..111455.772 rows=1 loops=1)
  ->  Gather  (cost=9539363.79..9539364.00 rows=2 width=8) (actual time=111449.149..115200.467 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9538363.79..9538363.80 rows=1 width=8) (actual time=111396.770..111396.770 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9177196.50 rows=144466918 width=0) (actual time=69808.364..109728.907 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4060622.75 rows=24077820 width=8) (actual time=69807.611..104327.407 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3729243.72 rows=24077820 width=16) (actual time=69803.159..98203.292 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529552.00..3396580.70 rows=24077820 width=16) (actual time=69778.588..88607.199 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3065494.42 rows=24077820 width=24) (actual time=69777.426..82988.091 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=51620.187..62864.086 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24190.705..40680.284 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.989..6995.995 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7461.511..7461.511 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.721..2614.467 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.534..1246.535 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.900..495.771 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.483..235.483 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.789..108.015 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.132..1.132 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.953..1.034 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.240..24.241 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.536..11.966 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.359..4.359 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.425 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.550..0.550 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.517..0.519 rows=4 loops=3)",,,,,,,,,""
2021-03-20 08:06:24.342 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,291,"",2021-03-19 23:47:13 CET,6/362,0,LOG,00000,"duration: 100031.120 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14108496.67..14108496.68 rows=1 width=8) (actual time=96765.138..96765.138 rows=1 loops=1)
  ->  Gather  (cost=14108496.46..14108496.67 rows=2 width=8) (actual time=96758.026..100030.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14107496.46..14107496.47 rows=1 width=8) (actual time=96704.773..96704.773 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..13746329.16 rows=144466918 width=0) (actual time=54690.584..94999.410 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..11759600.04 rows=144466918 width=8) (actual time=54685.373..87957.905 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=721489.79..9773163.67 rows=144466918 width=16) (actual time=54684.460..82796.766 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=719896.79..7785150.54 rows=144466918 width=16) (actual time=54659.098..73100.419 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=54657.890..67882.809 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=33975.785..47852.743 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.998..6769.216 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17728.716..17728.716 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8151.472..13249.217 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.881..2578.360 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1323.262..1323.263 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.773..509.822 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=268.251..268.251 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.828..118.866 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.168..1.168 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.146..1.149 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.968..24.968 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..12.316 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.881..0.881 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.637..0.743 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.872..4.872 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.607..2.609 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 08:08:22.918 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,292,"",2021-03-19 23:47:13 CET,6/363,0,LOG,00000,"duration: 118518.693 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=17000529.71..17000529.72 rows=1 width=8) (actual time=114584.682..114584.682 rows=1 loops=1)
  ->  Gather  (cost=17000529.50..17000529.71 rows=2 width=8) (actual time=114579.900..118518.560 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16999529.50..16999529.51 rows=1 width=8) (actual time=114496.028..114496.028 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16638362.20 rows=144466918 width=0) (actual time=91874.980..113257.132 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14651925.83 rows=144466918 width=8) (actual time=91874.055..108034.855 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531165.75..12665196.71 rows=144466918 width=16) (actual time=91869.363..102335.066 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..9543124.25 rows=144466918 width=24) (actual time=47996.371..81803.540 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7555111.13 rows=144466918 width=24) (actual time=47974.741..69688.278 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47974.002..63878.742 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25260.598..40442.945 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.027..7087.594 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8088.297..8088.297 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.880..2624.146 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.616..239.616 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.585..104.999 rows=333333 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.697..0.697 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.683 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.318..21.318 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.720..11.160 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1222.251..1222.251 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.851..493.644 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.595..4.599 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.470..2.504 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.717..0.717 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.494..0.591 rows=500 loops=3)",,,,,,,,,""
2021-03-20 08:10:00.268 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,293,"",2021-03-19 23:47:13 CET,6/364,0,LOG,00000,"duration: 97292.961 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10761648.45..10761648.46 rows=1 width=8) (actual time=94171.595..94171.596 rows=1 loops=1)
  ->  Gather  (cost=10761648.24..10761648.45 rows=2 width=8) (actual time=94165.963..97292.861 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10760648.24..10760648.25 rows=1 width=8) (actual time=94117.905..94117.905 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10399480.94 rows=144466918 width=0) (actual time=60794.587..92614.168 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8412751.82 rows=144466918 width=8) (actual time=60789.179..86232.934 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3296178.07 rows=24077820 width=16) (actual time=60788.622..81680.771 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=60765.171..72473.697 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=34398.190..54856.875 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34397.049..48684.491 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.892..6602.802 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17735.370..17735.370 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8319.764..13399.933 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.913..3224.858 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1906.998..1906.998 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.719..453.686 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.098..1.098 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.796..0.935 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.351..239.351 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.111..104.216 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.117..23.118 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.491..11.690 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.534..0.534 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.517..0.518 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.116..5.116 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.514..2.694 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 08:11:57.300 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,294,"",2021-03-19 23:47:13 CET,6/365,0,LOG,00000,"duration: 116977.721 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11175452.79..11175452.80 rows=1 width=8) (actual time=113281.580..113281.580 rows=1 loops=1)
  ->  Gather  (cost=11175452.57..11175452.78 rows=2 width=8) (actual time=113278.075..116976.686 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11174452.57..11174452.58 rows=1 width=8) (actual time=113226.244..113226.245 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10813285.28 rows=144466918 width=0) (actual time=79543.273..111728.499 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8826556.15 rows=144466918 width=8) (actual time=79538.096..105235.052 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=79537.505..100553.805 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529552.00..3377319.38 rows=24077820 width=16) (actual time=79513.005..91106.949 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=48200.146..70163.230 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48198.828..63121.350 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24735.460..39556.503 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.131..7000.130 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7923.055..7923.055 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.037..2535.925 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.340..249.340 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.853..103.707 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.263..1.263 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.997..1.105 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.663..1280.663 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.911..502.807 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.145..24.145 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.450..12.230 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.567..0.567 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.549..0.551 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.863..4.863 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.478..2.633 rows=10000 loops=3)",,,,,,,,,""
2021-03-20 08:13:55.147 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,295,"",2021-03-19 23:47:13 CET,6/366,0,LOG,00000,"duration: 117789.076 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14780855.61..14780855.62 rows=1 width=8) (actual time=113574.133..113574.133 rows=1 loops=1)
  ->  Gather  (cost=14780855.40..14780855.61 rows=2 width=8) (actual time=113568.342..117788.983 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14779855.40..14779855.41 rows=1 width=8) (actual time=113518.238..113518.238 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14418688.10 rows=144466918 width=0) (actual time=104193.166..112204.728 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11860939.65 rows=144466918 width=8) (actual time=48644.654..94985.273 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=48643.634..88550.368 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=48639.139..81485.112 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48638.614..75680.658 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48612.001..63784.830 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25695.473..40797.614 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.901..7125.474 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8512.628..8512.629 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.820..2681.152 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=383.264..383.264 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.870..108.703 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.293..26.293 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.498..12.866 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.502..0.503 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.491..0.493 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.403..4.403 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.458..2.303 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.976..0.976 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.764..0.855 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.803..1309.803 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.929..506.879 rows=1666667 loops=3)",,,,,,,,,""
2021-03-20 08:15:46.122 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,296,"",2021-03-19 23:47:13 CET,6/367,0,LOG,00000,"duration: 110925.056 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16843623.15..16843623.16 rows=1 width=8) (actual time=107340.273..107340.274 rows=1 loops=1)
  ->  Gather  (cost=16843622.93..16843623.14 rows=2 width=8) (actual time=107335.699..110924.926 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16842622.93..16842622.94 rows=1 width=8) (actual time=107247.924..107247.924 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16481455.64 rows=144466917 width=0) (actual time=72921.790..105754.149 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14495019.28 rows=144466917 width=8) (actual time=72920.802..100439.874 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..12508290.17 rows=144466917 width=16) (actual time=72916.040..94406.384 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10520277.06 rows=144466917 width=16) (actual time=72892.903..85027.199 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=507852.75..7867232.09 rows=150000000 width=16) (actual time=51071.485..67252.267 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=51070.282..62056.645 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24400.442..40612.015 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.009..7003.541 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7426.768..7426.768 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.812..2674.524 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1224.976..1224.976 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.139..487.490 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.160..1.161 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.145..1.147 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=243.641..243.641 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..109.003 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.815..22.815 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.560..11.697 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.668..4.668 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.561 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.786..0.786 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.532..0.652 rows=500 loops=3)",,,,,,,,,""
2021-03-20 08:17:30.791 CET,"postgres","shop_db",4812,"127.0.0.1:56196",605529f1.12cc,297,"",2021-03-19 23:47:13 CET,6/368,0,LOG,00000,"duration: 104605.284 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9208945.55..9208945.56 rows=1 width=8) (actual time=101170.643..101170.644 rows=1 loops=1)
  ->  Gather  (cost=9208945.33..9208945.54 rows=2 width=8) (actual time=101165.090..104604.629 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9207945.33..9207945.34 rows=1 width=8) (actual time=101110.805..101110.806 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..8846778.04 rows=144466918 width=0) (actual time=67777.966..99641.373 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=637899.57..3730204.29 rows=24077820 width=8) (actual time=67776.930..94698.929 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=637590.57..3398825.26 rows=24077820 width=16) (actual time=67769.385..88585.811 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3066162.24 rows=24077820 width=16) (actual time=67735.041..79320.743 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=614277.56..2604190.90 rows=25000000 width=16) (actual time=50963.152..60915.279 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=24932.832..40123.615 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.994..6780.007 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8223.531..8223.531 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.501..4145.425 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.798..1754.273 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.630..0.631 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.464..0.539 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.961..1255.961 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.878..483.116 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1349.223..1349.223 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.054..109.716 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.912..33.912 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..16.332 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.397..7.397 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.598..3.765 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.593..0.593 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.560..0.563 rows=4 loops=3)",,,,,,,,,""
2021-03-20 08:22:53.035 CET,,,5184,,6055275a.1440,9,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:24:53.064 CET,,,5184,,6055275a.1440,10,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:24:57.802 CET,,,368,,6055275a.170,1,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:28:23.965 CET,,,5184,,6055275a.1440,11,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:32:54.321 CET,,,5184,,6055275a.1440,12,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:32:59.024 CET,,,368,,6055275a.170,2,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:33:55.087 CET,,,5184,,6055275a.1440,13,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:34:55.114 CET,,,5184,,6055275a.1440,14,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:34:59.866 CET,,,368,,6055275a.170,3,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:37:56.159 CET,,,5184,,6055275a.1440,15,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:40:56.276 CET,,,5184,,6055275a.1440,16,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:41:00.660 CET,,,368,,6055275a.170,4,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:41:41.732 CET,,,5184,,6055275a.1440,17,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:42:56.817 CET,,,5184,,6055275a.1440,18,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:43:01.072 CET,,,368,,6055275a.170,5,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:55:57.884 CET,,,5184,,6055275a.1440,19,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:56:02.599 CET,,,368,,6055275a.170,6,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:56:58.657 CET,,,5184,,6055275a.1440,20,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 08:57:02.379 CET,,,368,,6055275a.170,7,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 08:59:28.785 CET,,,5184,,6055275a.1440,21,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:00:59.062 CET,,,5184,,6055275a.1440,22,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:01:02.702 CET,,,10004,,6055abb0.2714,1,,2021-03-20 09:00:48 CET,4/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:02:59.104 CET,,,5184,,6055275a.1440,23,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:03:02.672 CET,,,368,,6055275a.170,8,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:08:44.307 CET,,,5184,,6055275a.1440,24,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:08:49.057 CET,,,9928,,6055ad81.26c8,1,,2021-03-20 09:08:33 CET,4/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:08:59.322 CET,,,5184,,6055275a.1440,25,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:09:02.815 CET,,,368,,6055275a.170,9,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:09:59.505 CET,,,5184,,6055275a.1440,26,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:12:59.618 CET,,,5184,,6055275a.1440,27,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:13:03.068 CET,,,368,,6055275a.170,10,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:18:15.165 CET,,,5184,,6055275a.1440,28,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:23:15.482 CET,,,5184,,6055275a.1440,29,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:26:00.715 CET,,,5184,,6055275a.1440,30,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:26:05.433 CET,,,368,,6055275a.170,11,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:26:16.387 CET,,,5184,,6055275a.1440,31,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:26:21.089 CET,,,368,,6055275a.170,12,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:26:21.186 CET,,,4616,,6055b19d.1208,1,,2021-03-20 09:26:05 CET,4/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:26:27.340 CET,,,5184,,6055275a.1440,32,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:27:08.414 CET,,,5184,,6055275a.1440,33,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:27:13.132 CET,,,368,,6055275a.170,13,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:35:24.716 CET,,,5184,,6055275a.1440,34,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:37:54.935 CET,,,5184,,6055275a.1440,35,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:42:10.052 CET,,,5184,,6055275a.1440,36,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:42:14.786 CET,,,368,,6055275a.170,14,,2021-03-19 23:36:10 CET,2/0,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,,,,""
2021-03-20 09:42:40.940 CET,,,5184,,6055275a.1440,37,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:43:56.037 CET,,,5184,,6055275a.1440,38,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:48:26.167 CET,,,5184,,6055275a.1440,39,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:54:56.780 CET,,,5184,,6055275a.1440,40,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
2021-03-20 09:58:41.813 CET,,,5184,,6055275a.1440,41,,2021-03-19 23:36:10 CET,,0,LOG,42501,"could not rename temporary statistics file ""pg_stat_tmp/global.tmp"" to ""pg_stat_tmp/global.stat"": Permission denied",,,,,,,,,""
