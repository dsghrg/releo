2021-03-22 00:00:51.862 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,341,"",2021-03-21 14:47:00 CET,4/349,0,LOG,00000,"duration: 105248.078 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=96465.365..96465.365 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96461.817..105247.963 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96409.093..96409.094 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=83760.711..95105.735 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6899.872..13502.011 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6898.605..11702.439 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.505..2528.369 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1532.560..1532.561 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.295..515.786 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.173..1.173 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.146..1.148 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60106.096..60106.097 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12246.486..25979.044 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.518..5755.214 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=417.462..417.463 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.962..300.550 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.808..96.714 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.844..43.845 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.420..32.773 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.509..8.961 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.797..4.798 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.517..2.595 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:03:19.639 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,342,"",2021-03-21 14:47:00 CET,4/350,0,LOG,00000,"duration: 147720.986 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=142374.979..142374.979 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=142369.659..147720.832 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=142317.353..142317.353 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=132933.236..141061.361 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=91756.185..124127.796 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=91751.825..116717.617 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=91728.105..105880.288 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=69695.528..85165.572 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.066..4603.944 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.806..2183.857 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.159..1.160 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.130..1.132 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51774.278..51774.278 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.288..8467.263 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=279.915..279.915 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.100..118.330 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.319..23.320 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.504..12.043 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.266..4.267 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.655..2.456 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1509.998..1509.998 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.852..513.809 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 00:05:05.915 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,343,"",2021-03-21 14:47:00 CET,4/351,0,LOG,00000,"duration: 106243.438 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=99002.267..99002.267 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98993.949..106243.291 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98940.397..98940.397 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=86617.205..97691.066 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6585.760..13427.923 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6583.855..11617.538 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.878..2489.241 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1289.873..1289.874 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.817..517.259 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.827..1.827 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.803..1.805 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=64355.840..64355.841 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=15867.240..29750.717 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.511..5709.476 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=520.920..520.920 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.810..361.688 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.865..109.855 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.584..49.584 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.809..36.620 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..9.710 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.173..6.173 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.469..3.142 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:06:52.332 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,344,"",2021-03-21 14:47:00 CET,4/352,0,LOG,00000,"duration: 106375.770 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14666827.34..14666827.35 rows=1 width=8) (actual time=102572.843..102572.843 rows=1 loops=1)
  ->  Gather  (cost=14666827.12..14666827.33 rows=2 width=8) (actual time=102569.127..106374.673 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14665827.12..14665827.13 rows=1 width=8) (actual time=102509.954..102509.954 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14304659.83 rows=144466918 width=0) (actual time=76839.218..101270.929 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12317930.71 rows=144466918 width=8) (actual time=76834.321..95142.148 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10329917.58 rows=144466918 width=8) (actual time=76809.794..86743.049 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=46616.648..66421.374 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46615.816..60222.532 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25060.547..39230.426 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.683..7127.675 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7100.559..7100.559 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.588..2568.817 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.575..235.575 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.759..101.725 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.782..0.783 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.766..0.767 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2213.563..2213.563 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.042..514.462 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.212..24.212 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.627..12.641 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.587..4.587 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.762..2.735 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:08:35.084 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,345,"",2021-03-21 14:47:00 CET,4/353,0,LOG,00000,"duration: 102721.736 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97877.988..97877.989 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97873.848..102721.622 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97820.638..97820.638 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84631.836..96486.089 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6643.288..13276.939 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6641.556..11478.583 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.844..2549.536 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1267.433..1267.434 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.650..512.205 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.665..1.666 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.649..1.651 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60856.008..60856.008 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13296.526..27708.885 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.803..5825.186 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=456.715..456.715 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.138..326.015 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.986..99.857 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.779..51.780 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.538..38.520 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.516..10.960 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.904..5.904 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.496..3.055 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:10:26.484 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,346,"",2021-03-21 14:47:00 CET,4/354,0,LOG,00000,"duration: 111343.367 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=107342.748..107342.748 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=107339.125..111342.817 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=107282.156..107282.156 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=86714.359..106067.558 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=86713.270..101387.394 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=86707.488..95959.169 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=44552.016..73181.421 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=44529.873..61084.414 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11860.001..25591.010 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.632..5827.151 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=264.302..264.302 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.884..118.267 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7741.417..7741.417 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.045..2564.850 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.759..21.759 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.767..11.323 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4735.826..4735.827 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.273..534.631 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.665..5.665 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.646..3.124 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.807..0.808 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.782..0.784 rows=4 loops=3)",,,,,,,,,""
2021-03-22 00:12:10.062 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,347,"",2021-03-21 14:47:00 CET,4/355,0,LOG,00000,"duration: 103543.468 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96122.455..96122.456 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96112.828..103543.242 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96059.188..96059.188 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83188.006..94772.339 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6682.455..13475.170 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6680.510..11641.294 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.614..2510.589 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1276.812..1276.813 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.268..497.585 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.872..1.873 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.851..1.853 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59754.028..59754.028 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12200.893..26272.679 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.916..5659.712 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=439.002..439.003 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.890..317.259 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.958..108.853 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.550..42.550 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.051..31.743 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.529..8.790 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.426..4.426 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.460 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:14:18.013 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,348,"",2021-03-21 14:47:00 CET,4/356,0,LOG,00000,"duration: 127910.122 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13779071.07..13779071.08 rows=1 width=8) (actual time=121838.357..121838.357 rows=1 loops=1)
  ->  Gather  (cost=13779070.86..13779071.07 rows=2 width=8) (actual time=121833.001..127909.631 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13778070.86..13778070.87 rows=1 width=8) (actual time=121783.902..121783.902 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..13416903.57 rows=144466917 width=0) (actual time=94996.170..120542.793 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..11430174.46 rows=144466917 width=8) (actual time=94990.535..114385.205 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..9442161.35 rows=144466917 width=8) (actual time=94961.717..105980.029 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..7082084.38 rows=150000000 width=8) (actual time=75636.466..89338.265 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Parallel Hash Join  (cost=96718.38..3072313.00 rows=50000100 width=8) (actual time=7648.854..12196.788 rows=6666667 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.460..3793.377 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.527..1680.197 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.875..0.876 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.860..0.862 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1451.829..1451.829 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.641..534.846 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52830.632..52830.632 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.302..7870.804 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.205..248.205 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.962..111.954 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.494..28.494 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.449..14.281 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.306..5.306 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.463..2.868 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:16:06.404 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,349,"",2021-03-21 14:47:00 CET,4/357,0,LOG,00000,"duration: 108363.008 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=99942.628..99942.628 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99935.130..108361.187 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99885.787..99885.787 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=86720.050..98556.645 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6893.340..13653.253 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6891.835..11834.101 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.732..2374.052 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1483.890..1483.891 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.682..536.868 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.433..1.433 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.403..1.406 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63743.583..63743.583 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14503.941..28600.130 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.475..5837.528 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=453.336..453.336 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.849..291.231 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.800..93.880 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.741..41.741 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.192..31.131 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.533..8.405 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.567..4.568 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.527..2.523 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:17:51.717 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,350,"",2021-03-21 14:47:00 CET,4/358,0,LOG,00000,"duration: 105265.100 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14384665.34..14384665.35 rows=1 width=8) (actual time=101633.444..101633.445 rows=1 loops=1)
  ->  Gather  (cost=14384665.12..14384665.33 rows=2 width=8) (actual time=101629.885..105264.055 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14383665.12..14383665.13 rows=1 width=8) (actual time=101567.098..101567.099 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..14022497.83 rows=144466918 width=0) (actual time=92447.232..100299.954 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11464749.37 rows=144466918 width=8) (actual time=46432.147..83699.294 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=46425.728..76502.426 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=46400.513..66081.275 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46399.908..60573.151 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25092.133..39279.647 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.425..7197.743 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7164.345..7164.346 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.551..2613.879 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=252.876..252.876 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.505..109.442 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.565..0.565 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.552..0.553 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.808..24.808 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.566..12.297 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.309..6.309 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.868..3.376 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1181.577..1181.577 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.296..457.066 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 00:19:34.012 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,351,"",2021-03-21 14:47:00 CET,4/359,0,LOG,00000,"duration: 102255.573 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97211.864..97211.864 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97204.630..102255.453 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97154.968..97154.969 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84263.846..95829.914 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6860.706..13470.829 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6858.960..11670.919 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.619..2533.221 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1502.888..1502.888 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.564..661.457 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.679..1.679 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.655..1.660 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60344.408..60344.408 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13866.536..28178.378 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.844..5817.877 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=425.804..425.805 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.603..303.562 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.826..95.149 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.418..41.418 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.843..30.827 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..8.337 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.222..4.222 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.535..2.385 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:21:23.498 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,352,"",2021-03-21 14:47:00 CET,4/360,0,LOG,00000,"duration: 109429.122 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12434612.61..12434612.62 rows=1 width=8) (actual time=105683.083..105683.083 rows=1 loops=1)
  ->  Gather  (cost=12434612.39..12434612.60 rows=2 width=8) (actual time=105675.546..109427.295 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12433612.39..12433612.40 rows=1 width=8) (actual time=105623.172..105623.172 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12072445.10 rows=144466918 width=0) (actual time=73445.475..104116.488 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=8) (actual time=73440.285..97780.045 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=73413.984..89078.959 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=73413.351..84558.895 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45335.584..59476.743 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24248.824..38363.110 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.927..7037.853 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7267.784..7267.785 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.811..2571.011 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=272.363..272.363 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.425..102.532 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4957.033..4957.033 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.969..483.465 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.594..0.594 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.580..0.581 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.995..25.995 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.488..12.968 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.890..4.890 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..2.674 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:23:09.483 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,353,"",2021-03-21 14:47:00 CET,4/361,0,LOG,00000,"duration: 105962.130 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97645.576..97645.576 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97640.489..105962.026 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97584.290..97584.290 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84905.437..96285.689 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6635.421..13201.668 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6633.607..11415.421 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.463..2479.290 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1360.314..1360.315 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.440..570.658 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.751..1.751 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.730..1.732 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61196.335..61196.335 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13815.626..27993.669 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.813..5732.087 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=428.713..428.714 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.375..301.157 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.885..94.702 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.117..41.118 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.985..30.733 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.544..8.262 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.332..4.332 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.586..2.425 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:24:31.479 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,354,"",2021-03-21 14:47:00 CET,4/362,0,LOG,00000,"duration: 81944.170 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN category as cat
ON cat.id = sub.category_id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8300117.37..8300117.38 rows=1 width=8) (actual time=78495.789..78495.789 rows=1 loops=1)
  ->  Gather  (cost=8300117.15..8300117.36 rows=2 width=8) (actual time=78490.768..81943.586 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8299117.15..8299117.16 rows=1 width=8) (actual time=78430.236..78430.236 rows=1 loops=3)
              ->  Hash Join  (cost=529346.43..7937949.86 rows=144466918 width=0) (actual time=63689.024..77140.370 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529309.43..2821376.11 rows=24077820 width=8) (actual time=63688.112..72278.108 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432628.05..2260706.38 rows=24077820 width=16) (actual time=40498.245..54929.245 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12091.706..24076.184 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.728..5922.644 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=413.495..413.495 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.751..293.888 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.859..94.232 rows=333333 loops=3)
                                                  ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.603..42.603 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.636..31.711 rows=50000 loops=3)
                                                              Hash Cond: (sub.category_id = cat.id)
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.536..8.654 rows=50000 loops=3)
                                                              ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.005..4.006 rows=10000 loops=3)
                                                                    Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                                    ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.208 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7259.702..7259.703 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.558..2582.673 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1274.358..1274.358 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.014..483.859 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.700..0.700 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.675..0.677 rows=4 loops=3)",,,,,,,,,""
2021-03-22 00:26:11.217 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,355,"",2021-03-21 14:47:00 CET,4/363,0,LOG,00000,"duration: 99708.856 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN category as cat
ON cat.id = sub.category_id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94525.737..94525.738 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94519.534..99708.656 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94470.694..94470.695 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82393.544..93228.308 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7375.170..14017.665 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7373.037..12224.164 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.628..2493.328 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2116.930..2116.930 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.649..490.646 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.076..2.077 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.050..2.053 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58534.628..58534.628 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12250.808..26287.889 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.805..5572.267 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=427.468..427.468 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=49.235..310.282 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.918..89.896 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.986..47.987 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.084..34.939 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.478..9.537 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.510..4.510 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.499..2.412 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:28:02.903 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,356,"",2021-03-21 14:47:00 CET,4/364,0,LOG,00000,"duration: 111635.209 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9094345.73..9094345.74 rows=1 width=8) (actual time=108391.508..108391.508 rows=1 loops=1)
  ->  Gather  (cost=9094345.52..9094345.73 rows=2 width=8) (actual time=108383.984..111635.090 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9093345.52..9093345.53 rows=1 width=8) (actual time=108331.975..108331.976 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8732178.22 rows=144466918 width=0) (actual time=72919.827..106788.727 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3615604.47 rows=24077820 width=8) (actual time=72919.099..101587.726 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=72914.647..95146.904 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=72888.007..85310.466 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=55492.209..66396.864 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=28117.695..44527.682 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.782..7418.647 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10257.776..10257.776 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.170..2740.260 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1407.300..1407.300 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.833..500.493 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.469..237.469 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.980..98.000 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.321..26.321 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.712..13.272 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.368..4.368 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.474..2.391 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.513..0.513 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.490..0.491 rows=4 loops=3)",,,,,,,,,""
2021-03-22 00:29:47.683 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,357,"",2021-03-21 14:47:00 CET,4/365,0,LOG,00000,"duration: 104758.314 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96166.750..96166.750 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96159.734..104758.100 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96102.849..96102.849 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83654.781..94801.751 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7568.979..14319.481 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7567.312..12509.749 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.591..2557.935 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1272.669..1272.669 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.919..510.366 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.600..1.601 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.573..1.575 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59890.741..59890.741 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12626.521..26490.904 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..5695.816 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1118.217..1118.218 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.861..312.453 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.857..91.479 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.661..52.662 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.715..38.016 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.523..10.368 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.078..5.079 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.498..2.669 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:31:25.459 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,358,"",2021-03-21 14:47:00 CET,4/366,0,LOG,00000,"duration: 97716.661 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=93682.676..93682.676 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=93678.137..97716.097 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=93629.787..93629.787 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=84372.701..92323.280 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=46611.167..75011.372 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=46609.987..69352.909 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=46601.242..62176.292 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13208.782..27728.084 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.677..6353.942 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=634.515..634.515 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.326..320.111 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.936..97.293 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.940..22.940 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.643..12.000 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6857.149..6857.150 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.872..2520.526 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=8.656..8.656 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.854..4.468 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.114..1.114 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.095..1.097 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1489.769..1489.769 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.885..496.286 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 00:33:07.580 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,359,"",2021-03-21 14:47:00 CET,4/367,0,LOG,00000,"duration: 102087.934 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97129.249..97129.250 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97122.356..102087.776 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97067.791..97067.792 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84622.966..95778.997 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6865.229..13447.388 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6862.826..11651.802 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.918..2552.762 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1517.209..1517.210 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.877..515.037 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.316..2.317 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.290..2.292 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61530.614..61530.615 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12299.989..26363.613 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.886..5806.830 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=433.119..433.120 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=55.601..311.560 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.756..91.753 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=54.478..54.478 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.054..39.584 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.494..11.121 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.442..5.443 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.469..2.797 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:34:41.461 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,360,"",2021-03-21 14:47:00 CET,4/368,0,LOG,00000,"duration: 93836.607 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10628392.62..10628392.63 rows=1 width=8) (actual time=90444.818..90444.818 rows=1 loops=1)
  ->  Gather  (cost=10628392.41..10628392.62 rows=2 width=8) (actual time=90438.128..93836.137 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10627392.41..10627392.42 rows=1 width=8) (actual time=90375.334..90375.334 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10266225.11 rows=144466918 width=0) (actual time=81526.532..89135.024 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7708476.66 rows=144466918 width=8) (actual time=52934.359..73367.081 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=52933.104..67454.885 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12173.777..32069.378 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12167.053..25176.362 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.619..5887.000 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=433.479..433.479 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.918..303.212 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.879..92.802 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.693..21.694 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.546..11.251 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.575..6.575 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.951..3.542 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=11725.790..11725.790 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.386..3040.720 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.191..1.191 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.171..1.173 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1343.771..1343.771 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.859..495.824 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 00:36:27.532 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,361,"",2021-03-21 14:47:00 CET,4/369,0,LOG,00000,"duration: 106044.457 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97461.595..97461.595 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97453.946..106044.337 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97397.824..97397.824 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84753.258..96093.066 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7401.214..14036.787 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7398.740..12232.891 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.221..2934.150 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1305.511..1305.511 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.951..507.479 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.380..2.380 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.361..2.364 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61858.921..61858.921 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12819.042..26683.199 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.781..5834.945 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=436.735..436.735 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.100..315.239 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.876..92.449 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=56.870..56.870 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.626..41.823 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.547..11.817 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.949..6.949 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.601..3.552 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:37:59.176 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,362,"",2021-03-21 14:47:00 CET,4/370,0,LOG,00000,"duration: 91593.465 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10385330.20..10385330.21 rows=1 width=8) (actual time=88576.138..88576.138 rows=1 loops=1)
  ->  Gather  (cost=10385329.99..10385330.20 rows=2 width=8) (actual time=88568.580..91593.359 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10384329.99..10384330.00 rows=1 width=8) (actual time=88513.687..88513.687 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..10023162.69 rows=144466918 width=0) (actual time=54209.712..87030.594 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..8036433.57 rows=144466918 width=8) (actual time=54204.407..80542.887 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=697038.79..2919859.82 rows=24077820 width=16) (actual time=54203.866..75866.585 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=54180.504..66441.727 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=33325.186..47116.170 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.533..7109.543 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=15687.498..15687.499 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6942.189..11580.649 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.908..2430.432 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1523.672..1523.676 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.769..487.121 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=304.496..304.496 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.091..125.833 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.067..23.067 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..11.797 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.500..0.500 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.483..0.484 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.027..5.027 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.701 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:39:39.491 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,363,"",2021-03-21 14:47:00 CET,4/371,0,LOG,00000,"duration: 100274.052 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95337.927..95337.928 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95330.072..100271.919 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95277.296..95277.296 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82618.826..93977.347 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6607.268..13271.682 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6605.975..11471.236 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.821..2484.025 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1331.407..1331.408 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.169..534.394 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.215..1.215 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.191..1.193 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59600.365..59600.365 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12627.658..26558.539 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.778..5732.116 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=401.106..401.106 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.170..282.518 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.778..86.532 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.974..41.974 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.933..30.953 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.462..8.291 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.339..4.340 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.545..2.384 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:41:27.787 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,364,"",2021-03-21 14:47:00 CET,4/372,0,LOG,00000,"duration: 108245.567 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=105241.717..105241.717 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=105237.455..108245.123 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=105187.655..105187.655 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=72762.458..103705.101 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=72757.066..97308.699 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=72756.517..92629.346 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=72728.338..83497.328 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42745.336..58318.434 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12117.457..25955.233 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.591..5944.765 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.835..230.836 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.827..99.226 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6814.712..6814.713 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.354..2390.146 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4812.951..4812.951 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.905..500.716 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.870..27.871 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.510..13.674 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.522..0.522 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.505..0.506 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.098..5.098 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.677 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:43:08.556 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,365,"",2021-03-21 14:47:00 CET,4/373,0,LOG,00000,"duration: 100754.972 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96556.641..96556.641 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96549.959..100753.113 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96503.271..96503.271 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84338.403..95283.127 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6615.592..13343.128 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6614.093..11534.867 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.633..2488.355 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1305.766..1305.766 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.332..514.269 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.427..1.428 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.405..1.408 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60861.722..60861.722 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12657.984..26714.419 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.905..5630.075 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=364.056..364.056 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.518..258.144 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.730..78.901 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.425..39.425 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.682..29.073 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.460..7.678 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.142..4.142 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.510..2.283 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:44:43.739 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,366,"",2021-03-21 14:47:00 CET,4/374,0,LOG,00000,"duration: 95133.354 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8631313.89..8631313.90 rows=1 width=8) (actual time=91589.797..91589.797 rows=1 loops=1)
  ->  Gather  (cost=8631313.68..8631313.89 rows=2 width=8) (actual time=91584.947..95133.174 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8630313.68..8630313.69 rows=1 width=8) (actual time=91526.799..91526.799 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8269146.38 rows=144466918 width=0) (actual time=76771.004..90222.010 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3152572.63 rows=24077820 width=8) (actual time=76770.078..85349.737 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432347.55..2591902.91 rows=24077820 width=16) (actual time=50308.250..64515.055 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=11827.336..31881.039 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11822.279..24880.084 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.613..5755.357 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=415.063..415.064 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.304..289.085 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.778..86.807 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.194..22.194 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.532..11.402 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.930..4.931 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.717..2.659 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7233.087..7233.088 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.121..2540.184 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4517.154..4517.154 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.163..507.690 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.598..0.598 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.560..0.563 rows=4 loops=3)",,,,,,,,,""
2021-03-22 00:46:30.828 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,367,"",2021-03-21 14:47:00 CET,4/375,0,LOG,00000,"duration: 107061.203 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98939.150..98939.151 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98931.634..107061.095 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98878.553..98878.554 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86151.386..97556.721 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7189.922..14169.520 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7188.304..12337.288 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.680..2514.748 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1270.765..1270.765 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.348..495.589 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.555..1.555 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.533..1.535 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62687.952..62687.952 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12835.828..26927.704 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.005..5777.113 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=468.812..468.812 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=59.569..338.388 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.928..101.824 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=58.112..58.112 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=8.117..42.553 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.607..11.925 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.330..7.331 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.632..3.832 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:48:14.585 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,368,"",2021-03-21 14:47:00 CET,4/376,0,LOG,00000,"duration: 103717.889 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=100383.076..100383.076 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=100378.830..103717.083 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=100322.650..100322.650 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=91973.583..99133.676 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=55299.692..83347.491 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=55298.880..77761.305 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55293.591..70680.336 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11429.922..37023.527 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11407.756..25722.871 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.611..5598.522 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.433..239.434 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.939..104.371 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.839..21.840 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.788..11.405 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7182.033..7182.034 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.866..2579.988 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.180..5.181 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.709..2.736 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.769..0.769 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.753..0.755 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1433.846..1433.847 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.871..532.749 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 00:50:03.377 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,369,"",2021-03-21 14:47:00 CET,4/377,0,LOG,00000,"duration: 108770.060 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99749.860..99749.861 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99741.056..108767.933 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99689.917..99689.918 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86538.317..98324.288 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7538.491..14727.988 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7536.158..12813.303 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.576..2627.318 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1368.266..1368.267 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.558..555.216 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.270..2.270 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.240..2.243 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62688.688..62688.688 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12426.986..27015.983 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.799..5773.021 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=895.683..895.683 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.204..269.245 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.683..80.996 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.202..45.202 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.433..33.130 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.416..8.812 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.853..4.854 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.420..2.605 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:52:30.089 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,370,"",2021-03-21 14:47:00 CET,4/378,0,LOG,00000,"duration: 146662.642 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15958168.90..15958168.91 rows=1 width=8) (actual time=136656.033..136656.033 rows=1 loops=1)
  ->  Gather  (cost=15958168.68..15958168.89 rows=2 width=8) (actual time=136652.151..146662.520 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15957168.68..15957168.69 rows=1 width=8) (actual time=136593.737..136593.737 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..15596001.39 rows=144466917 width=0) (actual time=120891.421..135383.349 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=1304602.38..13609272.28 rows=144466917 width=8) (actual time=120886.250..129826.767 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=87421.539..112148.705 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=87395.637..101202.398 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=67112.557..81411.272 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.708..4293.086 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.782..2030.916 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.861..0.862 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.847..0.852 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49765.297..49765.298 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.437..7979.120 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.430..234.430 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.783..99.347 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.543..25.543 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.088..13.090 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1221.246..1221.246 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.939..495.502 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.875..4.875 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.578..2.717 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:54:08.893 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,371,"",2021-03-21 14:47:00 CET,4/379,0,LOG,00000,"duration: 98775.989 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=93851.107..93851.107 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=93845.641..98775.281 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=93793.624..93793.624 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=81857.289..92581.467 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7250.727..14063.687 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7248.900..12233.385 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.735..2563.540 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.560..1279.561 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.634..511.525 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.743..1.744 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.718..1.720 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58756.850..58756.850 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12206.874..26282.494 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.488..5749.538 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.550..422.550 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.048..307.213 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.166..86.429 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=50.423..50.423 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.462..37.632 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.760..10.307 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.554..6.554 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.742..3.510 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:55:50.796 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,372,"",2021-03-21 14:47:00 CET,4/380,0,LOG,00000,"duration: 101857.931 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14499114.79..14499114.80 rows=1 width=8) (actual time=99033.302..99033.302 rows=1 loops=1)
  ->  Gather  (cost=14499114.57..14499114.78 rows=2 width=8) (actual time=99027.009..101855.526 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14498114.57..14498114.58 rows=1 width=8) (actual time=98970.541..98970.541 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14136947.28 rows=144466917 width=0) (actual time=72689.814..97723.920 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..12150218.17 rows=144466917 width=8) (actual time=72684.396..91589.479 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=521434.75..10162205.06 rows=144466917 width=8) (actual time=72658.143..83202.716 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=499714.75..7802128.09 rows=150000000 width=8) (actual time=49284.021..64206.498 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=49283.165..59329.600 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24437.041..39668.872 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.646..7106.021 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6394.615..6394.616 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.819..2353.882 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1169.146..1169.146 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.738..427.336 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.815..0.815 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.805..0.807 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3589.717..3589.718 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.953..103.547 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.936..25.936 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.656..13.082 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.072..5.072 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..2.808 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:57:34.031 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,373,"",2021-03-21 14:47:00 CET,4/381,0,LOG,00000,"duration: 103211.054 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=94339.385..94339.385 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94333.064..103210.894 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94279.649..94279.650 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=82279.270..93080.115 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6861.502..13479.334 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6859.945..11693.671 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.620..2396.820 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1749.276..1749.277 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.441..520.827 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.494..1.495 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.469..1.472 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59665.180..59665.181 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12015.726..26039.943 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.890..5469.643 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=408.822..408.822 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.213..292.977 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.745..85.050 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.119..57.120 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.756..41.317 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.556..11.564 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.087..6.087 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.485..3.014 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 00:59:16.661 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,374,"",2021-03-21 14:47:00 CET,4/382,0,LOG,00000,"duration: 102579.158 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16722874.19..16722874.20 rows=1 width=8) (actual time=98606.967..98606.967 rows=1 loops=1)
  ->  Gather  (cost=16722873.98..16722874.19 rows=2 width=8) (actual time=98603.553..102578.340 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16721873.98..16721873.99 rows=1 width=8) (actual time=98550.665..98550.666 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..16360706.69 rows=144466917 width=0) (actual time=90013.637..97369.557 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..13802958.24 rows=144466917 width=8) (actual time=50713.322..80968.159 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..11816229.13 rows=144466917 width=16) (actual time=50708.651..73910.326 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=424753.38..9828216.02 rows=144466917 width=16) (actual time=50687.087..63631.159 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=403033.38..7175171.04 rows=150000000 width=16) (actual time=24450.542..44422.645 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24449.428..38738.583 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.711..7132.610 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6710.344..6710.344 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.536..2469.944 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.072..1.072 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.061..1.062 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.146..239.146 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.956..97.884 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.156..21.156 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.599..11.073 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.551..4.552 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.817..2.617 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1918.096..1918.096 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.130..509.937 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:01:04.907 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,375,"",2021-03-21 14:47:00 CET,4/383,0,LOG,00000,"duration: 108223.661 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=99380.441..99380.441 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99371.452..108223.524 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99318.339..99318.339 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=85629.208..97953.287 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6733.476..13909.528 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6731.418..11987.447 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.454..2550.479 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1350.845..1350.846 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.548..543.414 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.861..1.862 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.829..1.831 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61542.288..61542.288 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13042.039..28086.457 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.988..6093.443 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=416.977..416.977 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.455..301.404 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.954..89.885 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.185..49.185 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.785..35.826 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.581..9.678 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.112..5.112 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.580..2.671 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:02:51.053 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,376,"",2021-03-21 14:47:00 CET,4/384,0,LOG,00000,"duration: 106079.807 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12938273.57..12938273.58 rows=1 width=8) (actual time=102533.591..102533.592 rows=1 loops=1)
  ->  Gather  (cost=12938273.36..12938273.57 rows=2 width=8) (actual time=102529.593..106079.223 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12937273.36..12937273.37 rows=1 width=8) (actual time=102477.903..102477.903 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12576106.06 rows=144466918 width=0) (actual time=86815.681..101216.064 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..10589376.94 rows=144466918 width=8) (actual time=86810.434..95530.311 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=43060.385..77460.822 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=43059.413..71108.238 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43036.040..59477.372 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11773.766..25609.167 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.848..5835.003 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.680..241.681 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.809..102.444 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7114.628..7114.628 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.887..2556.797 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.983..22.983 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.526..11.821 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.932..0.933 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.918..0.920 rows=4 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1443.711..1443.711 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.991..514.547 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.939..4.939 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.670..2.735 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:04:38.131 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,377,"",2021-03-21 14:47:00 CET,4/385,0,LOG,00000,"duration: 107048.113 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=101473.377..101473.378 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=101466.341..107047.980 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=101413.050..101413.051 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=87955.173..100033.426 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7431.102..14467.055 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7429.200..12575.234 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.499..2696.441 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1367.285..1367.286 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.663..548.509 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.829..1.829 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.803..1.805 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63794.299..63794.300 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14194.715..29250.830 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.776..6932.961 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=431.528..431.528 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.633..310.745 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.885..87.511 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.303..45.303 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.780..33.446 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.574..9.107 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.099..5.099 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.476..2.676 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:06:28.483 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,378,"",2021-03-21 14:47:00 CET,4/386,0,LOG,00000,"duration: 110303.560 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11073965.14..11073965.15 rows=1 width=8) (actual time=105726.620..105726.621 rows=1 loops=1)
  ->  Gather  (cost=11073964.93..11073965.14 rows=2 width=8) (actual time=105723.393..110303.424 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11072964.93..11072964.94 rows=1 width=8) (actual time=105671.714..105671.715 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10711797.63 rows=144466918 width=0) (actual time=97124.473..104486.843 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8154049.18 rows=144466918 width=8) (actual time=50538.473..88555.851 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..3037475.43 rows=24077820 width=16) (actual time=50537.684..83283.894 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=50532.099..75953.098 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=50507.442..64749.384 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=29217.539..43403.344 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.752..7904.190 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10651.198..10651.198 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.476..2581.343 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=252.729..252.729 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.566..98.565 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.269..24.269 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.538..12.176 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.485..5.485 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.577..2.863 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.737..0.738 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.723..0.725 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.976..1335.979 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.923..490.396 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:08:13.266 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,379,"",2021-03-21 14:47:00 CET,4/387,0,LOG,00000,"duration: 104761.902 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=100089.746..100089.747 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=100082.185..104761.737 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=100030.580..100030.581 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86732.071..98661.624 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7170.169..14099.954 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7168.199..12215.882 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.020..2663.131 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1509.173..1509.174 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.645..541.647 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.885..1.885 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.864..1.869 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63450.259..63450.259 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=15292.672..30096.227 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.853..7692.189 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=427.776..427.776 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.578..307.346 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.819..94.057 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.433..49.434 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.581..36.439 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..10.253 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.955..4.955 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.512..2.754 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:10:00.193 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,380,"",2021-03-21 14:47:00 CET,4/388,0,LOG,00000,"duration: 106874.336 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14311461.67..14311461.68 rows=1 width=8) (actual time=103413.808..103413.808 rows=1 loops=1)
  ->  Gather  (cost=14311461.45..14311461.66 rows=2 width=8) (actual time=103409.342..106873.799 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14310461.45..14310461.46 rows=1 width=8) (actual time=103357.534..103357.534 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..13949294.16 rows=144466918 width=0) (actual time=95140.889..102193.949 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11391545.70 rows=144466918 width=8) (actual time=43275.204..83354.216 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=43269.607..75810.718 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=43244.488..64656.934 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43243.775..59320.720 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12074.575..25630.489 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.809..6067.501 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.928..233.929 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.794..99.524 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6581.821..6581.821 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.066..2393.902 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.681..0.682 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.669..0.671 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.765..24.766 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.630..12.697 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.478..5.478 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.862..3.084 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4610.351..4610.351 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.853..517.964 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:11:48.139 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,381,"",2021-03-21 14:47:00 CET,4/389,0,LOG,00000,"duration: 107913.756 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99675.547..99675.547 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99669.363..107913.644 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99617.535..99617.535 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86562.931..98284.944 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6961.845..13625.431 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6960.180..11832.719 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.401..2553.138 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1588.154..1588.155 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.693..512.571 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.606..1.607 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.587..1.589 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62637.975..62637.975 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12870.682..27524.145 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.899..5764.584 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=413.984..413.984 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.535..290.488 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..87.775 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.266..45.266 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.906..33.879 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.594..9.008 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.192..5.192 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.588..2.883 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:13:24.862 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,382,"",2021-03-21 14:47:00 CET,4/390,0,LOG,00000,"duration: 96668.476 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8725367.89..8725367.90 rows=1 width=8) (actual time=92907.854..92907.864 rows=1 loops=1)
  ->  Gather  (cost=8725367.68..8725367.89 rows=2 width=8) (actual time=92904.508..96668.026 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8724367.68..8724367.69 rows=1 width=8) (actual time=92847.289..92847.289 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8363200.38 rows=144466918 width=0) (actual time=70350.914..91550.257 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529028.93..3246626.63 rows=24077820 width=8) (actual time=70349.946..86443.741 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=70345.228..80536.207 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=44290.760..59735.977 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12569.863..26270.658 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.697..5874.945 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=954.917..954.917 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=24.389..336.224 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.014..90.298 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.014..23.015 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..11.843 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6638.982..6638.983 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.595..2399.894 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2087.390..2087.390 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.853..509.769 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.627..4.627 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.661..2.631 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.645..0.645 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.614..0.616 rows=4 loops=3)",,,,,,,,,""
2021-03-22 01:15:09.142 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,383,"",2021-03-21 14:47:00 CET,4/391,0,LOG,00000,"duration: 104257.984 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98975.687..98975.688 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98969.405..104254.788 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98880.577..98880.578 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85785.887..97544.961 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7671.112..14298.595 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7668.638..12507.011 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.534..2514.099 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1286.172..1286.172 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.897..511.795 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.354..2.354 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.333..2.336 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61397.170..61397.171 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12971.955..27173.156 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.840..5853.903 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1185.733..1185.733 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.652..315.918 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.084..96.868 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.163..51.163 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.075..37.963 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.613..10.646 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.343..6.343 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.714..3.412 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:16:55.764 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,384,"",2021-03-21 14:47:00 CET,4/392,0,LOG,00000,"duration: 106561.695 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=102298.834..102298.834 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=102294.604..106561.182 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=102240.543..102240.543 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=93863.732..101051.597 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=58716.028..85664.617 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=58707.953..78657.896 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=58707.143..73481.402 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12031.248..37223.921 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12009.243..26013.921 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.597..5894.249 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=280.752..280.753 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.968..112.624 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.666..21.667 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.761..11.353 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10887.202..10887.203 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.075..2484.588 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.769..0.769 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.751..0.757 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.922..7.922 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.153..4.221 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1358.950..1358.950 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.848..498.757 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:18:41.986 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,385,"",2021-03-21 14:47:00 CET,4/393,0,LOG,00000,"duration: 106196.392 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97610.466..97610.466 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97604.136..106196.277 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97547.070..97547.071 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84534.095..96232.267 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6636.235..13217.872 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6633.801..11423.121 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=5.454..2479.700 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1365.604..1365.604 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.935..494.916 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.280..2.281 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.248..2.251 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60917.617..60917.617 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12849.694..27096.878 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.849..5867.042 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=437.887..437.887 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.428..313.891 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.990..95.884 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.997..52.997 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.360..38.850 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.595..11.263 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.654..5.654 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.571..3.045 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:20:51.295 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,386,"",2021-03-21 14:47:00 CET,4/394,0,LOG,00000,"duration: 129254.835 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13006499.86..13006499.87 rows=1 width=8) (actual time=119737.408..119737.409 rows=1 loops=1)
  ->  Gather  (cost=13006499.65..13006499.86 rows=2 width=8) (actual time=119732.135..129253.870 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13005499.65..13005499.66 rows=1 width=8) (actual time=119678.323..119678.323 rows=1 loops=3)
              ->  Hash Join  (cost=1304911.38..12644332.36 rows=144466917 width=0) (actual time=93180.132..118447.266 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304602.38..10657603.25 rows=144466917 width=8) (actual time=93175.284..112371.415 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303009.38..8669590.14 rows=144466917 width=8) (actual time=93152.482..104099.041 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281289.38..6309513.17 rows=150000000 width=8) (actual time=74407.423..87847.465 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6649.401..13531.884 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6647.124..11626.941 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.535..2572.751 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1229.165..1229.166 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.646..486.168 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.178..2.178 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.157..2.159 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51792.307..51792.307 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.255..7921.459 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.215..222.215 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.084..98.442 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.481..22.481 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.625..11.819 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.561..4.561 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.536..2.514 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:22:36.113 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,387,"",2021-03-21 14:47:00 CET,4/395,0,LOG,00000,"duration: 104779.109 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=96184.529..96184.529 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96178.880..104777.076 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96121.355..96121.356 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=83101.365..94785.895 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6855.272..13696.342 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6852.946..11850.561 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.673..2513.443 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1311.634..1311.635 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.857..525.033 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.245..2.245 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.222..2.224 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60607.224..60607.224 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12285.312..26581.348 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.800..5819.453 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=444.140..444.140 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.324..321.537 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.878..97.136 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.133..51.133 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.658..37.255 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.488..10.441 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.073..5.073 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..2.709 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:24:18.173 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,388,"",2021-03-21 14:47:00 CET,4/396,0,LOG,00000,"duration: 102006.565 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10953733.47..10953733.48 rows=1 width=8) (actual time=98348.204..98348.204 rows=1 loops=1)
  ->  Gather  (cost=10953733.26..10953733.47 rows=2 width=8) (actual time=98344.213..102006.452 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10952733.26..10952733.27 rows=1 width=8) (actual time=98284.554..98284.555 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10591565.96 rows=144466918 width=0) (actual time=89223.961..97008.187 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8033817.51 rows=144466918 width=8) (actual time=61644.696..81051.783 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426618.38..2917243.76 rows=24077820 width=16) (actual time=61643.907..75525.227 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=11963.655..43992.763 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11957.965..36638.081 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11933.403..25875.791 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.844..5908.897 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=219.099..219.100 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.702..99.318 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.199..24.199 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.568..12.218 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.555..5.555 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.819..3.004 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7357.353..7357.353 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.228..2597.642 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.741..0.741 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.722..0.725 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1226.333..1226.333 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.124..478.704 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:26:00.137 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,389,"",2021-03-21 14:47:00 CET,4/397,0,LOG,00000,"duration: 101940.592 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96542.050..96542.050 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96535.124..101940.430 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96479.832..96479.833 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83533.099..95163.985 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6665.065..13881.936 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6663.252..12060.240 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.792..2539.579 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1320.120..1320.120 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.787..522.641 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.706..1.706 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.665..1.668 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60772.388..60772.388 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13136.428..27480.103 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.970..5838.107 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=431.136..431.136 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.091..306.923 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.325..98.403 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.422..43.422 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.851..32.443 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.776..8.758 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.970..4.970 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.891..2.883 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:27:45.658 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,390,"",2021-03-21 14:47:00 CET,4/398,0,LOG,00000,"duration: 105460.979 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10953733.47..10953733.48 rows=1 width=8) (actual time=101727.608..101727.608 rows=1 loops=1)
  ->  Gather  (cost=10953733.26..10953733.47 rows=2 width=8) (actual time=101723.661..105460.860 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10952733.26..10952733.27 rows=1 width=8) (actual time=101669.524..101669.524 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10591565.96 rows=144466918 width=0) (actual time=92494.258..100371.794 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8033817.51 rows=144466918 width=8) (actual time=64764.658..84347.698 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426618.38..2917243.76 rows=24077820 width=16) (actual time=64763.854..78753.951 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=12585.132..44412.768 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12580.067..37127.342 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12554.650..26408.402 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.435..5993.236 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=668.326..668.327 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.792..120.817 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.104..25.104 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.499..12.594 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.965..4.965 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.661..2.679 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10186.350..10186.350 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.997..2467.456 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.744..0.744 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.725..0.727 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1421.407..1421.407 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.971..527.664 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:29:29.004 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,391,"",2021-03-21 14:47:00 CET,4/399,0,LOG,00000,"duration: 103324.310 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97938.731..97938.731 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97934.768..103324.156 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97881.868..97881.869 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84631.093..96557.221 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6778.119..13470.889 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6776.422..11648.744 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.577..2522.633 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1355.187..1355.188 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.493..529.661 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.624..1.624 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.607..1.609 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61361.515..61361.515 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13269.157..27506.922 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.948..5824.767 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.975..410.975 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.127..290.716 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.857..92.130 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.922..43.922 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.196..32.659 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.510..8.877 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.582..4.582 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.520..2.541 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:31:05.173 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,392,"",2021-03-21 14:47:00 CET,4/400,0,LOG,00000,"duration: 96109.728 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8725367.89..8725367.90 rows=1 width=8) (actual time=92458.090..92458.090 rows=1 loops=1)
  ->  Gather  (cost=8725367.68..8725367.89 rows=2 width=8) (actual time=92454.172..96109.606 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8724367.68..8724367.69 rows=1 width=8) (actual time=92401.350..92401.350 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8363200.38 rows=144466918 width=0) (actual time=71527.906..91174.294 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=529028.93..3246626.63 rows=24077820 width=8) (actual time=71526.937..86441.173 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=528719.93..2915247.61 rows=24077820 width=16) (actual time=71519.984..80967.830 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=45694.130..61151.130 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12220.110..25343.366 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.845..5806.098 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=436.425..436.426 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=26.095..305.431 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.759..92.708 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.981..24.982 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.474..12.363 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10208.375..10208.375 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.166..2546.685 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1325.274..1325.275 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..477.904 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.832..6.832 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.526..3.466 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.666..0.666 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.632..0.635 rows=4 loops=3)",,,,,,,,,""
2021-03-22 01:32:48.600 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,393,"",2021-03-21 14:47:00 CET,4/401,0,LOG,00000,"duration: 103393.539 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97553.401..97553.401 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97545.998..103390.952 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97488.005..97488.005 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84618.393..96175.418 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6749.573..13423.878 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6747.739..11609.190 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.574..2524.224 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.068..1297.068 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.349..530.723 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.735..1.736 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.717..1.719 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61161.298..61161.299 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12622.966..26570.136 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.972..5599.626 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.797..422.797 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.423..303.922 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.971..91.289 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.078..49.078 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.860..36.069 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.567..9.873 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.172..5.172 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.589..2.776 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:34:40.083 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,394,"",2021-03-21 14:47:00 CET,4/402,0,LOG,00000,"duration: 111429.115 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=107716.647..107716.647 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=107711.112..111427.846 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=107654.951..107654.951 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=75027.733..106165.618 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=75022.130..99729.481 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=75021.445..95067.859 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=74994.332..85866.346 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=49453.096..63676.452 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=27957.146..42044.969 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.872..7101.052 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10167.135..10167.135 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.475..2624.028 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=276.577..276.578 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..107.950 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1379.645..1379.645 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.015..519.574 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.793..26.793 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.619..13.406 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.662..0.662 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.644..0.646 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.308..5.308 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..2.927 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:36:21.672 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,395,"",2021-03-21 14:47:00 CET,4/403,0,LOG,00000,"duration: 101562.449 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95554.584..95554.584 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95546.587..101562.216 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95496.898..95496.898 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82317.483..94168.422 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6305.972..13078.933 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6304.530..11228.559 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.398..2380.040 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.981..1283.982 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.226..495.369 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.345..1.345 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.326..1.328 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60215.653..60215.654 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12829.048..27007.946 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.036..5685.027 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1275.008..1275.008 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.069..325.206 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.096..96.695 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.642..41.642 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.920..31.518 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.624..8.160 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.197..5.197 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.707..2.829 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:38:05.185 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,396,"",2021-03-21 14:47:00 CET,4/404,0,LOG,00000,"duration: 103466.623 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10953733.47..10953733.48 rows=1 width=8) (actual time=99991.754..99991.754 rows=1 loops=1)
  ->  Gather  (cost=10953733.26..10953733.47 rows=2 width=8) (actual time=99988.012..103466.461 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10952733.26..10952733.27 rows=1 width=8) (actual time=99930.964..99930.964 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10591565.96 rows=144466918 width=0) (actual time=91210.312..98681.187 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8033817.51 rows=144466918 width=8) (actual time=63717.066..83390.144 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=426618.38..2917243.76 rows=24077820 width=16) (actual time=63715.942..77974.978 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Hash Join  (cost=23622.00..1876013.38 rows=24077820 width=8) (actual time=11685.068..44354.614 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11679.666..36871.181 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11652.032..25890.406 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.987..5668.342 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.474..244.475 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.101..107.460 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.292..27.292 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.692..13.287 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.264..5.264 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.821..2.887 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=9493.063..9493.063 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.777..2554.626 rows=6666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.063..1.067 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.046..1.049 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1290.265..1290.265 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.005..476.705 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:39:46.629 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,397,"",2021-03-21 14:47:00 CET,4/405,0,LOG,00000,"duration: 101415.784 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96725.532..96725.532 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96719.190..101415.493 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96664.722..96664.722 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83871.319..95375.419 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6703.082..13569.789 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6701.709..11746.720 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.463..2559.396 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1324.287..1324.287 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.451..534.842 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.305..1.305 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.287..1.290 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61151.942..61151.942 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12994.540..27252.760 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.944..5850.799 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=423.315..423.315 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.823..302.399 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.894..95.051 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.590..42.590 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.074..31.760 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.569..8.824 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.411..4.411 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..2.498 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:41:37.532 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,398,"",2021-03-21 14:47:00 CET,4/406,0,LOG,00000,"duration: 110841.677 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14384665.34..14384665.35 rows=1 width=8) (actual time=106553.867..106553.868 rows=1 loops=1)
  ->  Gather  (cost=14384665.12..14384665.33 rows=2 width=8) (actual time=106550.254..110841.511 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14383665.12..14383665.13 rows=1 width=8) (actual time=106495.513..106495.513 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..14022497.83 rows=144466918 width=0) (actual time=97399.049..105231.131 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..11464749.37 rows=144466918 width=8) (actual time=46707.648..84051.245 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..9478020.25 rows=144466918 width=16) (actual time=46703.169..76903.350 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7490007.13 rows=144466918 width=16) (actual time=46680.078..66433.954 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46679.277..60920.372 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24191.739..38359.217 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.633..6982.327 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7316.056..7316.057 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.905..2611.025 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.877..235.877 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.659..106.417 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.750..0.750 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.735..0.736 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.740..22.740 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.528..11.318 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.357..4.357 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.739..2.486 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5036.324..5036.324 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.880..507.095 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 01:43:20.008 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,399,"",2021-03-21 14:47:00 CET,4/407,0,LOG,00000,"duration: 102446.733 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97335.260..97335.261 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97328.556..102444.238 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97271.209..97271.209 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84770.096..95980.466 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6461.008..13081.798 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6459.492..11284.042 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.419..2413.832 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1287.786..1287.786 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.922..509.010 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.446..1.447 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.427..1.429 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61816.200..61816.200 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11871.847..26125.607 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..5574.580 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=412.672..412.672 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.257..291.494 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.833..93.337 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.098..42.099 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.171..31.636 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.532..8.503 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.544..4.544 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.609..2.572 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:45:08.331 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,400,"",2021-03-21 14:47:00 CET,4/408,0,LOG,00000,"duration: 108274.541 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12361408.94..12361408.95 rows=1 width=8) (actual time=104349.685..104349.685 rows=1 loops=1)
  ->  Gather  (cost=12361408.72..12361408.93 rows=2 width=8) (actual time=104345.951..108274.375 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12360408.72..12360408.73 rows=1 width=8) (actual time=104295.991..104295.991 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..11999241.43 rows=144466918 width=0) (actual time=72437.307..102767.621 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10012512.31 rows=144466918 width=8) (actual time=72431.975..96451.390 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8024499.18 rows=144466918 width=8) (actual time=72407.903..87837.406 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=72407.268..83302.632 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43257.194..58769.615 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12060.862..25974.832 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.424..5957.898 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=282.470..282.470 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.738..131.193 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7175.899..7175.900 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.607..2584.926 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4900.672..4900.672 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.775..498.104 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.595..0.596 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.578..0.580 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.748..23.748 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..12.292 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.040..5.040 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.550..2.818 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:46:51.366 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,401,"",2021-03-21 14:47:00 CET,4/409,0,LOG,00000,"duration: 103011.583 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94431.747..94431.748 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94423.807..103009.484 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94373.063..94373.063 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81959.064..93106.771 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6887.031..13572.141 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6884.739..11767.115 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.725..2511.290 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1485.549..1485.550 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.767..530.121 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.218..2.219 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.195..2.197 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58510.774..58510.774 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11977.925..25978.254 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.760..5645.307 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=434.014..434.014 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.386..309.005 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.847..101.144 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.172..45.172 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.843..33.523 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.496..8.952 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.231..5.231 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.780 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:48:40.702 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,402,"",2021-03-21 14:47:00 CET,4/410,0,LOG,00000,"duration: 109288.748 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9094345.73..9094345.74 rows=1 width=8) (actual time=105598.743..105598.743 rows=1 loops=1)
  ->  Gather  (cost=9094345.52..9094345.73 rows=2 width=8) (actual time=105592.460..109288.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9093345.52..9093345.53 rows=1 width=8) (actual time=105539.138..105539.138 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8732178.22 rows=144466918 width=0) (actual time=70425.157..104020.661 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3615604.47 rows=24077820 width=8) (actual time=70424.296..98907.253 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=70419.006..92571.173 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=70390.099..82772.833 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=52872.817..63890.121 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24998.143..41373.055 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.580..7310.464 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7180.228..7180.229 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.365..2695.922 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1327.195..1327.195 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.913..516.934 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=250.674..250.674 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.153..114.463 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.490..28.490 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.574..14.141 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.197..5.197 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.589..2.876 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.615..0.615 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.592..0.594 rows=4 loops=3)",,,,,,,,,""
2021-03-22 01:50:27.793 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,403,"",2021-03-21 14:47:00 CET,4/411,0,LOG,00000,"duration: 107067.634 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98737.041..98737.041 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98725.955..107065.765 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98665.935..98665.935 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86219.616..97368.749 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7021.485..13834.068 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7019.879..12006.931 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.585..2540.680 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1664.880..1664.881 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.674..680.916 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.550..1.551 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.534..1.536 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62577.223..62577.223 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12786.830..27287.760 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.786..5759.643 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=465.579..465.579 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=57.797..340.221 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.889..103.264 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=56.417..56.417 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=8.101..42.594 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.558..12.865 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=7.413..7.413 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.572..3.748 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:52:18.618 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,404,"",2021-03-21 14:47:00 CET,4/412,0,LOG,00000,"duration: 110772.870 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9003682.74..9003682.75 rows=1 width=8) (actual time=106916.402..106916.402 rows=1 loops=1)
  ->  Gather  (cost=9003682.53..9003682.74 rows=2 width=8) (actual time=106911.811..110772.318 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9002682.53..9002682.54 rows=1 width=8) (actual time=106852.313..106852.314 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8641515.23 rows=144466918 width=0) (actual time=91770.905..105537.638 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=523299.75..3524941.48 rows=24077820 width=8) (actual time=91770.041..100601.762 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=57574.627..81795.909 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=57567.862..73718.172 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12603.575..39087.518 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12579.220..27411.233 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.609..6268.004 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.522..238.523 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.658..108.032 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.004..24.004 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.812..12.589 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7438.171..7438.172 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.046..2738.654 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.546..6.546 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.807..3.512 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1793.556..1793.556 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.940..541.091 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.630..0.630 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.608..0.610 rows=4 loops=3)",,,,,,,,,""
2021-03-22 01:54:01.180 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,405,"",2021-03-21 14:47:00 CET,4/413,0,LOG,00000,"duration: 102538.349 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94770.877..94770.878 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94766.436..102538.249 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94711.641..94711.641 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82037.595..93420.833 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6182.766..12948.398 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6181.353..11113.770 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.398..2345.224 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1250.274..1250.274 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.362..510.147 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.356..1.357 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.339..1.340 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59727.139..59727.140 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12734.234..26721.363 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.946..5804.972 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=438.283..438.283 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.120..306.484 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.773..91.853 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=53.026..53.026 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.501..38.875 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.574..11.017 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.817..5.817 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.524..3.031 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:55:55.811 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,406,"",2021-03-21 14:47:00 CET,4/414,0,LOG,00000,"duration: 114589.474 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9123912.41..9123912.42 rows=1 width=8) (actual time=110410.635..110410.635 rows=1 loops=1)
  ->  Gather  (cost=9123912.20..9123912.41 rows=2 width=8) (actual time=110406.444..114588.471 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9122912.20..9122912.21 rows=1 width=8) (actual time=110358.718..110358.718 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8761744.90 rows=144466918 width=0) (actual time=74514.863..108735.277 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3645171.15 rows=24077820 width=8) (actual time=74514.027..103282.180 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=74508.094..96489.387 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=74472.807..86324.483 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=48318.879..63114.966 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25877.345..40651.950 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.767..7580.638 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6981.957..6981.958 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.290..2612.656 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.903..221.903 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.719..91.064 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2483.364..2483.364 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.021..499.072 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=34.831..34.831 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.508..15.913 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.767..5.767 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.476..2.834 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.556..0.556 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.528..0.530 rows=4 loops=3)",,,,,,,,,""
2021-03-22 01:57:34.572 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,407,"",2021-03-21 14:47:00 CET,4/415,0,LOG,00000,"duration: 98732.161 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=93900.224..93900.224 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=93895.095..98731.956 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=93841.274..93841.275 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81214.345..92520.219 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7206.312..13938.608 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7204.194..12082.260 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.726..2543.323 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1836.704..1836.704 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.915..488.565 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.049..2.049 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.023..2.025 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58357.517..58357.518 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12263.229..26250.918 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.916..5660.420 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=404.291..404.291 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.016..288.433 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.877..89.028 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.780..43.780 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.570..32.768 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.582..8.775 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.876..4.877 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.538..2.653 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 01:59:27.631 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,408,"",2021-03-21 14:47:00 CET,4/416,0,LOG,00000,"duration: 113017.073 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10749695.83..10749695.84 rows=1 width=8) (actual time=109812.527..109812.527 rows=1 loops=1)
  ->  Gather  (cost=10749695.62..10749695.83 rows=2 width=8) (actual time=109805.910..113016.867 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10748695.62..10748695.63 rows=1 width=8) (actual time=109743.212..109743.213 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10387528.32 rows=144466918 width=0) (actual time=74169.418..108193.437 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8400799.20 rows=144466918 width=8) (actual time=74162.123..101415.443 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3284225.45 rows=24077820 width=16) (actual time=74161.465..96529.945 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2951562.42 rows=24077820 width=16) (actual time=74130.899..86619.862 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=499677.75..2489591.09 rows=25000000 width=16) (actual time=53514.222..64275.252 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=26280.504..42553.765 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.670..7527.942 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7570.715..7570.716 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.702..2723.374 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1264.535..1264.536 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.738..481.879 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3926.765..3926.765 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.117..113.109 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=30.154..30.154 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.557..14.874 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.630..0.630 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.615..0.616 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.775..6.775 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.641..3.587 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:01:09.340 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,409,"",2021-03-21 14:47:00 CET,4/417,0,LOG,00000,"duration: 101682.680 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97007.712..97007.712 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97000.427..101682.490 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96940.114..96940.115 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84420.383..95643.864 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7760.266..14480.376 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7758.540..12668.051 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.335..3471.063 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1269.173..1269.174 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.298..507.049 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.662..1.662 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.641..1.643 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60588.315..60588.315 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13495.085..27583.186 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.008..5800.280 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=466.967..466.967 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=56.916..336.004 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.875..102.201 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=55.650..55.650 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.362..40.362 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.630..11.606 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.625..5.626 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.512..2.941 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:03:02.606 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,410,"",2021-03-21 14:47:00 CET,4/418,0,LOG,00000,"duration: 113226.300 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=109664.995..109664.995 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=109660.733..113226.152 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=109606.325..109606.326 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=75556.632..108069.833 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=75550.888..101388.683 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=75550.395..96523.979 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=75522.928..86961.410 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=47622.019..62305.465 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25388.106..40285.025 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.342..7512.084 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7416.105..7416.105 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.352..2688.578 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.511..257.511 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.682..112.171 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4669.730..4669.730 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.921..526.162 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.157..27.157 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.454..13.383 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.472..0.472 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.459..0.460 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.410..5.410 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.464..2.844 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:04:45.246 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,411,"",2021-03-21 14:47:00 CET,4/419,0,LOG,00000,"duration: 102607.820 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97544.151..97544.151 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97540.638..102607.681 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97489.100..97489.100 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84929.500..96194.025 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6663.588..13355.355 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6661.823..11529.662 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.396..2545.655 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1307.993..1307.994 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.540..526.895 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.688..1.689 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.666..1.668 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61048.047..61048.047 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13447.519..27663.174 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.717..5859.935 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=480.977..480.977 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.923..314.427 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..90.838 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.741..40.741 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.810..30.358 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.511..7.968 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.204..4.205 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.493..2.294 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:07:18.877 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,412,"",2021-03-21 14:47:00 CET,4/420,0,LOG,00000,"duration: 153582.431 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=144281.047..144281.047 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=144276.376..153582.163 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=144215.418..144215.418 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=134670.239..142939.478 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=90106.345..122517.358 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=90100.709..115105.188 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=90073.280..104252.446 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=68384.254..83455.637 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.664..4515.242 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.611..2117.109 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.997..0.998 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.980..0.982 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51610.823..51610.824 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.680..8465.030 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.159..246.159 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.703..105.701 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.956..26.956 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.507..13.379 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.533..5.533 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.662..2.805 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4936.034..4936.034 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.996..520.595 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:09:00.636 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,413,"",2021-03-21 14:47:00 CET,4/421,0,LOG,00000,"duration: 101720.763 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=96463.138..96463.138 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96455.409..101720.622 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96369.930..96369.930 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=83713.256..95051.557 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6691.385..13317.374 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6690.043..11523.201 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.420..2464.483 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1474.710..1474.711 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.407..546.564 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.234..1.234 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.214..1.216 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60534.743..60534.744 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12169.045..26460.763 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.637..5654.855 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.000..422.000 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.288..303.563 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.876..95.420 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.133..41.134 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.200..31.051 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.520..8.397 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.580..4.580 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.573..2.563 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:10:48.668 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,414,"",2021-03-21 14:47:00 CET,4/422,0,LOG,00000,"duration: 107986.461 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=104110.294..104110.294 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=104106.311..107985.928 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=104052.423..104052.423 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=95350.833..102807.694 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=60220.231..86980.442 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=60219.293..81650.689 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=60213.138..74968.294 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12137.716..38286.860 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12115.417..26715.558 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.896..5884.381 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.901..229.902 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.979..102.515 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.998..21.998 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.804..11.498 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10626.837..10626.837 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.353..2582.684 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.993..5.993 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.675..3.095 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.899..0.899 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.881..0.884 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1414.559..1414.559 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.083..488.457 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:12:31.286 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,415,"",2021-03-21 14:47:00 CET,4/423,0,LOG,00000,"duration: 102591.214 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=97473.277..97473.277 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=97466.803..102591.014 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=97407.854..97407.854 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84944.346..96119.166 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7035.692..13698.382 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7033.971..11888.503 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.496..2538.159 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1682.987..1682.988 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.736..513.627 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.645..1.646 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.618..1.621 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60175.446..60175.446 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12181.322..25934.899 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.808..5431.742 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=441.002..441.002 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.640..317.355 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.076..98.833 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.234..46.234 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.762..34.279 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..9.325 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.070..5.070 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.590..2.746 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:14:09.882 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,416,"",2021-03-21 14:47:00 CET,4/424,0,LOG,00000,"duration: 98558.342 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12330770.72..12330770.73 rows=1 width=8) (actual time=94063.888..94063.888 rows=1 loops=1)
  ->  Gather  (cost=12330770.50..12330770.71 rows=2 width=8) (actual time=94060.047..98557.815 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12329770.50..12329770.51 rows=1 width=8) (actual time=94006.777..94006.777 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..11968603.21 rows=144466918 width=0) (actual time=85168.790..92777.110 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..9410854.75 rows=144466918 width=8) (actual time=49163.792..76693.547 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=432075.55..7424125.63 rows=144466918 width=16) (actual time=49158.428..69458.939 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=49157.756..64186.836 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=13002.436..27532.371 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.592..6326.703 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=487.330..487.330 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=29.588..325.102 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.776..94.280 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.442..28.443 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.470..14.564 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=11022.042..11022.042 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.891..2764.189 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.644..0.644 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.633..0.634 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.195..5.195 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.829..2.906 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1406.309..1406.309 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.079..520.064 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:15:54.035 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,417,"",2021-03-21 14:47:00 CET,4/425,0,LOG,00000,"duration: 104129.019 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95862.888..95862.888 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95859.425..104128.879 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95807.208..95807.208 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83186.283..94498.344 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7250.704..14056.861 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7248.467..12255.926 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.360..2501.530 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1393.892..1393.893 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.856..519.612 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.177..2.177 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.155..2.156 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59967.242..59967.242 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12687.291..26542.529 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.710..5833.640 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=412.077..412.077 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.678..292.101 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..82.756 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.449..41.449 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.522..31.136 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.604..8.093 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.816..4.816 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.575 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:17:24.337 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,418,"",2021-03-21 14:47:00 CET,4/426,0,LOG,00000,"duration: 90251.966 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10675420.62..10675420.63 rows=1 width=8) (actual time=87375.031..87375.031 rows=1 loops=1)
  ->  Gather  (cost=10675420.41..10675420.62 rows=2 width=8) (actual time=87370.605..90251.608 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10674420.41..10674420.42 rows=1 width=8) (actual time=87318.529..87318.529 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=529065.93..10313253.11 rows=144466918 width=0) (actual time=78175.081..86003.225 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=432384.55..7755504.66 rows=144466918 width=8) (actual time=42788.433..69907.316 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=42787.531..64473.234 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=42782.438..57596.141 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11848.920..25588.683 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.872..5772.422 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=420.058..420.058 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.877..287.830 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.997..88.282 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.525..21.526 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.503..11.340 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7058.106..7058.107 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.338..2542.045 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.992..4.992 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.605..2.666 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.865..0.865 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.842..0.845 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.309..1268.310 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.854..488.093 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:19:07.474 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,419,"",2021-03-21 14:47:00 CET,4/427,0,LOG,00000,"duration: 103113.769 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94384.760..94384.761 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94378.452..103113.595 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94329.051..94329.051 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81889.508..93038.846 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6934.070..13661.803 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6932.368..11859.022 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.784..2551.723 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1579.954..1579.955 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.381..490.182 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.647..1.648 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.624..1.627 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59821.753..59821.753 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12633.397..26694.125 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.823..5710.241 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=436.592..436.592 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.000..314.201 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.864..98.428 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=38.779..38.779 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.982..29.149 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.444..7.664 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.441..4.441 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.472..2.380 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:20:51.474 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,420,"",2021-03-21 14:47:00 CET,4/428,0,LOG,00000,"duration: 103947.976 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12656111.57..12656111.58 rows=1 width=8) (actual time=100833.394..100833.394 rows=1 loops=1)
  ->  Gather  (cost=12656111.36..12656111.57 rows=2 width=8) (actual time=100829.769..103947.493 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12655111.36..12655111.37 rows=1 width=8) (actual time=100774.360..100774.361 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..12293944.06 rows=144466918 width=0) (actual time=92062.992..99529.387 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..9736195.61 rows=144466918 width=8) (actual time=56181.568..83476.520 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=426346.38..7749466.48 rows=144466918 width=16) (actual time=56176.644..76385.911 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=56175.966..71090.644 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11725.880..37697.364 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11702.974..26179.940 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.574..5800.702 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.283..237.284 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.938..104.824 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.545..22.545 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.764..11.614 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7233.209..7233.210 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.944..2622.192 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.652..0.652 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.641..0.642 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.780..4.780 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.941..2.794 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1669.536..1669.536 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.932..506.799 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:22:35.230 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,421,"",2021-03-21 14:47:00 CET,4/429,0,LOG,00000,"duration: 103734.063 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95055.308..95055.308 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95046.856..103733.947 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94995.988..94995.988 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82249.072..93710.890 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6615.304..13477.318 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6613.257..11648.075 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.537..2489.039 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1370.022..1370.022 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.454..523.303 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.984..1.984 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.960..1.963 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58975.588..58975.589 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11985.384..26311.554 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.873..5496.588 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=368.701..368.701 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.596..263.833 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..79.656 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.459..39.459 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.859..29.442 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.560..7.890 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.214..4.214 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.562..2.395 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:24:20.892 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,422,"",2021-03-21 14:47:00 CET,4/430,0,LOG,00000,"duration: 105616.258 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12434612.61..12434612.62 rows=1 width=8) (actual time=101400.864..101400.865 rows=1 loops=1)
  ->  Gather  (cost=12434612.39..12434612.60 rows=2 width=8) (actual time=101397.177..105616.112 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12433612.39..12433612.40 rows=1 width=8) (actual time=101334.221..101334.222 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..12072445.10 rows=144466918 width=0) (actual time=69252.733..99831.423 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..10085715.98 rows=144466918 width=8) (actual time=69246.342..93490.332 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=521434.75..8097702.85 rows=144466918 width=8) (actual time=69214.919..84755.267 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=521397.75..2981129.10 rows=24077820 width=16) (actual time=69214.194..80240.605 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=45579.277..59673.631 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=24389.974..38454.405 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.602..7174.136 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7218.198..7218.199 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.519..2582.935 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=255.050..255.050 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.853..103.244 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1241.373..1241.373 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.956..488.175 rows=1666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.690..0.690 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.675..0.677 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.077..31.077 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.522..15.509 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.007..6.008 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.731..3.282 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:26:06.413 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,423,"",2021-03-21 14:47:00 CET,4/431,0,LOG,00000,"duration: 105492.032 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96721.251..96721.251 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96714.650..105489.280 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96666.288..96666.289 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84062.458..95365.756 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6644.148..13323.655 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6642.037..11508.020 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.458..2535.100 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.371..1297.372 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.709..513.284 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.011..2.011 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.987..1.990 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60894.053..60894.053 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12607.993..26661.810 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.972..5793.129 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=409.121..409.121 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.940..294.368 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.776..85.875 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.762..47.762 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.665..34.543 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.507..9.288 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.044..5.044 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.492..2.581 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:27:54.240 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,424,"",2021-03-21 14:47:00 CET,4/432,0,LOG,00000,"duration: 107770.936 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10779262.51..10779262.52 rows=1 width=8) (actual time=103876.332..103876.332 rows=1 loops=1)
  ->  Gather  (cost=10779262.30..10779262.51 rows=2 width=8) (actual time=103871.636..107770.792 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10778262.30..10778262.31 rows=1 width=8) (actual time=103811.721..103811.721 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10417095.00 rows=144466918 width=0) (actual time=82793.567..102588.061 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8430365.88 rows=144466918 width=8) (actual time=82786.363..96679.330 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=522990.75..3313792.13 rows=24077820 width=16) (actual time=82785.402..92269.530 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=426309.38..2706096.40 rows=24077820 width=24) (actual time=46674.994..72762.541 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2373433.38 rows=24077820 width=24) (actual time=46649.571..61139.263 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=402996.38..1862634.04 rows=25000000 width=24) (actual time=25374.807..39610.863 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.463..8230.855 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6864.540..6864.541 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.214..2425.269 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.863..229.863 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.376..100.273 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.913..24.913 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.118..13.055 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1426.811..1426.811 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.237..513.611 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.931..0.931 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.910..0.912 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.792..6.792 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..3.455 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:29:33.895 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,425,"",2021-03-21 14:47:00 CET,4/433,0,LOG,00000,"duration: 99637.625 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94427.904..94427.904 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94419.622..99637.473 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94335.330..94335.330 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=81901.995..93065.040 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6525.569..13419.027 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6523.261..11606.679 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.626..2481.203 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1281.434..1281.435 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.039..511.130 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.225..2.225 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.200..2.203 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59804.693..59804.693 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12286.142..26156.564 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.006..5945.537 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=362.765..362.766 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.410..260.828 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.776..76.839 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.322..43.323 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.163..32.223 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.442..8.613 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.629..4.629 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.457..2.474 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:30:58.729 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,426,"",2021-03-21 14:47:00 CET,4/434,0,LOG,00000,"duration: 84769.749 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8305159.04..8305159.05 rows=1 width=8) (actual time=81066.152..81066.153 rows=1 loops=1)
  ->  Gather  (cost=8305158.82..8305159.03 rows=2 width=8) (actual time=81062.432..84769.315 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8304158.82..8304158.83 rows=1 width=8) (actual time=81008.043..81008.043 rows=1 loops=3)
              ->  Hash Join  (cost=534388.10..7942991.53 rows=144466918 width=0) (actual time=67293.326..79805.695 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=534351.10..2826417.78 rows=24077820 width=8) (actual time=67292.369..75295.437 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=437669.72..2265748.05 rows=24077820 width=16) (actual time=40916.009..55201.319 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12349.899..24269.097 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.918..6094.270 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=534.097..534.097 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                            ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=26.582..413.997 rows=333333 loops=3)
                                                  Hash Cond: (sub.category_id = cat.id)
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.205..294.586 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.498..93.307 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.368..21.369 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.478..11.064 rows=50000 loops=3)
                                                  ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.270..4.271 rows=10000 loops=3)
                                                        Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                        ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.773..2.509 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7176.878..7176.878 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.322..2570.590 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4862.890..4862.891 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.013..521.659 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.638..0.638 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.603..0.605 rows=4 loops=3)",,,,,,,,,""
2021-03-22 02:32:41.547 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,427,"",2021-03-21 14:47:00 CET,4/435,0,LOG,00000,"duration: 102790.229 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96365.431..96365.431 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96359.533..102790.093 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96308.301..96308.301 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=83582.852..95005.923 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6952.370..13630.103 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6950.238..11822.613 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.771..2542.369 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1571.450..1571.451 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.557..504.267 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.044..2.044 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.022..2.025 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60034.858..60034.858 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13304.466..27491.580 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.965..6352.536 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=457.927..457.927 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.356..321.907 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..99.724 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.187..41.187 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.005..30.769 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.681..8.269 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.232..4.232 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.363 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:34:29.575 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,428,"",2021-03-21 14:47:00 CET,4/436,0,LOG,00000,"duration: 107972.679 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=104384.194..104384.194 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=104380.262..107972.532 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=104325.724..104325.724 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=96122.817..103148.017 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=46739.719..87308.969 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=46738.855..81885.109 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=46734.754..74567.768 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=46712.817..62987.443 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12760.933..26163.915 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.819..6652.633 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=236.889..236.890 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.995..97.872 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=9850.672..9850.673 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.966..2412.495 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.633..21.633 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..11.141 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.037..4.037 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.500..2.216 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.826..0.827 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.813..0.814 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1286.803..1286.804 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.189..500.527 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:36:14.236 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,429,"",2021-03-21 14:47:00 CET,4/437,0,LOG,00000,"duration: 104631.442 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=96177.291..96177.291 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96170.749..104629.823 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96114.260..96114.260 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=84250.966..94914.083 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6474.487..13173.090 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6472.210..11368.496 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.553..2461.864 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1302.726..1302.727 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.806..514.560 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.173..2.173 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.138..2.147 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60826.311..60826.312 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12968.688..27206.373 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.778..5883.360 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=436.795..436.795 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.615..299.522 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.957..89.620 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.301..44.301 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.578..33.470 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.630..8.908 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.844..5.845 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.580..3.086 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:38:40.746 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,430,"",2021-03-21 14:47:00 CET,4/438,0,LOG,00000,"duration: 146441.401 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=136890.371..136890.371 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=136885.592..146440.305 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=136827.901..136827.901 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=128040.140..135635.039 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=88383.868..119729.324 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=88377.693..112517.208 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=88351.792..102010.664 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=67437.775..81586.801 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=2.657..4339.165 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.748..2044.164 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.844..0.845 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.821..0.824 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51111.664..51111.664 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.494..8099.296 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.558..228.558 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.803..97.770 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.557..25.557 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.509..12.291 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.070..6.071 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.899..3.197 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1386.075..1386.075 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.799..502.297 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:40:21.221 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,431,"",2021-03-21 14:47:00 CET,4/439,0,LOG,00000,"duration: 100434.932 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=94546.303..94546.303 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94543.265..100434.768 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94484.936..94484.937 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=81891.450..93187.674 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6664.020..13336.192 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6661.945..11518.368 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.600..2509.437 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1348.415..1348.416 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.229..506.059 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.006..2.007 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.977..1.979 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59008.016..59008.016 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12452.044..26274.025 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.666..5831.836 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=692.763..692.763 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=59.004..342.697 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.888..92.058 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.733..57.733 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.241..41.871 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.559..11.499 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.573..6.573 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.504..3.278 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:42:10.483 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,432,"",2021-03-21 14:47:00 CET,4/440,0,LOG,00000,"duration: 109209.649 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=105547.006..105547.006 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=105543.297..109209.191 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=105491.043..105491.043 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=96989.377..104279.539 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=47143.305..88070.539 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=47142.008..82646.302 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=47137.471..75313.066 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=47114.750..63612.986 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11612.826..25471.001 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.691..5711.963 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.751..235.751 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..101.061 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=10181.900..10181.900 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.813..2580.117 rows=6666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.386..22.386 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.586..11.567 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.435..4.435 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.624..2.497 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.231..1.231 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.216..1.218 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.448..1318.448 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.037..502.883 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:43:54.976 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,433,"",2021-03-21 14:47:00 CET,4/441,0,LOG,00000,"duration: 104454.594 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95572.589..95572.589 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95564.884..104452.501 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95513.100..95513.100 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82953.421..94215.896 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7764.275..14398.656 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7762.553..12586.601 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.419..2556.130 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1328.930..1328.931 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.116..536.618 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.671..1.671 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.653..1.655 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59582.735..59582.735 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12951.585..26686.083 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.914..5790.274 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.779..422.780 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.046..299.768 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..88.011 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.881..41.881 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.952..31.240 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.502..8.396 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.350..4.350 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.499..2.374 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:45:39.651 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,434,"",2021-03-21 14:47:00 CET,4/442,0,LOG,00000,"duration: 104615.902 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14593623.67..14593623.68 rows=1 width=8) (actual time=101238.282..101238.282 rows=1 loops=1)
  ->  Gather  (cost=14593623.45..14593623.66 rows=2 width=8) (actual time=101234.600..104615.776 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14592623.45..14592623.46 rows=1 width=8) (actual time=101178.418..101178.418 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..14231456.16 rows=144466918 width=0) (actual time=86315.011..100006.620 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=523027.75..12244727.04 rows=144466918 width=8) (actual time=86309.810..94652.185 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=426346.38..9404816.58 rows=144466918 width=16) (actual time=43023.984..75902.042 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=424753.38..7416803.46 rows=144466918 width=16) (actual time=43000.309..64109.112 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=42999.627..58948.320 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11990.373..25706.251 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.013..5921.055 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=232.111..232.112 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.821..101.157 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7151.740..7151.741 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2720kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=0.966..2576.903 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.637..0.637 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.627..0.629 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.331..23.332 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.808..11.804 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1205.530..1205.530 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.933..474.763 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.924..4.924 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.574..2.658 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:47:20.400 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,435,"",2021-03-21 14:47:00 CET,4/443,0,LOG,00000,"duration: 100713.776 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=95397.202..95397.202 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=95389.827..100713.632 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=95331.180..95331.180 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82613.630..94022.479 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6723.408..13387.134 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6721.939..11587.456 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.559..2534.215 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.789..1255.789 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.438..504.292 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.405..1.406 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.388..1.390 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59101.569..59101.569 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12688.997..26850.601 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.893..5700.642 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=483.220..483.221 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.016..346.793 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.947..99.126 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=50.748..50.748 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.919..36.994 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.627..10.054 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.197..5.197 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.517..2.715 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:48:46.791 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,436,"",2021-03-21 14:47:00 CET,4/444,0,LOG,00000,"duration: 86338.576 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM category as cat
JOIN subcategory as sub
ON sub.category_id = cat.id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8300117.37..8300117.38 rows=1 width=8) (actual time=82150.305..82150.305 rows=1 loops=1)
  ->  Gather  (cost=8300117.15..8300117.36 rows=2 width=8) (actual time=82145.703..86337.881 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8299117.15..8299117.16 rows=1 width=8) (actual time=82093.770..82093.770 rows=1 loops=3)
              ->  Hash Join  (cost=529346.43..7937949.86 rows=144466918 width=0) (actual time=67651.411..80831.396 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529309.43..2821376.11 rows=24077820 width=8) (actual time=67650.442..76038.206 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Parallel Hash Join  (cost=432628.05..2260706.38 rows=24077820 width=16) (actual time=43772.564..58130.593 rows=20000000 loops=3)
                                Hash Cond: (ord_det.order_id = ord.id)
                                ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12156.550..24212.626 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.556..5918.438 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=408.918..408.918 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                            ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.456..292.138 rows=333333 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.933..88.164 rows=333333 loops=3)
                                                  ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.189..40.189 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                        ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.691..30.053 rows=50000 loops=3)
                                                              Hash Cond: (sub.category_id = cat.id)
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.539..7.815 rows=50000 loops=3)
                                                              ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.067..4.067 rows=10000 loops=3)
                                                                    Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                                    ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.542..2.198 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=9644.485..9644.485 rows=6666667 loops=3)
                                      Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.432..2398.528 rows=6666667 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1371.727..1371.727 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.119..519.646 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.706..0.706 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.670..0.672 rows=4 loops=3)",,,,,,,,,""
2021-03-22 02:50:31.320 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,437,"",2021-03-21 14:47:00 CET,4/445,0,LOG,00000,"duration: 104498.759 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM category as cat
JOIN subcategory as sub
ON sub.category_id = cat.id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99793.010..99793.010 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99785.749..104496.908 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99729.822..99729.822 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85837.527..98342.851 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6894.936..13863.426 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6892.530..11996.180 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.784..2656.161 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1344.063..1344.063 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.155..521.840 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.340..2.341 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.315..2.320 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61883.358..61883.358 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12838.654..27810.248 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.097..5998.736 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=455.116..455.116 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.770..322.104 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.880..97.368 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=53.457..53.457 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.564..39.514 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.584..11.237 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.872..5.873 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.580..3.123 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:52:15.616 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,438,"",2021-03-21 14:47:00 CET,4/446,0,LOG,00000,"duration: 104243.718 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11000761.47..11000761.48 rows=1 width=8) (actual time=100905.252..100905.252 rows=1 loops=1)
  ->  Gather  (cost=11000761.26..11000761.47 rows=2 width=8) (actual time=100900.298..104243.142 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10999761.26..10999761.27 rows=1 width=8) (actual time=100843.794..100843.794 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=523336.75..10638593.96 rows=144466918 width=0) (actual time=92531.638..99674.482 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=426655.38..8080845.51 rows=144466918 width=8) (actual time=55010.752..81057.108 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=426618.38..2964271.76 rows=24077820 width=16) (actual time=55009.979..75817.542 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=55005.058..69307.167 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12865.642..37649.937 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12832.587..26679.165 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.738..5905.775 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=647.730..647.731 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.689..103.948 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.674..32.674 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.692..15.325 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7190.724..7190.725 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.287..2493.645 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.807..4.807 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.601..2.613 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.722..0.723 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.703..0.706 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4835.621..4835.621 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.047..506.153 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:53:59.415 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,439,"",2021-03-21 14:47:00 CET,4/447,0,LOG,00000,"duration: 103768.464 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98833.130..98833.130 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98825.403..103768.212 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98775.534..98775.535 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85196.045..97395.222 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7305.059..14557.603 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7303.261..12655.255 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.430..2587.435 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1835.608..1835.608 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.697..558.493 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.724..1.724 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.704..1.706 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61850.640..61850.640 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12218.561..27079.477 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.804..5823.624 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=394.179..394.180 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.587..284.948 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.836..87.279 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.368..43.368 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.187..31.741 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.536..8.877 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.481..4.481 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.471 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:56:30.477 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,440,"",2021-03-21 14:47:00 CET,4/448,0,LOG,00000,"duration: 151003.824 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=15676006.90..15676006.91 rows=1 width=8) (actual time=140993.132..140993.132 rows=1 loops=1)
  ->  Gather  (cost=15676006.68..15676006.89 rows=2 width=8) (actual time=140988.068..151002.888 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15675006.68..15675006.69 rows=1 width=8) (actual time=140926.415..140926.415 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304911.38..15313839.39 rows=144466917 width=0) (actual time=132272.744..139768.997 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208230.00..12756090.94 rows=144466917 width=8) (actual time=88126.421..119193.576 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207921.00..10769361.83 rows=144466917 width=16) (actual time=88121.345..112045.035 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206328.00..8781348.72 rows=144466917 width=16) (actual time=88096.861..101643.867 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184608.00..6128303.75 rows=150000000 width=16) (actual time=67324.468..81911.786 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=16) (actual time=3.045..4315.394 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.141..2016.896 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.846..0.846 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.829..0.831 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51381.713..51381.713 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.512..7876.437 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.605..248.605 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..111.029 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.079..24.079 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.608..12.280 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.968..4.968 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.830..2.814 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5289.288..5289.288 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.057..508.539 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 02:58:11.817 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,441,"",2021-03-21 14:47:00 CET,4/449,0,LOG,00000,"duration: 101304.997 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.80..6988040.81 rows=1 width=8) (actual time=96668.787..96668.787 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=96660.739..101304.836 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=96610.881..96610.881 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466917 width=0) (actual time=84081.756..95353.212 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6764.330..13315.831 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6762.701..11536.552 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.435..2559.882 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1364.099..1364.099 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.476..528.367 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.562..1.562 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.546..1.548 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60667.923..60667.924 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12766.358..27044.894 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.586..5881.425 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=421.781..421.781 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.576..300.773 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.017..101.590 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.226..42.226 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.522..31.680 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.585..8.548 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.835..4.836 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.549..2.638 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 02:59:59.596 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,442,"",2021-03-21 14:47:00 CET,4/450,0,LOG,00000,"duration: 107731.859 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9050708.74..9050708.75 rows=1 width=8) (actual time=103815.059..103815.060 rows=1 loops=1)
  ->  Gather  (cost=9050708.53..9050708.74 rows=2 width=8) (actual time=103810.822..107731.715 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9049708.53..9049708.54 rows=1 width=8) (actual time=103755.381..103755.382 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..8688541.23 rows=144466918 width=0) (actual time=83141.084..102547.706 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=523299.75..3571967.48 rows=24077820 width=8) (actual time=83140.065..97907.749 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=83134.380..92512.626 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=426309.38..2632892.73 rows=24077820 width=24) (actual time=54375.898..69509.206 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11914.696..36961.553 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11887.151..25866.546 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.548..5791.112 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.576..228.577 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.800..104.896 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.154..27.155 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.654..13.460 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=6547.043..6547.044 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.051..2393.018 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4781.361..4781.361 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.918..486.262 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.577..5.577 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.545..2.946 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.686..0.686 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.656..0.658 rows=4 loops=3)",,,,,,,,,""
2021-03-22 03:01:47.835 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,443,"",2021-03-21 14:47:00 CET,4/451,0,LOG,00000,"duration: 108208.444 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=99392.943..99392.943 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=99389.582..108208.265 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=99333.327..99333.327 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=86415.116..98025.436 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7079.586..13703.792 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7077.696..11912.014 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.776..2609.490 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1272.332..1272.333 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.459..520.993 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.837..1.838 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.808..1.811 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63000.743..63000.744 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14165.904..28186.389 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.897..5936.970 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=420.467..420.467 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.102..300.480 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.080..92.157 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.652..41.652 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.296..31.211 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.719..8.586 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.459..4.459 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.655..2.559 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:03:33.115 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,444,"",2021-03-21 14:47:00 CET,4/452,0,LOG,00000,"duration: 105227.252 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10706058.84..10706058.85 rows=1 width=8) (actual time=100819.139..100819.139 rows=1 loops=1)
  ->  Gather  (cost=10706058.63..10706058.84 rows=2 width=8) (actual time=100816.061..105226.753 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10705058.63..10705058.64 rows=1 width=8) (actual time=100766.402..100766.402 rows=1 loops=3)
              ->  Hash Join  (cost=523336.75..10343891.33 rows=144466918 width=0) (actual time=68212.784..99264.862 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=523027.75..8357162.21 rows=144466918 width=8) (actual time=68207.385..92786.071 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=522990.75..3240588.46 rows=24077820 width=16) (actual time=68206.714..88073.030 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=521397.75..2907925.43 rows=24077820 width=16) (actual time=68181.909..78966.976 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=424716.38..2300229.71 rows=24077820 width=24) (actual time=43024.695..58422.428 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11825.141..25697.637 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.070..5877.512 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.614..237.615 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.016..103.504 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7289.206..7289.206 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.582..2558.775 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1225.621..1225.621 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.107..491.137 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.462..24.462 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.564..12.357 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.651..0.651 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.621..0.624 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.016..5.016 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.617..2.779 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:05:12.865 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,445,"",2021-03-21 14:47:00 CET,4/453,0,LOG,00000,"duration: 99727.780 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=94986.596..94986.597 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=94978.944..99727.632 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=94926.059..94926.059 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=82103.973..93620.336 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7115.854..13756.433 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7113.821..11960.811 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.899..2553.903 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1264.024..1264.025 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.847..508.032 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.964..1.965 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.946..1.948 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59641.906..59641.906 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12092.143..26335.423 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.038..5841.835 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.592..410.592 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.049..291.836 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.844..88.972 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.915..42.915 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.879..32.043 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.552..8.993 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.236..4.236 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.399 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:06:46.008 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,446,"",2021-03-21 14:47:00 CET,4/454,0,LOG,00000,"duration: 93103.400 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12040680.30..12040680.31 rows=1 width=8) (actual time=90172.494..90172.495 rows=1 loops=1)
  ->  Gather  (cost=12040680.08..12040680.29 rows=2 width=8) (actual time=90164.532..93103.239 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12039680.08..12039680.09 rows=1 width=8) (actual time=90114.091..90114.092 rows=1 loops=3)
              ->  Hash Join  (cost=697384.79..11678512.79 rows=144466918 width=0) (actual time=57220.924..88647.992 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=697075.79..9691783.67 rows=144466918 width=8) (actual time=57214.756..82463.553 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=695482.79..7703770.54 rows=144466918 width=8) (actual time=57186.442..73916.869 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=695445.79..2587196.79 rows=24077820 width=16) (actual time=57185.787..69350.128 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=673725.79..2125225.46 rows=25000000 width=16) (actual time=37590.932..51108.642 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.751..7224.569 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=528867.92..528867.92 rows=8333350 width=16) (actual time=20097.710..20097.711 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=11133.907..15698.464 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=2.230..2416.449 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5776.905..5776.906 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.867..477.413 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=292.972..292.972 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.885..121.540 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.621..0.621 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.607..0.608 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.980..27.980 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..13.737 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.733..5.733 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.576..3.004 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:08:36.261 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,447,"",2021-03-21 14:47:00 CET,4/455,0,LOG,00000,"duration: 110220.201 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=101070.901..101070.901 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=101063.213..110217.971 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=101002.244..101002.244 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=88063.289..99662.548 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=6956.031..14005.382 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=6954.534..12102.559 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.351..2591.804 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1458.549..1458.549 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.521..522.706 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.428..1.429 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.378..1.383 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=64695.543..64695.543 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12906.508..27680.209 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.835..5941.461 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1007.822..1007.822 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=63.235..339.337 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.965..95.479 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=61.782..61.783 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.779..43.670 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.646..12.636 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.962..5.962 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.635..3.175 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:10:12.104 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,448,"",2021-03-21 14:47:00 CET,4/456,0,LOG,00000,"duration: 95789.926 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8678341.89..8678341.90 rows=1 width=8) (actual time=92378.040..92378.040 rows=1 loops=1)
  ->  Gather  (cost=8678341.68..8678341.89 rows=2 width=8) (actual time=92373.813..95789.596 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8677341.68..8677341.69 rows=1 width=8) (actual time=92318.571..92318.571 rows=1 loops=3)
              ->  Hash Join  (cost=529065.93..8316174.38 rows=144466918 width=0) (actual time=77654.634..91026.215 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=529028.93..3199600.63 rows=24077820 width=8) (actual time=77653.676..86182.063 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=432347.55..2638930.91 rows=24077820 width=16) (actual time=43864.863..67104.432 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=432038.55..2307551.88 rows=24077820 width=24) (actual time=43859.678..59398.477 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12715.092..26483.601 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.743..5837.120 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=445.452..445.453 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=28.152..315.433 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.907..99.640 rows=333333 loops=3)
                                                        ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.838..26.839 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                              ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.609..13.486 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=24) (actual time=7049.588..7049.588 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.094..2571.098 rows=6666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.070..5.070 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.704..2.748 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1446.165..1446.165 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.844..491.003 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.732..0.732 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.703..0.704 rows=4 loops=3)",,,,,,,,,""
2021-03-22 03:11:57.730 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,449,"",2021-03-21 14:47:00 CET,4/457,0,LOG,00000,"duration: 105597.912 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=6988040.81..6988040.82 rows=1 width=8) (actual time=98596.998..98596.998 rows=1 loops=1)
  ->  Gather  (cost=6988040.59..6988040.80 rows=2 width=8) (actual time=98590.171..105597.701 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=6987040.59..6987040.60 rows=1 width=8) (actual time=98525.764..98525.764 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711221.13..6625873.30 rows=144466918 width=0) (actual time=85264.537..97193.311 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96718.38..2299741.79 rows=50000100 width=8) (actual time=7534.258..14272.689 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96681.38..528867.92 rows=8333350 width=16) (actual time=7532.558..12451.986 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=24) (actual time=1.717..2572.362 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1454.701..1454.702 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.738..655.189 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.623..1.623 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.602..1.604 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62308.950..62308.950 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12966.736..27298.247 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.959..5838.951 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=473.541..473.542 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=60.873..344.597 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.377..109.465 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=59.040..59.040 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.268..42.983 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.609..12.381 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.498..6.498 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..3.374 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:13:45.502 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,450,"",2021-03-21 14:47:00 CET,4/458,0,LOG,00000,"duration: 107465.552 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14781427.15..14781427.16 rows=1 width=8) (actual time=104035.596..104035.596 rows=1 loops=1)
  ->  Gather  (cost=14781426.94..14781427.15 rows=2 width=8) (actual time=104032.568..107465.331 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14780426.94..14780426.95 rows=1 width=8) (actual time=103977.645..103977.645 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..14419259.64 rows=144466918 width=0) (actual time=78390.849..102741.643 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=637627.57..12432530.52 rows=144466918 width=8) (actual time=78385.521..96668.829 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=636034.57..10444517.40 rows=144466918 width=8) (actual time=78361.052..88354.122 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=539353.19..7604606.94 rows=144466918 width=16) (actual time=46907.109..66619.978 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=46906.202..60482.513 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25454.851..39827.017 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.516..6928.135 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8514.797..8514.798 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.766..4176.313 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.749..1749.029 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.939..0.940 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.636..0.808 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=252.596..252.596 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.889..103.234 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.871..0.871 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.849..0.851 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3244.772..3244.772 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.104..505.660 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.116..24.116 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.687..12.331 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.990..4.990 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.639..2.799 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:15:28.852 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,451,"",2021-03-21 14:47:00 CET,4/459,0,LOG,00000,"duration: 103324.250 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98558.365..98558.365 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98549.842..103324.052 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98489.095..98489.095 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85441.953..97158.659 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8728.441..15583.209 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8726.655..13737.824 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.674..4401.162 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.630..1812.023 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.982..0.983 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.795..0.878 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1382.961..1382.961 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.849..547.026 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.705..1.705 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.683..1.686 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60621.095..60621.096 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12975.240..27104.492 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.767..5801.349 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=439.691..439.691 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=59.144..313.344 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.968..95.264 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.772..57.773 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.382..42.008 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.653..12.226 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.605..5.605 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.582..3.047 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:17:36.731 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,452,"",2021-03-21 14:47:00 CET,4/460,0,LOG,00000,"duration: 127849.194 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13121099.68..13121099.69 rows=1 width=8) (actual time=123005.747..123005.747 rows=1 loops=1)
  ->  Gather  (cost=13121099.46..13121099.67 rows=2 width=8) (actual time=123001.931..127848.653 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13120099.46..13120099.47 rows=1 width=8) (actual time=122952.121..122952.121 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..12758932.17 rows=144466917 width=0) (actual time=96334.929..121706.633 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..10772203.06 rows=144466917 width=8) (actual time=96330.107..115587.875 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..8784189.95 rows=144466917 width=8) (actual time=96304.415..107249.766 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..6424112.98 rows=150000000 width=8) (actual time=77825.333..90995.246 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8066.349..14813.696 rows=6666667 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8064.738..13006.483 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.197..4176.900 rows=6666667 loops=3)
                                                        Hash Cond: (ord.discount_id = dis.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.827..1674.203 rows=6666667 loops=3)
                                                        ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.322..1.323 rows=500 loops=3)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                              ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.043..1.159 rows=500 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1266.857..1266.858 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.280..495.469 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.548..1.548 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.533..1.534 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=54414.985..54414.985 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.190..7944.882 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.461..229.461 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.908..97.697 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.402..25.402 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.544..12.794 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.491..4.491 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.524..2.512 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:19:27.295 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,453,"",2021-03-21 14:47:00 CET,4/461,0,LOG,00000,"duration: 110550.568 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=104729.421..104729.421 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=104723.898..110550.398 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=104671.268..104671.268 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=91819.758..103362.946 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8807.642..15411.646 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8806.065..13613.396 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.427..4400.373 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.457..1799.710 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.931..0.931 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.699..0.798 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.454..1259.454 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.380..495.444 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.516..1.516 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.495..1.498 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=66983.269..66983.269 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=15737.505..29703.836 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.680..5347.695 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=4982.169..4982.169 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=51.719..350.034 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.983..107.882 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=50.411..50.411 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.775..37.276 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.571..10.201 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.065..6.065 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.689..3.235 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:21:23.361 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,454,"",2021-03-21 14:47:00 CET,4/462,0,LOG,00000,"duration: 116028.087 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16314174.04..16314174.05 rows=1 width=8) (actual time=112318.057..112318.058 rows=1 loops=1)
  ->  Gather  (cost=16314173.83..16314174.04 rows=2 width=8) (actual time=112313.764..116027.945 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16313173.83..16313173.84 rows=1 width=8) (actual time=112260.451..112260.451 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..15952006.53 rows=144466918 width=0) (actual time=103968.548..111092.580 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..13394258.08 rows=144466918 width=8) (actual time=44527.865..92253.806 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..11407528.95 rows=144466918 width=16) (actual time=44522.345..84015.178 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=44497.315..72568.493 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=44496.462..67199.359 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44495.812..61266.787 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11979.797..25850.475 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.793..5953.231 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.061..233.062 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.781..100.102 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7562.603..7562.603 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.899..2680.951 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.618..0.618 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.599..0.601 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.824..0.824 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.603..0.694 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.656..24.656 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.508..12.197 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.384..5.385 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.733..2.871 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4099.383..4099.383 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.147..482.496 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 03:23:05.900 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,455,"",2021-03-21 14:47:00 CET,4/463,0,LOG,00000,"duration: 102521.966 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97875.035..97875.035 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97867.572..102521.844 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97813.285..97813.286 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84901.798..96491.740 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=7986.702..14701.824 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=7985.074..12886.377 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.730..4092.648 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.680..1684.192 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.967..0.968 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.716..0.820 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1288.426..1288.427 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.425..523.690 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.549..1.550 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.531..1.533 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60638.402..60638.402 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12831.985..27049.448 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.834..5853.709 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=432.349..432.349 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.253..309.053 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..86.131 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=48.860..48.860 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.916..35.321 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.579..9.468 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.183..5.183 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.508..2.637 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:25:06.040 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,456,"",2021-03-21 14:47:00 CET,4/464,0,LOG,00000,"duration: 120102.568 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14411149.31..14411149.32 rows=1 width=8) (actual time=115639.590..115639.590 rows=1 loops=1)
  ->  Gather  (cost=14411149.10..14411149.31 rows=2 width=8) (actual time=115634.794..120101.851 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14410149.10..14410149.11 rows=1 width=8) (actual time=115582.276..115582.276 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14048981.80 rows=144466918 width=0) (actual time=75018.257..113670.927 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..12062545.43 rows=144466918 width=8) (actual time=75016.975..107641.975 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..10075816.31 rows=144466918 width=16) (actual time=75011.948..101392.954 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8087803.18 rows=144466918 width=16) (actual time=74987.190..91936.864 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=74986.412..87092.561 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43495.993..60008.200 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11897.383..25752.910 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.909..5955.945 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.432..237.433 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.826..98.257 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7731.184..7731.185 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.466..2697.151 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5379.867..5379.867 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.837..499.299 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.737..0.737 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.730..0.731 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.484..24.484 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.849..12.750 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.917..4.917 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.605..2.762 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.009..1.009 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.701..0.838 rows=500 loops=3)",,,,,,,,,""
2021-03-22 03:26:48.781 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,457,"",2021-03-21 14:47:00 CET,4/465,0,LOG,00000,"duration: 102734.157 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97251.416..97251.417 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97243.465..102733.988 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97189.792..97189.792 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84708.740..95918.772 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9686.871..16482.780 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9685.066..14653.810 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.620..5292.479 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.449..2673.677 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.120..1.121 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.840..0.957 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1359.923..1359.923 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.769..530.543 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.723..1.723 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.697..1.701 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59060.289..59060.289 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12265.391..26192.877 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.998..5752.365 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=390.535..390.535 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.170..278.141 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.797..84.859 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.064..43.064 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.170..32.270 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.504..8.706 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.581..4.581 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.624..2.596 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:28:50.631 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,458,"",2021-03-21 14:47:00 CET,4/466,0,LOG,00000,"duration: 121814.137 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9520102.69..9520102.70 rows=1 width=8) (actual time=117057.441..117057.442 rows=1 loops=1)
  ->  Gather  (cost=9520102.47..9520102.68 rows=2 width=8) (actual time=117054.293..121813.220 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9519102.47..9519102.48 rows=1 width=8) (actual time=117000.475..117000.475 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9157935.18 rows=144466918 width=0) (actual time=96095.978..115804.988 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4041361.43 rows=24077820 width=8) (actual time=96095.132..111065.386 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=96089.260..105597.442 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=51128.650..85404.619 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=51107.019..73241.288 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=51105.765..66891.613 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=27743.340..42914.549 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.754..7037.123 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10529.683..10529.684 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.194..2554.932 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=279.270..279.270 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.602..113.539 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.223..1.223 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.046..1.128 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.291..21.291 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.895..11.314 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1308.013..1308.014 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.817..475.360 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.779..5.779 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.478..2.966 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.526..0.526 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.498..0.500 rows=4 loops=3)",,,,,,,,,""
2021-03-22 03:30:33.295 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,459,"",2021-03-21 14:47:00 CET,4/467,0,LOG,00000,"duration: 102654.925 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97500.554..97500.554 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97492.428..102653.134 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97440.652..97440.652 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84885.183..96140.479 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9180.914..15761.976 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9179.389..13967.092 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.668..4386.314 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.549..1802.797 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.047..1.048 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.866..0.946 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1991.172..1991.172 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.435..483.729 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.455..1.455 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.437..1.441 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60097.515..60097.515 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12338.719..26366.847 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.779..5786.210 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=407.377..407.377 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.798..289.105 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.918..87.613 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.506..43.506 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.531..32.377 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.615..8.730 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.822..4.822 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.563..2.630 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:32:33.684 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,460,"",2021-03-21 14:47:00 CET,4/468,0,LOG,00000,"duration: 120361.880 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14505414.30..14505414.31 rows=1 width=8) (actual time=116238.276..116238.276 rows=1 loops=1)
  ->  Gather  (cost=14505414.09..14505414.30 rows=2 width=8) (actual time=116234.051..120361.758 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14504414.09..14504414.10 rows=1 width=8) (actual time=116174.942..116174.943 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14143246.79 rows=144466918 width=0) (actual time=74662.129..114470.088 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..12156810.42 rows=144466918 width=8) (actual time=74661.192..108590.208 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..10170081.30 rows=144466918 width=16) (actual time=74656.223..102376.897 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8182068.17 rows=144466918 width=16) (actual time=74631.340..92951.800 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3065494.42 rows=24077820 width=24) (actual time=74630.404..87775.221 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=56370.204..67738.874 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24397.264..40995.378 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.454..7058.667 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7440.871..7440.871 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.581..2623.554 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4547.008..4547.008 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.863..508.223 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.138..237.138 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.826..98.022 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.906..0.906 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.896..0.897 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.567..24.567 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.541..12.621 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.881..4.882 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.473..2.622 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.708..0.708 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.505..0.599 rows=500 loops=3)",,,,,,,,,""
2021-03-22 03:34:14.593 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,461,"",2021-03-21 14:47:00 CET,4/469,0,LOG,00000,"duration: 100901.938 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95746.426..95746.426 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95739.603..100901.824 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95684.734..95684.734 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83697.941..94445.937 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8559.268..15140.307 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8557.312..13333.210 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.786..4076.542 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.619..1662.744 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.121..1.122 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.839..0.954 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1231.920..1231.920 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.553..490.081 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.883..1.883 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.853..1.856 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59518.383..59518.383 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12470.860..26080.750 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.068..5588.331 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=426.230..426.231 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.891..297.652 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.764..89.379 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.806..41.806 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.924..31.116 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.560..8.301 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.267..4.267 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.599..2.413 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:36:47.809 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,462,"",2021-03-21 14:47:00 CET,4/470,0,LOG,00000,"duration: 153182.110 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16645686.52..16645686.53 rows=1 width=8) (actual time=142408.129..142408.129 rows=1 loops=1)
  ->  Gather  (cost=16645686.31..16645686.52 rows=2 width=8) (actual time=142403.013..153181.269 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16644686.31..16644686.32 rows=1 width=8) (actual time=142351.117..142351.117 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..16283519.02 rows=144466917 width=0) (actual time=115656.930..141091.380 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..14296789.91 rows=144466917 width=8) (actual time=115650.627..134833.816 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..12308776.80 rows=144466917 width=8) (actual time=115619.589..126219.299 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1206344.25..9468866.35 rows=144466917 width=16) (actual time=89786.103..103201.318 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=69089.549..83778.965 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=4.340..6525.116 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.301..4363.454 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.091..2016.872 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.169..1.169 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.152..1.154 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.993..1.994 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.750..1.854 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51364.504..51364.505 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.384..7905.784 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.909..233.909 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.944..99.060 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4579.888..4579.888 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.793..489.277 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=30.711..30.711 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.562..14.903 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.926..5.926 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..3.079 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:38:36.289 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,463,"",2021-03-21 14:47:00 CET,4/471,0,LOG,00000,"duration: 108464.634 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100706.062..100706.062 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100696.388..108462.486 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100643.386..100643.387 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=86901.582..99254.868 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8467.131..15521.763 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8465.767..13633.458 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.420..4359.422 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.501..1779.322 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.877..0.878 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.698..0.776 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1346.471..1346.471 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.411..540.820 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.300..1.300 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.281..1.283 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62334.359..62334.359 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13883.782..28768.166 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.910..6161.885 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=475.858..475.859 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.118..341.922 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..104.873 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=56.905..56.906 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.877..41.336 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.511..11.766 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.246..5.246 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.493..2.746 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:41:14.089 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,464,"",2021-03-21 14:47:00 CET,4/472,0,LOG,00000,"duration: 157764.410 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18335231.26..18335231.27 rows=1 width=8) (actual time=145493.512..145493.512 rows=1 loops=1)
  ->  Gather  (cost=18335231.04..18335231.25 rows=2 width=8) (actual time=145486.867..157762.317 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18334231.04..18334231.05 rows=1 width=8) (actual time=145424.811..145424.811 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17973063.75 rows=144466917 width=0) (actual time=118155.964..144109.956 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..15986334.64 rows=144466917 width=8) (actual time=118149.412..137727.236 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..13998321.53 rows=144466917 width=8) (actual time=118120.913..128935.493 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=1206344.25..11158411.08 rows=144466917 width=16) (actual time=90314.267..109935.104 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=90313.237..103606.831 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=68079.933..83336.067 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.165..4860.124 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.110..2128.500 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.987..0.988 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.955..0.957 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50116.496..50116.497 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.250..7917.798 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.619..238.620 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.829..92.201 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.980..0.980 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.822..0.893 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1224.682..1224.682 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.138..475.736 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.166..28.166 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.517..14.064 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.137..6.137 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.619..3.259 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:42:55.637 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,465,"",2021-03-21 14:47:00 CET,4/473,0,LOG,00000,"duration: 101530.934 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96735.266..96735.266 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96728.205..101528.164 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96678.323..96678.323 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=83977.053..95384.071 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8911.626..15471.187 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8910.140..13679.257 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.890..4361.068 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.767..1783.552 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.074..1.075 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.800..0.918 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1463.475..1463.475 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.189..499.832 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.427..1.427 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.410..1.412 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59433.661..59433.661 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11523.408..25809.534 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.552..5348.293 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=610.294..610.294 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.937..301.159 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.893..92.034 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.720..41.720 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.470..31.355 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..8.305 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.871..4.871 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.513..2.614 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:44:50.853 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,466,"",2021-03-21 14:47:00 CET,4/474,0,LOG,00000,"duration: 115184.009 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10893862.32..10893862.33 rows=1 width=8) (actual time=111841.306..111841.306 rows=1 loops=1)
  ->  Gather  (cost=10893862.11..10893862.32 rows=2 width=8) (actual time=111836.612..115181.394 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10892862.11..10892862.12 rows=1 width=8) (actual time=111780.882..111780.886 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..10531694.81 rows=144466918 width=0) (actual time=77578.269..110217.107 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=637627.57..8544965.69 rows=144466918 width=8) (actual time=77572.298..103478.014 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=77571.804..98605.609 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=635997.57..3095728.92 rows=24077820 width=16) (actual time=77537.494..88974.379 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=49239.507..63763.166 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26956.981..41940.046 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.333..7420.260 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8884.731..8884.731 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.077..4441.903 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.309..1889.066 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.739..0.739 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.516..0.625 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.638..247.639 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.928..106.883 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5226.023..5226.023 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.293..508.405 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.979..33.979 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.465..16.735 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.471..0.471 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.449..0.451 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.665..5.665 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.461..3.022 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:46:38.359 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,467,"",2021-03-21 14:47:00 CET,4/475,0,LOG,00000,"duration: 107496.232 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98843.926..98843.927 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98837.632..107496.072 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98783.000..98783.000 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86274.733..97485.928 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8519.399..15171.149 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8517.538..13349.963 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.430..4424.481 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.509..1809.079 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.878..0.879 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.655..0.752 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1250.887..1250.887 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.535..505.328 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.782..1.782 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.757..1.760 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61019.426..61019.426 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13255.744..27095.171 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.837..5755.958 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=398.274..398.274 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.885..277.537 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.810..85.116 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.755..40.755 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.350..30.858 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.590..8.162 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.654..4.654 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.755..2.711 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:48:35.536 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,468,"",2021-03-21 14:47:00 CET,4/476,0,LOG,00000,"duration: 117141.452 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9398071.02..9398071.03 rows=1 width=8) (actual time=113599.826..113599.826 rows=1 loops=1)
  ->  Gather  (cost=9398070.80..9398071.01 rows=2 width=8) (actual time=113594.866..117141.303 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9397070.80..9397070.81 rows=1 width=8) (actual time=113542.583..113542.583 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9035903.51 rows=144466918 width=0) (actual time=79746.223..111998.260 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3919329.76 rows=24077820 width=8) (actual time=79745.418..106744.834 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3587950.73 rows=24077820 width=16) (actual time=79740.234..100425.756 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529552.00..3255287.71 rows=24077820 width=16) (actual time=79716.048..90895.232 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432870.63..2647591.98 rows=24077820 width=24) (actual time=45518.517..69737.273 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=45517.530..62236.919 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12644.883..27334.654 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.548..6317.708 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.781..240.782 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.792..106.861 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7591.772..7591.772 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.154..2732.739 rows=6666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.942..0.942 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.764..0.843 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1247.310..1247.310 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.005..501.048 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.877..23.877 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.567..11.743 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.094..5.094 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.555..2.844 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.580..0.580 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.553..0.555 rows=4 loops=3)",,,,,,,,,""
2021-03-22 03:50:19.028 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,469,"",2021-03-21 14:47:00 CET,4/477,0,LOG,00000,"duration: 103481.568 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96103.326..96103.326 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96095.855..103481.436 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96043.326..96043.326 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83968.014..94816.502 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8093.314..14765.589 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8091.635..12961.132 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.636..4162.309 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.583..1700.550 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.008..1.009 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.794..0.882 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1258.371..1258.372 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.721..507.930 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.626..1.626 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.607..1.609 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60206.879..60206.879 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13204.069..27128.951 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.837..5798.356 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=463.823..463.823 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.539..330.261 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.850..91.799 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.367..45.367 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.591..33.499 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.523..8.827 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.979..4.979 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.588..2.675 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:52:14.340 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,470,"",2021-03-21 14:47:00 CET,4/478,0,LOG,00000,"duration: 115281.233 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14907985.04..14907985.05 rows=1 width=8) (actual time=111367.394..111367.394 rows=1 loops=1)
  ->  Gather  (cost=14907984.82..14907985.03 rows=2 width=8) (actual time=111362.849..115281.064 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14906984.82..14906984.83 rows=1 width=8) (actual time=111304.307..111304.308 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14545817.53 rows=144466917 width=0) (actual time=83847.628..110002.642 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12559088.42 rows=144466917 width=8) (actual time=83840.191..103673.286 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..10571075.31 rows=144466917 width=8) (actual time=83805.743..95068.327 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=507869.00..8210998.34 rows=150000000 width=8) (actual time=54523.688..76837.106 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=507832.00..2898461.34 rows=25000000 width=16) (actual time=54522.883..71674.812 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=54522.132..66054.501 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25814.889..43427.948 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.735..7502.730 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7246.351..7246.352 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.754..2648.446 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1273.857..1273.858 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.780..484.056 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.727..0.727 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.525..0.616 rows=500 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.765..0.765 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.753..0.755 rows=4 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=1986.390..1986.390 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.943..116.041 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.937..33.937 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.623..16.424 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.938..6.938 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.622..3.496 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:53:57.453 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,471,"",2021-03-21 14:47:00 CET,4/479,0,LOG,00000,"duration: 103103.813 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97837.375..97837.376 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97832.363..103103.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97781.936..97781.937 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85170.425..96469.105 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8360.118..15006.152 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8357.973..13191.248 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.884..4299.018 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.857..1739.141 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.985..0.985 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.780..0.869 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.739..1321.739 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.947..526.056 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.072..2.073 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.049..2.052 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60876.976..60876.977 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13339.757..27409.536 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.928..6569.176 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=423.814..423.814 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.146..303.764 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.784..84.847 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.049..42.049 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.899..31.148 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.442..8.232 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.361..4.361 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.516..2.410 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:55:55.561 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,472,"",2021-03-21 14:47:00 CET,4/480,0,LOG,00000,"duration: 118079.514 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=114582.950..114582.950 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=114579.315..118079.089 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=114524.806..114524.807 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=81225.513..113004.935 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14529894.16 rows=144466918 width=8) (actual time=81224.278..107501.802 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..12543165.04 rows=144466918 width=16) (actual time=81217.742..101348.988 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..10555151.91 rows=144466918 width=16) (actual time=81187.372..92178.608 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=44741.463..67782.174 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44740.632..61000.724 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12752.154..26484.823 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.636..6571.893 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.699..240.700 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.858..105.469 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7569.894..7569.894 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.194..2694.164 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.782..0.783 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.764..0.767 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4776.017..4776.017 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.020..487.042 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.978..29.978 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.593..14.953 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.375..6.375 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.563..3.315 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.946..0.946 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.546..0.672 rows=500 loops=3)",,,,,,,,,""
2021-03-22 03:57:43.949 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,473,"",2021-03-21 14:47:00 CET,4/481,0,LOG,00000,"duration: 108380.585 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99919.886..99919.886 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99915.999..108380.449 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99864.350..99864.350 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87438.005..98579.592 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8217.542..15020.310 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8215.564..13201.959 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.738..4193.172 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.467..1711.897 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.219..1.220 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.981..1.080 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1320.996..1320.996 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.504..530.267 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.910..1.911 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.888..1.891 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62455.652..62455.652 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14183.524..27933.044 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.939..6752.903 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=445.515..445.515 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.943..305.423 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.983..92.630 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.595..43.595 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.202..32.509 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.622..8.845 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.492..4.492 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.565..2.515 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 03:59:32.733 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,474,"",2021-03-21 14:47:00 CET,4/482,0,LOG,00000,"duration: 108754.039 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10893862.32..10893862.33 rows=1 width=8) (actual time=105554.137..105554.137 rows=1 loops=1)
  ->  Gather  (cost=10893862.11..10893862.32 rows=2 width=8) (actual time=105550.592..108753.913 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10892862.11..10892862.12 rows=1 width=8) (actual time=105495.669..105495.669 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..10531694.81 rows=144466918 width=0) (actual time=84225.345..104268.890 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=637627.57..8544965.69 rows=144466918 width=8) (actual time=84220.356..98418.484 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=637590.57..3428391.94 rows=24077820 width=16) (actual time=84219.699..93954.023 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=540909.19..2820696.22 rows=24077820 width=24) (actual time=48066.691..74318.969 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=48043.409..62602.411 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26987.500..41105.808 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.833..7668.817 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=9022.449..9022.449 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.191..4426.662 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.465..1876.807 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.687..0.688 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.504..0.583 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.977..246.977 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.050..105.472 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.928..22.928 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.885..12.132 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1248.604..1248.604 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.928..474.749 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.628..0.629 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.612..0.613 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.665..4.665 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.538..2.603 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:01:12.163 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,475,"",2021-03-21 14:47:00 CET,4/483,0,LOG,00000,"duration: 99416.591 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=93811.260..93811.260 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=93805.867..99415.472 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=93756.461..93756.462 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=81988.330..92584.095 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8167.093..14758.433 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8165.025..12960.577 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.379..4184.499 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.428..1700.043 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.911..0.911 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.714..0.802 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1271.337..1271.337 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.882..507.003 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.976..1.977 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.949..1.951 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58004.228..58004.228 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12138.839..25709.172 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.885..5425.897 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=409.463..409.463 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.321..285.504 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.800..85.937 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.191..42.191 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.926..31.608 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.510..8.510 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.329..4.329 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.496..2.405 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:03:15.571 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,476,"",2021-03-21 14:47:00 CET,4/484,0,LOG,00000,"duration: 123367.038 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=119923.081..119923.081 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=119917.637..123366.908 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=119855.565..119855.565 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=104888.027..118634.775 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12714413.73 rows=144466918 width=8) (actual time=104886.738..113690.431 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=54312.735..95406.333 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=54307.511..87730.803 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=54307.044..81976.211 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=54282.078..70195.261 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=29684.588..45879.476 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.498..7580.171 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10585.207..10585.210 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.302..2666.163 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=261.912..261.912 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.952..106.830 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.642..24.642 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.525..12.745 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.440..0.441 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.430..0.432 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.107..5.108 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.666..2.677 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1460.333..1460.333 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.053..555.713 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.994..0.994 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.718..0.834 rows=500 loops=3)",,,,,,,,,""
2021-03-22 04:05:00.438 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,477,"",2021-03-21 14:47:00 CET,4/485,0,LOG,00000,"duration: 104859.827 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99827.907..99827.908 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99820.217..104859.679 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99770.919..99770.919 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87058.776..98470.426 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8560.065..15213.544 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8558.257..13405.647 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.641..4420.312 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.420..1811.076 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.177..1.178 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.934..1.039 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1263.994..1263.995 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.530..493.466 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.709..1.709 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.687..1.689 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62544.454..62544.454 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13654.443..27798.792 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.796..5719.551 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=421.047..421.047 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.903..289.259 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.781..82.061 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.818..39.818 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.716..29.759 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.514..7.835 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.102..4.103 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.460..2.303 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:07:06.339 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,478,"",2021-03-21 14:47:00 CET,4/486,0,LOG,00000,"duration: 125859.743 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9520102.69..9520102.70 rows=1 width=8) (actual time=122549.218..122549.218 rows=1 loops=1)
  ->  Gather  (cost=9520102.47..9520102.68 rows=2 width=8) (actual time=122544.797..125859.580 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9519102.47..9519102.48 rows=1 width=8) (actual time=122488.584..122488.584 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9157935.18 rows=144466918 width=0) (actual time=100244.728..121238.804 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4041361.43 rows=24077820 width=8) (actual time=100243.806..116317.782 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531145.00..3709982.40 rows=24077820 width=16) (actual time=100238.565..110571.325 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=50965.973..86013.377 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=50936.468..73675.576 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=50935.702..67267.749 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25735.254..41974.561 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.736..7385.947 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7895.322..7895.322 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.686..2828.740 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=241.193..241.193 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.531..104.298 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.735..0.735 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.571..0.650 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.104..29.104 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.880..14.502 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4902.246..4902.246 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.153..507.042 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.119..5.119 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.523..2.868 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.628..0.629 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.605..0.606 rows=4 loops=3)",,,,,,,,,""
2021-03-22 04:08:52.277 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,479,"",2021-03-21 14:47:00 CET,4/487,0,LOG,00000,"duration: 105928.244 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97141.433..97141.433 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97136.219..105928.117 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97087.705..97087.706 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84349.689..95789.027 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8518.348..15194.451 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8516.394..13380.024 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.718..4378.958 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.581..1785.194 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.094..1.095 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.849..0.957 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1313.397..1313.397 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.275..526.964 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.776..1.776 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.754..1.760 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59773.656..59773.656 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12430.602..26474.045 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.826..5502.560 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1366.065..1366.066 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.106..299.694 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.939..85.059 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.835..45.835 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.876..33.682 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.584..9.762 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.173..4.174 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.388 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:10:48.779 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,480,"",2021-03-21 14:47:00 CET,4/488,0,LOG,00000,"duration: 116461.807 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=111980.700..111980.700 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=111977.184..116461.689 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=111929.030..111929.030 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=95594.689..110658.919 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12714120.98 rows=144466918 width=8) (actual time=95590.009..104857.444 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9874210.53 rows=144466918 width=16) (actual time=47720.056..86518.777 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..7886197.40 rows=144466918 width=16) (actual time=47697.130..74875.513 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=47696.091..69949.455 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47695.116..63628.826 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24554.607..39906.617 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.761..6991.335 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7236.119..7236.119 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.594..2533.867 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=248.012..248.012 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.772..100.003 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.940..0.940 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.684..0.792 rows=500 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.014..1.015 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.005..1.006 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.602..22.602 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=1.224..12.059 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1317.713..1317.714 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.912..524.858 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.382..4.382 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.454..2.395 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:12:33.030 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,481,"",2021-03-21 14:47:00 CET,4/489,0,LOG,00000,"duration: 104230.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95631.526..95631.526 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95626.375..104230.099 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95566.489..95566.489 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83557.705..94346.801 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8489.305..15083.379 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8487.865..13280.676 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.671..4374.427 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.734..1791.707 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.898..0.899 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.696..0.792 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1273.250..1273.250 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.608..495.632 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.377..1.377 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.358..1.360 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59609.394..59609.394 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12030.855..25814.218 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.947..5607.152 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=399.353..399.353 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.022..286.015 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.027..87.700 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.663..42.664 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.304..32.044 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.658..8.779 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.538..4.538 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.638..2.624 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:14:09.486 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,482,"",2021-03-21 14:47:00 CET,4/490,0,LOG,00000,"duration: 96414.806 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10354897.41..10354897.42 rows=1 width=8) (actual time=92971.410..92971.410 rows=1 loops=1)
  ->  Gather  (cost=10354897.19..10354897.40 rows=2 width=8) (actual time=92967.359..96414.255 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10353897.19..10353897.20 rows=1 width=8) (actual time=92910.952..92910.952 rows=1 loops=3)
              ->  Hash Join  (cost=542542.35..9992729.90 rows=144466918 width=0) (actual time=72283.539..91654.627 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=542526.10..8006293.53 rows=144466918 width=8) (actual time=72282.055..86445.887 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=542489.10..2889719.78 rows=24077820 width=16) (actual time=72281.319..81864.255 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=445807.72..2282024.05 rows=24077820 width=24) (actual time=44870.059..61570.094 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=13383.029..25954.790 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.570..6240.055 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=1003.408..1003.408 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=30.049..493.796 rows=333333 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=25.325..351.339 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.588..101.791 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.338..24.353 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..12.323 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.617..4.618 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.797..2.574 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7531.616..7531.616 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.002..2754.135 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1711.757..1711.757 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.399..554.853 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.706..0.706 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.678..0.680 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.074..1.074 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.761..0.918 rows=500 loops=3)",,,,,,,,,""
2021-03-22 04:15:57.224 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,483,"",2021-03-21 14:47:00 CET,4/491,0,LOG,00000,"duration: 107728.873 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98921.964..98921.964 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98915.701..107728.621 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98833.193..98833.193 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86296.065..97542.653 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8876.524..15635.091 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8874.348..13870.470 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.927..4343.777 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.744..1769.385 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.077..1.078 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.861..0.967 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1411.960..1411.960 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.463..540.317 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.105..2.106 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.086..2.089 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61580.427..61580.427 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12697.344..26886.783 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.895..5493.716 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=424.745..424.745 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.488..304.799 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.967..96.887 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.183..43.183 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.322..32.182 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.595..9.038 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.620..4.620 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.613..2.632 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:17:58.914 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,484,"",2021-03-21 14:47:00 CET,4/492,0,LOG,00000,"duration: 121653.375 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19582880.55..19582880.56 rows=1 width=8) (actual time=117391.768..117391.769 rows=1 loops=1)
  ->  Gather  (cost=19582880.34..19582880.55 rows=2 width=8) (actual time=117386.036..121652.477 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19581880.34..19581880.35 rows=1 width=8) (actual time=117333.293..117333.293 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19220713.05 rows=144466917 width=0) (actual time=81666.135..115790.132 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..17233983.94 rows=144466917 width=8) (actual time=81660.736..108975.956 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..15247547.58 rows=144466917 width=16) (actual time=81659.904..103646.234 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13259534.47 rows=144466917 width=16) (actual time=81633.876..93768.086 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=432891.38..10137462.02 rows=144466917 width=24) (actual time=56076.068..70816.966 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=25496.404..48623.616 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25495.132..41995.029 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.001..7488.124 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7618.038..7618.039 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.400..2690.657 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.209..1.209 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.194..1.196 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=271.782..271.783 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.101..110.461 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1271.575..1271.575 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.970..508.579 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.670..25.670 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..13.128 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.808..0.808 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.521..0.669 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.081..5.081 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.679 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:19:40.644 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,485,"",2021-03-21 14:47:00 CET,4/493,0,LOG,00000,"duration: 101719.859 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96409.155..96409.155 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96405.666..101719.727 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96347.784..96347.784 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=83931.225..95124.619 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8144.462..14765.549 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8142.048..12968.448 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.671..4127.681 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.605..1667.040 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.007..1.007 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.724..0.843 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1339.810..1339.810 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.320..524.880 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.244..2.244 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.216..2.219 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60100.525..60100.525 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13093.993..27282.329 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.944..5946.590 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=486.139..486.139 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=56.360..358.588 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.935..105.934 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=55.084..55.084 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.418..40.479 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.587..10.898 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.731..6.731 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.555..3.370 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:21:52.474 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,486,"",2021-03-21 14:47:00 CET,4/494,0,LOG,00000,"duration: 131785.432 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=127947.137..127947.137 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=127940.734..131784.548 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=127888.287..127888.287 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=98366.732..126381.114 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8873584.15 rows=144466918 width=8) (actual time=98361.239..119997.052 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=98360.560..115429.281 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=98359.742..110059.986 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=50886.560..81776.851 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=50854.546..68267.033 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26365.580..42353.697 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.674..7624.219 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7970.262..7970.263 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.433..2914.875 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.882..234.882 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.809..106.652 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.640..31.640 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.485..15.060 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5353.106..5353.106 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.835..489.705 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.785..0.785 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.561..0.661 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.652..0.652 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.636..0.637 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.141..5.141 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.651..2.866 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:23:39.517 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,487,"",2021-03-21 14:47:00 CET,4/495,0,LOG,00000,"duration: 107030.983 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98754.778..98754.778 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98746.320..107028.887 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98696.546..98696.546 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86081.257..97403.104 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8461.615..15392.100 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8460.019..13550.331 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.392..4307.552 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.327..1746.406 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.960..0.960 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.656..0.791 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1326.831..1326.831 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.418..519.001 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.515..1.515 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.449..1.452 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61804.010..61804.010 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14020.333..28004.120 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.807..5680.901 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=458.493..458.493 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.718..325.042 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.013..104.418 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.268..43.269 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.816..32.369 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.652..8.918 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.008..5.009 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.551..2.712 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:25:45.599 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,488,"",2021-03-21 14:47:00 CET,4/496,0,LOG,00000,"duration: 126045.262 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9567130.69..9567130.70 rows=1 width=8) (actual time=122223.796..122223.796 rows=1 loops=1)
  ->  Gather  (cost=9567130.47..9567130.68 rows=2 width=8) (actual time=122217.989..126044.669 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9566130.47..9566130.48 rows=1 width=8) (actual time=122159.977..122159.977 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9204963.18 rows=144466918 width=0) (actual time=79748.186..120396.554 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4088389.43 rows=24077820 width=8) (actual time=79747.222..114705.913 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=79742.311..108443.738 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=79741.655..102563.654 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=79715.983..92319.281 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=52400.359..68468.876 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26362.429..42831.839 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.767..7649.606 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8214.140..8214.140 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.235..2915.064 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=255.092..255.092 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..112.287 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1520.507..1520.507 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.151..550.025 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.295..25.295 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.500..12.968 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.620..0.620 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.436..0.520 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.796..4.796 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.461..2.630 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.659..0.659 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.638..0.640 rows=4 loops=3)",,,,,,,,,""
2021-03-22 04:27:30.445 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,489,"",2021-03-21 14:47:00 CET,4/497,0,LOG,00000,"duration: 104837.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97277.770..97277.770 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97272.023..104837.102 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97218.060..97218.060 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85336.540..96044.458 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8539.428..15286.043 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8537.886..13483.434 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.830..4235.918 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.808..1737.776 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.975..0.976 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.783..0.865 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1523.634..1523.635 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.521..551.536 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.477..1.477 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.455..1.458 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60729.215..60729.215 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12309.598..26287.895 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.765..5725.528 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=387.811..387.811 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.975..280.733 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.806..93.464 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.813..42.813 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.562..32.882 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..11.503 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=3.999..4.000 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.479..2.311 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:29:33.577 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,490,"",2021-03-21 14:47:00 CET,4/498,0,LOG,00000,"duration: 123091.721 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11139304.76..11139304.77 rows=1 width=8) (actual time=119675.120..119675.120 rows=1 loops=1)
  ->  Gather  (cost=11139304.55..11139304.76 rows=2 width=8) (actual time=119669.700..123091.586 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11138304.55..11138304.56 rows=1 width=8) (actual time=119616.531..119616.531 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10777137.25 rows=144466918 width=0) (actual time=85070.413..118080.463 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8790408.13 rows=144466918 width=8) (actual time=85065.021..111403.717 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3673834.38 rows=24077820 width=16) (actual time=85064.470..106569.607 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529552.00..3341171.35 rows=24077820 width=16) (actual time=85036.179..96928.268 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=57546.389..72561.316 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25857.976..49367.253 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25856.930..42347.389 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.599..7414.707 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7785.523..7785.523 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.085..2875.153 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.972..0.972 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.718..0.846 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=262.138..262.139 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.820..114.103 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2599.414..2599.414 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.021..548.276 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.868..27.868 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.528..13.738 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.531..0.531 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.513..0.514 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.070..5.070 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.544..2.779 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:31:16.806 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,491,"",2021-03-21 14:47:00 CET,4/499,0,LOG,00000,"duration: 103218.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98454.170..98454.171 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98448.249..103217.976 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98396.476..98396.477 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86086.832..97148.841 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9252.691..15946.726 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9250.788..14121.365 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.503..4373.296 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.532..1782.732 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.932..0.933 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.688..0.790 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1567.455..1567.455 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.725..663.590 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.813..1.813 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.791..1.793 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61187.094..61187.094 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12480.338..26423.929 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.761..5623.047 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=483.023..483.023 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.769..347.422 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.842..117.402 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.565..43.565 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.422..32.779 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.500..9.050 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.823..4.824 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.548..2.698 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:33:19.104 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,492,"",2021-03-21 14:47:00 CET,4/500,0,LOG,00000,"duration: 122259.277 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16878498.04..16878498.05 rows=1 width=8) (actual time=119120.926..119120.926 rows=1 loops=1)
  ->  Gather  (cost=16878497.83..16878498.04 rows=2 width=8) (actual time=119116.626..122258.845 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16877497.83..16877497.84 rows=1 width=8) (actual time=119057.044..119057.045 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16516330.53 rows=144466918 width=0) (actual time=97307.750..117820.539 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..14529894.16 rows=144466918 width=8) (actual time=97306.487..112673.982 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531165.75..12543165.04 rows=144466918 width=16) (actual time=97299.436..107056.438 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..9421092.58 rows=144466918 width=24) (actual time=45493.648..83205.347 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=45470.267..69687.167 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=45469.709..63642.234 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12632.201..26888.926 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.917..6283.160 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.941..257.942 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.817..116.299 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7288.087..7288.087 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.868..2651.083 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.527..0.527 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.520..0.521 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.988..22.988 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.796..11.984 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4741.539..4741.539 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.930..613.530 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.850..5.850 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.612..3.054 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.993..0.993 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.763..0.861 rows=500 loops=3)",,,,,,,,,""
2021-03-22 04:35:02.305 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,493,"",2021-03-21 14:47:00 CET,4/501,0,LOG,00000,"duration: 103192.542 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98373.836..98373.836 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98369.090..103192.404 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98314.915..98314.915 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85621.935..97014.974 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8505.036..15162.838 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8503.218..13328.837 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.514..4438.371 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.448..1810.467 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.008..1.008 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.775..0.871 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1251.529..1251.529 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.627..505.539 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.755..1.755 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.730..1.732 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61658.308..61658.308 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13641.106..27693.962 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.938..5749.136 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=392.321..392.322 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.273..273.497 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.779..83.360 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.158..39.158 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.732..29.401 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..7.806 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.132..4.133 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.352 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:36:47.681 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,494,"",2021-03-21 14:47:00 CET,4/502,0,LOG,00000,"duration: 105348.991 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9025702.17..9025702.18 rows=1 width=8) (actual time=101907.339..101907.340 rows=1 loops=1)
  ->  Gather  (cost=9025701.95..9025702.16 rows=2 width=8) (actual time=101903.169..105346.859 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9024701.95..9024701.96 rows=1 width=8) (actual time=101848.132..101848.132 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8663534.66 rows=144466918 width=0) (actual time=80811.233..100557.932 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=537183.18..3546960.91 rows=24077820 width=8) (actual time=80810.316..95541.390 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=537166.93..3215874.63 rows=24077820 width=16) (actual time=80809.539..90531.222 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=440485.55..2608178.91 rows=24077820 width=24) (actual time=50716.361..67040.409 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12595.949..33119.657 rows=20000000 loops=3)
                                            Hash Cond: (sub.category_id = cat.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12590.151..25962.847 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.734..6134.784 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=467.828..467.828 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=25.316..334.306 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.095..91.503 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.890..23.890 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.701..12.255 rows=50000 loops=3)
                                            ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.671..5.671 rows=10000 loops=3)
                                                  Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                  ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.143..3.247 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7780.244..7780.244 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.042..2864.000 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4983.756..4983.756 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.956..502.999 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.756..0.756 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.530..0.641 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.585..0.585 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.560..0.562 rows=4 loops=3)",,,,,,,,,""
2021-03-22 04:38:31.241 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,495,"",2021-03-21 14:47:00 CET,4/503,0,LOG,00000,"duration: 103550.190 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96623.909..96623.909 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96615.130..103550.082 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96557.543..96557.543 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84889.028..95383.687 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9434.100..16026.064 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9432.428..14221.998 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.319..4368.517 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.822..1768.029 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.444..1.445 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.162..1.288 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1288.944..1288.944 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.915..509.499 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.583..1.583 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.562..1.565 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59370.228..59370.229 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11891.550..25531.607 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.941..5593.566 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=401.783..401.783 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.698..286.084 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.892..85.152 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.466..47.466 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.470..34.865 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.646..9.714 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.734..4.734 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.550..2.631 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:40:33.245 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,496,"",2021-03-21 14:47:00 CET,4/504,0,LOG,00000,"duration: 121967.240 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11470155.42..11470155.43 rows=1 width=8) (actual time=118055.103..118055.103 rows=1 loops=1)
  ->  Gather  (cost=11470155.20..11470155.41 rows=2 width=8) (actual time=118048.289..121967.097 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11469155.20..11469155.21 rows=1 width=8) (actual time=117992.015..117992.016 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..11107987.91 rows=144466918 width=0) (actual time=108937.732..116786.407 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8550239.45 rows=144466918 width=8) (actual time=51272.206..98700.253 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3433665.70 rows=24077820 width=16) (actual time=51271.395..92804.721 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=51266.784..85188.596 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432870.63..2769623.65 rows=24077820 width=24) (actual time=51243.810..73779.110 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=51242.962..67437.046 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26205.844..42389.662 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.979..7633.428 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7232.516..7232.516 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.333..2628.703 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.881..230.882 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.635..100.490 rows=333333 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.818..0.818 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.645..0.723 rows=500 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.595..22.595 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.534..11.618 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.509..4.509 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.466..2.355 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.764..0.765 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.744..0.746 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2583.747..2583.747 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.855..531.582 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 04:42:16.308 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,497,"",2021-03-21 14:47:00 CET,4/505,0,LOG,00000,"duration: 103055.348 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98376.927..98376.927 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98370.755..103055.190 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98288.930..98288.931 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86025.594..97013.135 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9563.642..16056.145 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9561.672..14278.149 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.556..5345.375 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.488..2702.256 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.022..1.022 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.738..0.859 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.017..1238.017 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.435..489.065 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.882..1.882 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.864..1.867 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60800.117..60800.117 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13343.289..27229.123 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.090..5790.273 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=408.332..408.332 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.812..292.012 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.884..84.651 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.627..42.628 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.910..31.560 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.597..8.530 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.212..4.212 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.565..2.404 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:44:15.129 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,498,"",2021-03-21 14:47:00 CET,4/506,0,LOG,00000,"duration: 118790.739 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=115306.810..115306.810 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=115303.465..118789.707 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=115248.572..115248.572 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=99686.143..114021.304 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..12714120.98 rows=144466918 width=8) (actual time=99680.413..108357.374 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..9874210.53 rows=144466918 width=16) (actual time=48000.751..86795.752 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=47999.802..80585.040 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=47999.296..74692.404 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47973.605..63189.075 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24766.872..39771.582 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.296..7099.251 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7691.154..7691.155 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.324..2696.304 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=222.920..222.920 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.781..99.633 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.325..25.325 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.452..12.566 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.476..0.476 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.467..0.468 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.905..0.905 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.680..0.777 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4824.129..4824.129 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.808..508.215 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.412..5.413 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.576..2.885 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:45:59.269 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,499,"",2021-03-21 14:47:00 CET,4/507,0,LOG,00000,"duration: 104131.700 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99049.616..99049.616 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99039.202..104131.574 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98986.258..98986.258 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86407.076..97677.567 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8631.448..15329.404 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8629.640..13500.046 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.979..4461.983 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.865..1823.519 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.072..1.073 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.812..0.924 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1264.962..1264.962 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.772..512.495 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.746..1.746 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.723..1.726 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61866.716..61866.716 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12875.955..26896.891 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.141..5691.427 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=431.827..431.827 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.478..312.463 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..85.730 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.360..47.360 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.839..34.772 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..9.122 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.212..5.212 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.503..2.679 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:47:42.038 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,500,"",2021-03-21 14:47:00 CET,4/508,0,LOG,00000,"duration: 102740.298 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10761648.45..10761648.46 rows=1 width=8) (actual time=100070.139..100070.139 rows=1 loops=1)
  ->  Gather  (cost=10761648.24..10761648.45 rows=2 width=8) (actual time=100063.356..102740.155 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10760648.24..10760648.25 rows=1 width=8) (actual time=100010.165..100010.165 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10399480.94 rows=144466918 width=0) (actual time=65976.641..98473.389 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8412751.82 rows=144466918 width=8) (actual time=65971.450..91964.493 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3296178.07 rows=24077820 width=16) (actual time=65970.789..87289.981 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=65945.317..77902.356 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=35547.918..56132.969 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=35546.750..49925.219 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.375..7059.708 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17284.854..17284.854 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7158.407..12164.588 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.674..2602.666 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1328.730..1328.731 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.913..476.247 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.133..1.134 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.964..1.041 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3977.635..3977.635 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.889..110.491 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.160..25.160 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.459..12.839 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.628..0.628 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.613..0.615 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.877..4.877 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.665..2.739 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:49:26.263 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,501,"",2021-03-21 14:47:00 CET,4/509,0,LOG,00000,"duration: 104210.435 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96383.544..96383.544 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96376.565..104207.648 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96315.535..96315.536 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83645.799..95005.556 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8800.434..15450.390 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8798.802..13614.286 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.687..4399.526 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.527..1812.593 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.090..1.091 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.876..0.970 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1451.662..1451.662 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.587..513.107 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.560..1.561 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.539..1.541 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59611.002..59611.002 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12114.393..25882.103 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.977..5542.248 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=710.255..710.256 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.587..305.313 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.794..87.796 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.349..51.349 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.561..36.612 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..10.347 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.906..4.906 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.478..2.628 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:51:23.034 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,502,"",2021-03-21 14:47:00 CET,4/510,0,LOG,00000,"duration: 116731.138 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=113049.059..113049.060 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=113046.151..116730.741 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=112986.939..112986.939 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=72837.541..111314.183 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=72836.538..105812.041 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3635271.48 rows=24077820 width=16) (actual time=72835.683..100896.664 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=72829.648..94172.155 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=72801.409..84637.249 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44744.286..61149.179 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12210.085..25929.570 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.673..6050.494 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.524..242.524 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.867..104.755 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7429.876..7429.876 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.323..2662.973 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2275.425..2275.425 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.224..494.835 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.885..27.885 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.782..13.729 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.939..5.939 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.601..3.173 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.821..0.821 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.591..0.691 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.665..0.665 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.634..0.636 rows=4 loops=3)",,,,,,,,,""
2021-03-22 04:53:08.022 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,503,"",2021-03-21 14:47:00 CET,4/511,0,LOG,00000,"duration: 104977.985 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96709.602..96709.603 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96701.448..104977.876 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96647.568..96647.568 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84479.297..95371.133 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8535.729..15258.683 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8534.072..13446.453 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.411..4370.793 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.414..1789.251 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.955..0.955 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.718..0.817 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.759..1255.760 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.454..502.654 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.583..1.583 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.558..1.561 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59786.777..59786.777 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13143.468..27010.307 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.861..5588.268 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.527..422.527 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.883..304.974 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.776..85.760 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.764..42.764 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.232..31.678 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.485..8.379 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.660..4.661 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.457..2.500 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:55:02.997 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,504,"",2021-03-21 14:47:00 CET,4/512,0,LOG,00000,"duration: 114929.079 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=111304.996..111304.996 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=111300.241..114928.665 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=111242.179..111242.179 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=85248.091..109935.351 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=85242.973..103686.313 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..12259426.29 rows=144466918 width=8) (actual time=85213.796..95299.992 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=45005.316..74096.976 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=45004.384..67536.715 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=45003.791..61593.075 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12556.941..26957.525 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.147..6226.852 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=313.289..313.294 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.843..116.980 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7374.172..7374.172 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.999..2704.713 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.548..0.549 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.540..0.541 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.882..0.882 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.676..0.763 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2097.067..2097.067 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.262..522.406 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.714..28.715 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.533..13.739 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.782..4.782 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.487..2.582 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:56:46.148 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,505,"",2021-03-21 14:47:00 CET,4/513,0,LOG,00000,"duration: 103143.314 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97842.368..97842.368 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97836.984..103140.929 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97787.925..97787.925 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85772.263..96551.029 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9095.285..15610.953 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9093.613..13823.091 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.975..4441.316 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.891..1831.608 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.996..0.997 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.739..0.846 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1266.496..1266.496 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.446..504.754 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.603..1.604 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.585..1.590 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60948.181..60948.181 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12799.369..26880.604 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.799..5527.904 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.934..410.934 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.335..289.973 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.890..86.091 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.106..40.106 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.824..30.082 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..8.030 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.204..4.204 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.505..2.370 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 04:58:26.122 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,506,"",2021-03-21 14:47:00 CET,4/514,0,LOG,00000,"duration: 99937.352 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=8978676.17..8978676.18 rows=1 width=8) (actual time=96775.520..96775.520 rows=1 loops=1)
  ->  Gather  (cost=8978675.95..8978676.16 rows=2 width=8) (actual time=96771.164..99936.674 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=8977675.95..8977675.96 rows=1 width=8) (actual time=96722.344..96722.344 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..8616508.66 rows=144466918 width=0) (actual time=82132.584..95450.399 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=537183.18..3499934.91 rows=24077820 width=8) (actual time=82131.800..90625.011 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440501.80..2939265.18 rows=24077820 width=16) (actual time=52682.185..73344.061 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=440485.55..2608178.91 rows=24077820 width=24) (actual time=52681.094..67012.368 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Hash Join  (cost=29351.18..1550672.53 rows=24077820 width=8) (actual time=12875.746..32537.013 rows=20000000 loops=3)
                                            Hash Cond: (sub.category_id = cat.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12870.082..25636.001 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.674..5844.950 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=437.409..437.409 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=28.911..310.760 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.736..89.991 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.820..27.821 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.639..13.690 rows=50000 loops=3)
                                            ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.534..5.534 rows=10000 loops=3)
                                                  Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                  ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.801..2.971 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10589.900..10589.900 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.125..2678.075 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.043..1.043 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.812..0.908 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1393.792..1393.792 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.839..504.808 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.573..0.573 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.546..0.548 rows=4 loops=3)",,,,,,,,,""
2021-03-22 05:00:07.847 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,507,"",2021-03-21 14:47:00 CET,4/515,0,LOG,00000,"duration: 101719.633 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97024.784..97024.785 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97020.760..101719.522 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96971.257..96971.258 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84583.001..95669.506 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8389.509..15123.905 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8387.580..13295.450 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.405..4301.525 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.497..1796.152 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.870..0.870 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.660..0.756 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.582..1255.582 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.499..491.293 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.863..1.863 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.844..1.846 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60044.883..60044.883 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12197.923..25951.628 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.887..5478.284 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=392.116..392.116 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.583..269.700 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.761..78.632 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.468..41.469 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.744..30.539 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.471..8.388 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.173..4.173 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.600..2.404 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:02:53.408 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,508,"",2021-03-21 14:47:00 CET,4/516,0,LOG,00000,"duration: 165520.169 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=155171.537..155171.537 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=155166.205..165519.297 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=155106.759..155106.759 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=146121.200..153887.207 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=94252.421..133874.686 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=94246.971..126407.702 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=94246.253..120511.411 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=94218.374..109219.527 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=70812.186..86881.090 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=4.415..5232.590 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.960..2310.941 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.403..1.404 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.385..1.387 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51419.381..51419.381 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.201..8350.214 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.808..238.808 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.661..102.073 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.510..27.510 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.439..13.399 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.693..0.694 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.477..0.571 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.339..5.339 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.712..2.776 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5014.758..5014.759 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.097..527.438 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 05:04:39.083 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,509,"",2021-03-21 14:47:00 CET,4/517,0,LOG,00000,"duration: 105650.617 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97229.647..97229.647 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97222.746..105648.342 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97173.302..97173.302 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=84515.314..95853.255 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9130.099..15838.993 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9128.211..14000.146 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.538..4526.904 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.487..1887.595 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.973..0.973 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.795..0.874 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1274.727..1274.727 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.915..500.630 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.792..1.792 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.774..1.776 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59806.660..59806.660 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11832.408..25933.493 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.493..5558.076 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=407.741..407.741 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.309..287.910 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.751..84.469 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.253..43.253 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.042..31.913 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.495..8.480 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.442..4.442 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.489..2.401 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:06:37.950 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,510,"",2021-03-21 14:47:00 CET,4/518,0,LOG,00000,"duration: 118840.988 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12877830.88..12877830.89 rows=1 width=8) (actual time=115031.334..115031.334 rows=1 loops=1)
  ->  Gather  (cost=12877830.67..12877830.88 rows=2 width=8) (actual time=115026.421..118840.821 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12876830.67..12876830.68 rows=1 width=8) (actual time=114975.159..114975.159 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12515663.37 rows=144466918 width=0) (actual time=73818.217..113261.490 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10528934.25 rows=144466918 width=8) (actual time=73813.675..106227.349 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8542497.88 rows=144466918 width=16) (actual time=73812.965..101266.277 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=73812.436..96014.056 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=73789.652..86182.032 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47522.942..63199.186 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24594.064..39825.946 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.460..7047.112 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7634.632..7634.633 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.322..2762.172 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.488..257.488 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.742..100.944 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1188.030..1188.031 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.994..476.126 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.487..22.488 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.515..11.731 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.509..0.510 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.495..0.497 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.691..0.691 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.504..0.591 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.246..4.246 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.399 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:08:21.391 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,511,"",2021-03-21 14:47:00 CET,4/519,0,LOG,00000,"duration: 103430.943 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98300.299..98300.299 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98295.488..103430.759 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98239.499..98239.503 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85583.097..96919.335 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8319.989..15095.407 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8318.034..13256.602 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.606..4250.566 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.725..1748.243 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.652..0.733 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1313.796..1313.796 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.586..530.175 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.886..1.886 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.860..1.862 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61357.146..61357.146 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12616.576..26556.108 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.956..5365.683 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=444.372..444.372 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.490..309.875 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.831..94.191 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.330..47.330 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.375..35.124 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.596..9.620 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.677..5.677 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.589..3.055 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:10:02.545 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,512,"",2021-03-21 14:47:00 CET,4/520,0,LOG,00000,"duration: 101114.480 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12416998.55..12416998.56 rows=1 width=8) (actual time=97792.279..97792.279 rows=1 loops=1)
  ->  Gather  (cost=12416998.33..12416998.54 rows=2 width=8) (actual time=97784.769..101113.813 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12415998.33..12415998.34 rows=1 width=8) (actual time=97734.557..97734.558 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..12054831.04 rows=144466918 width=0) (actual time=65374.571..96215.325 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..10068101.92 rows=144466918 width=8) (actual time=65369.853..90076.142 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=719913.04..8080088.79 rows=144466918 width=8) (actual time=65344.680..81636.623 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=65344.052..77078.720 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=39074.179..59282.181 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=39073.117..53306.743 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.569..7079.887 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=21486.232..21486.232 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=11365.568..16502.645 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.642..2582.587 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5503.476..5503.476 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.835..501.389 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.008..1.009 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.796..0.891 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=330.932..330.932 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.799..121.823 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.595..0.595 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.578..0.583 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.877..24.877 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.637..12.478 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.420..4.420 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.582..2.469 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:11:46.077 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,513,"",2021-03-21 14:47:00 CET,4/521,0,LOG,00000,"duration: 103514.450 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98153.691..98153.691 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98147.712..103514.323 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98095.781..98095.781 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85782.598..96822.520 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8652.731..15372.524 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8651.067..13572.957 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.912..4106.745 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.860..1653.860 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.005..1.006 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.781..0.881 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1861.556..1861.557 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.167..519.100 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.567..1.567 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.551..1.553 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61404.988..61404.988 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13067.670..27223.954 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.011..6371.670 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=403.231..403.231 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.136..289.474 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.758..86.636 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=48.913..48.913 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.398..35.768 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.591..9.751 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.675..5.675 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.511..2.905 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:13:33.591 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,514,"",2021-03-21 14:47:00 CET,4/522,0,LOG,00000,"duration: 107481.064 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10728080.26..10728080.27 rows=1 width=8) (actual time=103397.019..103397.019 rows=1 loops=1)
  ->  Gather  (cost=10728080.05..10728080.26 rows=2 width=8) (actual time=103392.756..107480.436 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10727080.05..10727080.06 rows=1 width=8) (actual time=103334.423..103334.423 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..10365912.75 rows=144466918 width=0) (actual time=82816.274..102131.532 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..8379183.63 rows=144466918 width=8) (actual time=82810.596..96439.108 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=536874.18..3262609.88 rows=24077820 width=16) (actual time=82810.016..92087.680 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=44793.101..68074.343 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44792.047..60922.186 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12899.701..25955.465 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.536..6478.862 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=449.514..449.514 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=29.787..320.129 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.757..89.415 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.681..28.682 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..13.614 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7445.061..7445.061 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.970..2598.704 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.006..1.006 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.734..0.851 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4878.777..4878.777 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.943..494.670 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.553..0.553 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.527..0.529 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.324..5.324 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.860 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:15:16.386 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,515,"",2021-03-21 14:47:00 CET,4/523,0,LOG,00000,"duration: 102780.874 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97973.837..97973.837 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97968.269..102778.579 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97913.447..97913.447 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85073.552..96592.167 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8383.794..15084.197 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8381.830..13272.856 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.214..4313.476 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.821..1741.913 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.329..1.330 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.064..1.176 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1280.584..1280.584 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.886..505.744 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.898..1.899 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.876..1.878 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60878.850..60878.850 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12706.820..26835.566 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.977..5941.415 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=439.681..439.681 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.026..315.128 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.868..92.544 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.841..44.842 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.702..33.325 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.492..8.868 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.120..5.120 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.566..2.731 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:17:19.117 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,516,"",2021-03-21 14:47:00 CET,4/524,0,LOG,00000,"duration: 122686.176 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15345179.61..15345179.62 rows=1 width=8) (actual time=118828.532..118828.532 rows=1 loops=1)
  ->  Gather  (cost=15345179.40..15345179.61 rows=2 width=8) (actual time=118824.075..122685.383 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15344179.40..15344179.41 rows=1 width=8) (actual time=118761.694..118761.695 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14983012.10 rows=144466918 width=0) (actual time=97078.859..117555.805 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..12996575.73 rows=144466918 width=8) (actual time=97077.723..112475.551 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531165.75..11009846.61 rows=144466918 width=16) (actual time=97071.694..106969.409 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=49260.949..83527.441 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49260.211..76837.312 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49235.910..65119.392 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26506.474..41535.424 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.598..8141.377 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7556.804..7556.807 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.582..2682.938 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.148..246.148 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.973..98.092 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.980..23.980 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.439..11.969 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.695..0.696 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.682..0.684 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4888.267..4888.267 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.818..492.238 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.910..5.910 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.488..3.026 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.819..0.820 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.539..0.663 rows=500 loops=3)",,,,,,,,,""
2021-03-22 05:19:02.626 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,517,"",2021-03-21 14:47:00 CET,4/525,0,LOG,00000,"duration: 103499.429 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98555.392..98555.392 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98547.366..103499.293 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98497.602..98497.602 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85774.394..97174.306 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8441.758..15032.042 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8439.414..13244.611 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.731..4099.466 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.612..1633.969 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.067..1.068 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.813..0.922 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1405.076..1405.076 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.629..517.366 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.266..2.266 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.236..2.238 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60735.132..60735.132 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13963.379..27996.568 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.825..6225.947 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=415.719..415.719 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.263..294.117 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.811..85.577 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.123..42.123 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.107..31.286 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.509..8.204 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.506..4.506 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.515..2.474 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:20:43.381 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,518,"",2021-03-21 14:47:00 CET,4/526,0,LOG,00000,"duration: 100722.243 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12678132.99..12678133.00 rows=1 width=8) (actual time=96626.894..96626.895 rows=1 loops=1)
  ->  Gather  (cost=12678132.78..12678132.99 rows=2 width=8) (actual time=96622.256..100721.681 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12677132.78..12677132.79 rows=1 width=8) (actual time=96569.755..96569.756 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=537220.18..12315965.48 rows=144466918 width=0) (actual time=87957.314..95347.139 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=440538.80..9758217.03 rows=144466918 width=8) (actual time=42084.557..75306.682 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=440229.80..7771487.91 rows=144466918 width=16) (actual time=42079.271..68271.181 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=440192.80..2654914.16 rows=24077820 width=24) (actual time=42078.466..63494.991 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=42077.599..57419.605 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12086.182..24814.998 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.114..5906.327 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=418.868..418.868 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.653..286.230 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.787..89.331 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.568..21.569 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.462..11.157 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7534.136..7534.136 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.985..2650.335 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.829..0.829 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.627..0.720 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.778..0.778 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.766..0.768 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.153..5.153 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.044..2.997 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5154.343..5154.343 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.061..491.053 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 05:22:27.149 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,519,"",2021-03-21 14:47:00 CET,4/527,0,LOG,00000,"duration: 103757.058 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97806.336..97806.336 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97798.464..103756.915 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97748.566..97748.567 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85299.171..96439.285 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8203.900..15039.938 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8201.950..13217.198 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.261..4078.798 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.838..1667.762 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.371..1.372 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.994..1.136 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1457.405..1457.406 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.605..530.888 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.884..1.884 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.863..1.866 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59968.670..59968.670 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3424kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12161.118..26234.262 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.821..5758.477 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=407.288..407.289 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.849..288.675 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..81.768 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.617..41.617 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.212..31.077 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.596..8.377 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.519..4.519 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.550..2.512 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:24:22.690 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,520,"",2021-03-21 14:47:00 CET,4/528,0,LOG,00000,"duration: 115497.422 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=15026869.59..15026869.60 rows=1 width=8) (actual time=111949.716..111949.716 rows=1 loops=1)
  ->  Gather  (cost=15026869.37..15026869.58 rows=2 width=8) (actual time=111944.608..115496.685 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15025869.37..15025869.38 rows=1 width=8) (actual time=111825.512..111825.512 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14664702.08 rows=144466918 width=0) (actual time=85756.928..110566.089 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12677972.96 rows=144466918 width=8) (actual time=85751.807..104410.599 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..10689959.83 rows=144466918 width=8) (actual time=85721.897..96002.900 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=432907.63..7850049.38 rows=144466918 width=16) (actual time=54453.541..73837.688 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=54452.725..67661.406 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25870.075..47509.400 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25868.897..40902.582 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.732..7140.132 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7992.600..7992.600 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.397..2579.567 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.131..1.132 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.876..0.981 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=263.537..263.537 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..100.319 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.772..0.773 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.756..0.758 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4596.564..4596.564 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.231..488.791 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.460..29.461 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.552..14.389 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.811..4.811 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.620..2.631 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:26:08.758 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,521,"",2021-03-21 14:47:00 CET,4/529,0,LOG,00000,"duration: 106058.636 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97683.355..97683.356 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97676.616..106058.470 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97627.518..97627.518 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84995.644..96356.061 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=7933.487..14632.295 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=7931.306..12835.155 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.403..4050.541 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.670..1629.126 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.694..0.694 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.532..0.606 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1238.138..1238.138 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.604..492.940 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.080..2.080 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.047..2.050 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61116.801..61116.801 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13351.044..27325.138 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.866..5844.646 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=435.905..435.905 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.333..308.226 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.871..91.428 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.100..46.100 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.927..34.103 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.470..9.530 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.367..4.367 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.451..2.434 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:28:44.046 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,522,"",2021-03-21 14:47:00 CET,4/530,0,LOG,00000,"duration: 155263.019 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18118341.15..18118341.16 rows=1 width=8) (actual time=150109.382..150109.382 rows=1 loops=1)
  ->  Gather  (cost=18118340.93..18118341.14 rows=2 width=8) (actual time=150103.953..155262.867 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18117340.93..18117340.94 rows=1 width=8) (actual time=150055.133..150055.133 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17756173.64 rows=144466917 width=0) (actual time=123410.834..148803.964 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..15769444.53 rows=144466917 width=8) (actual time=123406.446..142538.212 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..13781431.42 rows=144466917 width=8) (actual time=123383.031..133952.487 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=1206344.25..10941520.97 rows=144466917 width=16) (actual time=101158.800..114409.443 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=73265.326..94957.595 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=73264.365..88867.230 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.748..4708.992 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.641..2038.416 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.053..1.054 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.014..1.016 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=55304.396..55304.397 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.261..7714.339 rows=20000000 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.917 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.739..0.822 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=246.858..246.858 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.746..100.241 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1634.392..1634.392 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.832..497.132 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.097..23.097 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.495..11.491 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.111..4.111 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.478..2.272 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:30:30.057 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,523,"",2021-03-21 14:47:00 CET,4/531,0,LOG,00000,"duration: 105994.299 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100653.386..100653.386 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100647.108..105994.095 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100591.875..100591.876 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=88366.414..99329.956 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8577.098..15220.957 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8575.241..13416.218 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.072..4425.478 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.525..1813.867 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.506..1.507 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.250..1.357 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.836..1283.836 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.516..509.362 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.761..1.761 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.733..1.736 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63701.984..63701.984 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=16254.821..30210.677 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.615..5548.188 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=4994.888..4994.889 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.221..332.063 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.876..87.593 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.924..52.924 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.938..39.058 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.581..10.824 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.250..6.250 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..3.253 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:32:44.625 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,524,"",2021-03-21 14:47:00 CET,4/532,0,LOG,00000,"duration: 134540.452 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=13710293.49..13710293.50 rows=1 width=8) (actual time=124981.332..124981.332 rows=1 loops=1)
  ->  Gather  (cost=13710293.27..13710293.48 rows=2 width=8) (actual time=124973.280..134539.989 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13709293.27..13709293.28 rows=1 width=8) (actual time=124921.623..124921.623 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..13348125.98 rows=144466917 width=0) (actual time=98813.158..123675.353 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..11361396.87 rows=144466917 width=8) (actual time=98808.410..117685.760 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..9373383.76 rows=144466917 width=8) (actual time=98784.686..109502.065 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..7013306.79 rows=150000000 width=8) (actual time=80260.258..93449.702 rows=20000000 loops=3)
                                      Hash Cond: (ord.id = ord_det.order_id)
                                      ->  Hash Join  (cost=96734.63..3003535.42 rows=50000100 width=8) (actual time=6904.597..16157.194 rows=6666667 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Hash Join  (cost=96718.38..2316017.79 rows=50000100 width=16) (actual time=6902.537..14101.727 rows=6666667 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6901.090..12283.845 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.850..2568.326 rows=6666667 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1320.088..1320.088 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.845..525.427 rows=1666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.416..1.416 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.394..1.396 rows=4 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=2.004..2.004 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.796..1.887 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=54387.590..54387.590 rows=20000000 loops=3)
                                            Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.297..7896.483 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.406..231.406 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.955..96.969 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.428..23.428 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.735..12.165 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.455..4.455 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.666..2.582 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:34:25.623 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,525,"",2021-03-21 14:47:00 CET,4/533,0,LOG,00000,"duration: 100979.712 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95917.076..95917.076 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95910.172..100979.574 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95860.101..95860.101 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=83269.729..94550.257 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8215.554..14946.995 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8214.032..13114.208 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.529..4099.196 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.554..1661.321 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.921..0.922 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.685..0.789 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1451.804..1451.805 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.651..506.072 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.454..1.454 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.432..1.434 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59286.195..59286.195 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12239.404..26150.731 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.146..5797.992 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=568.354..568.355 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.378..318.546 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.874..97.857 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.184..42.184 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.853..31.445 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.545..8.726 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.220..4.221 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.534..2.434 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:36:23.893 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,526,"",2021-03-21 14:47:00 CET,4/534,0,LOG,00000,"duration: 118241.669 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13125505.52..13125505.53 rows=1 width=8) (actual time=114004.282..114004.282 rows=1 loops=1)
  ->  Gather  (cost=13125505.30..13125505.51 rows=2 width=8) (actual time=113999.788..118240.966 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13124505.30..13124505.31 rows=1 width=8) (actual time=113919.065..113919.065 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12763338.01 rows=144466918 width=0) (actual time=105324.646..112753.971 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10205589.55 rows=144466918 width=8) (actual time=48096.041..92643.468 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8218860.43 rows=144466918 width=16) (actual time=48091.166..85145.909 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..3102286.68 rows=24077820 width=24) (actual time=48090.181..80445.678 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48088.995..74434.181 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48061.738..63140.753 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24367.543..39723.635 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.508..7038.885 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7414.365..7414.365 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.811..2645.080 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.899..231.900 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.909..96.985 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.850..26.850 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.693..12.950 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.156..1.156 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.881..0.990 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.952..0.952 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.941..0.942 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.765..4.765 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.931..2.713 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5217.963..5217.963 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.859..426.739 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 05:38:06.573 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,527,"",2021-03-21 14:47:00 CET,4/535,0,LOG,00000,"duration: 102669.756 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97246.287..97246.287 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97239.714..102669.607 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97190.488..97190.488 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84298.582..95876.351 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8625.745..15381.912 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8623.995..13587.985 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.785..4404.487 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.567..1813.439 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.163..1.164 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.953..1.050 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1308.526..1308.526 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.412..516.641 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.652..1.652 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.635..1.637 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59989.015..59989.015 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12073.245..26368.550 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.789..5643.008 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=435.406..435.406 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.781..314.623 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.787..91.200 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.673..44.674 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.329..32.933 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.539..8.804 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.705..4.705 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.504..2.493 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:40:28.676 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,528,"",2021-03-21 14:47:00 CET,4/536,0,LOG,00000,"duration: 142065.588 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16253789.43..16253789.44 rows=1 width=8) (actual time=135569.215..135569.215 rows=1 loops=1)
  ->  Gather  (cost=16253789.22..16253789.43 rows=2 width=8) (actual time=135563.024..142064.377 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16252789.22..16252789.23 rows=1 width=8) (actual time=135506.416..135506.417 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..15891621.93 rows=144466917 width=0) (actual time=101531.784..134064.751 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=1304911.38..13905185.57 rows=144466917 width=8) (actual time=101530.531..128802.644 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1304602.38..11918456.46 rows=144466917 width=16) (actual time=101523.742..122783.324 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..9930443.35 rows=144466917 width=16) (actual time=101490.324..113519.932 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=80578.036..95313.172 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8546.228..13708.454 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.421..4289.590 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.577..1729.950 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.794..0.795 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.775..0.777 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1401.740..1401.740 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.836..505.484 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=54379.115..54379.116 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.230..7868.473 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.916..238.917 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.654..104.106 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.030..33.030 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.725..15.440 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.676..6.676 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.742..3.401 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.016..1.016 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.799..0.893 rows=500 loops=3)",,,,,,,,,""
2021-03-22 05:42:13.805 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,529,"",2021-03-21 14:47:00 CET,4/537,0,LOG,00000,"duration: 105108.869 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99918.519..99918.519 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99911.255..105106.289 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99861.303..99861.303 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=87594.495..98589.740 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9280.548..15903.064 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9279.028..14089.858 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.990..4375.563 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.702..1782.426 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.227..1.228 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.998..1.094 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1299.587..1299.587 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.574..499.189 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.408..1.408 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.382..1.384 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62422.139..62422.139 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13955.900..28433.002 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.937..5678.885 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=2613.259..2613.259 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.330..360.216 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.839..108.571 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.164..47.164 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.956..35.000 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..9.593 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.335..5.335 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.520..2.841 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:44:12.167 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,530,"",2021-03-21 14:47:00 CET,4/538,0,LOG,00000,"duration: 118333.962 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=114480.377..114480.377 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=114475.593..118333.532 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=114421.198..114421.198 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=74311.058..112564.455 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=74310.252..106968.829 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=74305.768..100754.705 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529552.00..3302315.71 rows=24077820 width=16) (actual time=74282.696..91443.907 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=74281.890..86212.155 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=46416.126..62949.415 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11911.461..25740.796 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.867..5858.500 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=244.331..244.332 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.969..105.333 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10474.225..10474.225 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.423..2703.738 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1518.561..1518.561 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.810..511.698 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.772..0.772 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.604..0.684 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.706..22.706 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.643..11.881 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.372..4.372 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.662..2.523 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.594..0.594 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.567..0.569 rows=4 loops=3)",,,,,,,,,""
2021-03-22 05:45:59.069 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,531,"",2021-03-21 14:47:00 CET,4/539,0,LOG,00000,"duration: 106891.788 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98363.904..98363.905 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98354.915..106891.559 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98297.816..98297.817 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85490.041..97014.384 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8224.591..14894.710 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8222.926..13079.463 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.065..4167.589 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.775..1680.579 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.219..1.220 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.880..1.027 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1283.656..1283.656 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.416..518.716 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.578..1.579 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.548..1.550 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61088.628..61088.628 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13127.970..27302.549 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.965..5734.250 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=425.932..425.932 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.275..302.734 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.935..92.123 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.006..46.006 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.714..34.202 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.621..9.516 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.994..4.994 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.524..2.758 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:47:58.572 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,532,"",2021-03-21 14:47:00 CET,4/540,0,LOG,00000,"duration: 119464.110 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9445099.02..9445099.03 rows=1 width=8) (actual time=116286.673..116286.673 rows=1 loops=1)
  ->  Gather  (cost=9445098.80..9445099.01 rows=2 width=8) (actual time=116281.964..119463.394 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9444098.80..9444098.81 rows=1 width=8) (actual time=116225.190..116225.191 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9082931.51 rows=144466918 width=0) (actual time=87657.471..114718.186 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..3966357.76 rows=24077820 width=8) (actual time=87656.563..109567.951 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531437.75..3635271.48 rows=24077820 width=16) (actual time=87655.660..104598.422 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=87650.034..98522.159 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=44077.402..75697.500 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44050.882..62117.704 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11780.137..25723.206 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.766..5857.138 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=251.874..251.875 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.757..113.413 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7645.517..7645.517 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.871..2583.000 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.139..26.139 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.726..13.504 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1513.806..1513.806 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.016..518.560 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.505..5.505 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.581..2.965 rows=10000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.876..0.876 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.676..0.768 rows=500 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.688..0.688 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.659..0.661 rows=4 loops=3)",,,,,,,,,""
2021-03-22 05:49:39.826 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,533,"",2021-03-21 14:47:00 CET,4/541,0,LOG,00000,"duration: 101244.431 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96204.018..96204.019 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96198.361..101242.687 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96146.423..96146.424 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83600.565..94850.326 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8935.394..15636.279 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8933.886..13829.492 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.895..4366.392 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.883..1785.086 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.961..0.961 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.731..0.829 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1665.913..1665.913 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.238..529.385 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.437..1.437 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.419..1.421 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=57971.041..57971.041 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12066.055..26216.598 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.797..5374.723 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=407.703..407.704 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.173..292.835 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..88.633 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.970..40.970 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.540..30.628 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.514..8.167 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.932..4.932 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.485..2.671 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:51:39.783 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,534,"",2021-03-21 14:47:00 CET,4/542,0,LOG,00000,"duration: 119924.723 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14505414.30..14505414.31 rows=1 width=8) (actual time=116298.877..116298.877 rows=1 loops=1)
  ->  Gather  (cost=14505414.09..14505414.30 rows=2 width=8) (actual time=116294.055..119924.205 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14504414.09..14504414.10 rows=1 width=8) (actual time=116240.907..116240.907 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14143246.79 rows=144466918 width=0) (actual time=74996.891..114570.145 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..12156810.42 rows=144466918 width=8) (actual time=74995.875..108750.299 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531165.75..10170081.30 rows=144466918 width=16) (actual time=74990.033..102591.518 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8182068.17 rows=144466918 width=16) (actual time=74958.553..93128.756 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3065494.42 rows=24077820 width=24) (actual time=74957.780..87980.630 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=56457.791..67868.409 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25321.437..42359.118 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.473..6939.938 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8561.764..8561.765 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.241..2712.309 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4367.715..4367.716 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.009..471.055 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=260.897..260.897 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.850..103.940 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.737..0.737 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.681..0.683 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.030..31.030 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.660..15.355 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.737..5.738 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.615..2.991 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.803..0.803 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.554..0.680 rows=500 loops=3)",,,,,,,,,""
2021-03-22 05:53:23.468 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,535,"",2021-03-21 14:47:00 CET,4/543,0,LOG,00000,"duration: 103673.570 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95454.644..95454.644 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95448.232..103671.601 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95399.351..95399.352 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83509.479..94153.790 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8532.061..15282.125 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8530.269..13455.488 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.459..4373.728 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.487..1786.060 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.926..0.927 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.696..0.795 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1284.928..1284.928 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.490..522.536 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.709..1.709 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.692..1.694 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59443.783..59443.783 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13398.806..27606.597 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.004..5809.826 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=438.641..438.641 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.845..318.637 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.830..92.496 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.608..46.608 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.514..35.014 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.538..11.517 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.852..4.852 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.511..2.526 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:55:22.000 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,536,"",2021-03-21 14:47:00 CET,4/544,0,LOG,00000,"duration: 118496.566 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=14744707.59..14744707.60 rows=1 width=8) (actual time=115043.732..115043.732 rows=1 loops=1)
  ->  Gather  (cost=14744707.37..14744707.58 rows=2 width=8) (actual time=115035.603..118495.784 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14743707.37..14743707.38 rows=1 width=8) (actual time=114980.504..114980.504 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..14382540.08 rows=144466918 width=0) (actual time=105484.721..113683.621 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..11824791.62 rows=144466918 width=8) (actual time=56911.502..96446.778 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..9838062.50 rows=144466918 width=16) (actual time=56906.865..88882.779 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=432907.63..7850049.38 rows=144466918 width=16) (actual time=56883.857..77812.355 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=432870.63..2733475.63 rows=24077820 width=24) (actual time=56883.194..72152.647 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=26156.857..49462.360 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=26155.895..42490.532 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.276..7500.962 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7624.665..7624.666 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.323..2767.366 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.917..0.917 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.725..0.804 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=249.337..249.337 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.501..110.843 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.637..0.637 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.625..0.626 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.700..22.700 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.539..11.675 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.522..4.524 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.825..2.683 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1268.356..1268.356 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.974..516.038 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 05:57:07.918 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,537,"",2021-03-21 14:47:00 CET,4/545,0,LOG,00000,"duration: 105910.069 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97998.029..97998.029 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97990.960..105909.884 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97940.998..97940.998 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85029.377..96620.953 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8879.782..15575.656 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8877.708..13768.134 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.132..4429.569 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.794..1810.745 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.293..1.300 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.976..1.105 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1351.123..1351.123 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.819..560.248 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.005..2.005 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.970..1.972 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61178.248..61178.248 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12097.974..26367.190 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.163..5396.520 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=458.968..458.969 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.661..324.066 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..108.348 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.506..43.506 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.888..32.143 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.459..8.700 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.336..4.336 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.495..2.419 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 05:59:03.892 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,538,"",2021-03-21 14:47:00 CET,4/546,0,LOG,00000,"duration: 115933.381 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=16718367.71..16718367.72 rows=1 width=8) (actual time=112240.744..112240.744 rows=1 loops=1)
  ->  Gather  (cost=16718367.50..16718367.71 rows=2 width=8) (actual time=112235.906..115932.285 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16717367.50..16717367.51 rows=1 width=8) (actual time=112186.277..112186.277 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16356200.20 rows=144466918 width=0) (actual time=98138.051..111003.043 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..14369763.83 rows=144466918 width=8) (actual time=98137.040..106254.424 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..11529853.37 rows=144466918 width=16) (actual time=48332.199..88249.007 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..9543124.25 rows=144466918 width=24) (actual time=48325.347..80135.888 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Hash Join  (cost=432891.38..7555111.13 rows=144466918 width=24) (actual time=48301.918..69009.004 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48301.329..63594.977 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25178.209..40565.216 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.352..7052.908 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7563.659..7563.659 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.530..2700.405 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.465..257.466 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.568..102.080 rows=333333 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.560..0.560 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.542..0.543 rows=4 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.076..23.077 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.544..11.864 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.706..6.706 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.800..3.450 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1823.190..1823.190 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.000..639.448 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.784..0.785 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.572..0.671 rows=500 loops=3)",,,,,,,,,""
2021-03-22 06:00:48.796 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,539,"",2021-03-21 14:47:00 CET,4/547,0,LOG,00000,"duration: 104896.635 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96584.662..96584.662 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96578.186..104896.503 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96530.470..96530.470 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84915.985..95355.049 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8719.950..15529.349 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8718.309..13727.066 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.960..4390.229 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.932..1809.271 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.957..0.958 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.774..0.853 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1448.697..1448.697 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.394..589.453 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.576..1.576 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.560..1.562 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59895.641..59895.641 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12264.273..26488.682 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.961..5490.334 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=428.843..428.843 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.721..303.860 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.823..99.544 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.569..42.569 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.156..31.827 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.493..8.720 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.562..4.562 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.498 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:02:42.454 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,540,"",2021-03-21 14:47:00 CET,4/548,0,LOG,00000,"duration: 113617.436 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=110471.386..110471.387 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=110467.250..113616.955 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=110415.075..110415.076 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=102111.111..109245.128 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=43155.261..92264.379 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=43150.676..84048.711 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=43150.060..79072.647 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=43149.105..72781.913 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43122.045..60320.301 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11913.476..25797.981 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.489..5915.852 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.467..231.468 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.026..99.586 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7223.250..7223.250 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.261..2569.063 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.715..26.715 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.520..13.613 rows=50000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.929..0.930 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.736..0.826 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.590..0.590 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.573..0.575 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.489..4.489 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.715..2.527 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1276.790..1276.791 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.929..476.166 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 06:04:25.853 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,541,"",2021-03-21 14:47:00 CET,4/549,0,LOG,00000,"duration: 103389.884 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98243.219..98243.219 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98236.674..103389.117 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98187.016..98187.016 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85460.048..96864.174 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9435.616..16146.079 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9433.192..14307.892 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.219..4403.280 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.602..1809.473 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.575..1.575 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.344..1.451 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1477.292..1477.292 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.845..498.449 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.350..2.350 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.328..2.330 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60402.756..60402.756 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12472.920..26944.414 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.857..5681.202 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1037.868..1037.868 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=49.324..305.371 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.831..90.320 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=48.077..48.078 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.174..35.668 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..9.907 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.551..5.551 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.490..2.924 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:06:21.691 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,542,"",2021-03-21 14:47:00 CET,4/550,0,LOG,00000,"duration: 115802.688 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9351045.02..9351045.03 rows=1 width=8) (actual time=112227.142..112227.142 rows=1 loops=1)
  ->  Gather  (cost=9351044.80..9351045.01 rows=2 width=8) (actual time=112221.722..115802.198 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9350044.80..9350044.81 rows=1 width=8) (actual time=112170.750..112170.750 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..8988877.51 rows=144466918 width=0) (actual time=97401.438..110835.166 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3872303.76 rows=24077820 width=8) (actual time=97400.524..105959.033 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=55384.676..85079.956 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=55379.798..77678.694 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55378.520..71571.311 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=12047.844..37435.832 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12024.314..26122.127 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.649..5982.239 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=218.662..218.662 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.772..97.964 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.058..23.058 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.776..12.089 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7495.759..7495.759 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.999..2709.098 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.238..1.238 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.057..1.137 rows=500 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.737..4.737 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.942..2.723 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4546.087..4546.087 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.828..498.291 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.600..0.600 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.576..0.577 rows=4 loops=3)",,,,,,,,,""
2021-03-22 06:08:05.049 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,543,"",2021-03-21 14:47:00 CET,4/551,0,LOG,00000,"duration: 103349.944 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96835.664..96835.665 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96830.698..103349.779 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96776.202..96776.203 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83948.933..95462.830 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8922.650..15590.254 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8920.619..13766.142 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.880..4393.259 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.708..1805.802 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.131..1.131 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.929..1.019 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1699.093..1699.094 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.569..518.951 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.982..1.982 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.961..1.963 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59204.206..59204.206 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11949.462..26106.974 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.780..5428.131 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1008.582..1008.582 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.432..325.042 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.802..93.065 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.276..41.276 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.952..30.729 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.576..8.349 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.270..4.270 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.561..2.444 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:10:45.177 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,544,"",2021-03-21 14:47:00 CET,4/552,0,LOG,00000,"duration: 160087.679 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18617393.26..18617393.27 rows=1 width=8) (actual time=150233.771..150233.771 rows=1 loops=1)
  ->  Gather  (cost=18617393.04..18617393.25 rows=2 width=8) (actual time=150226.687..160085.745 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18616393.04..18616393.05 rows=1 width=8) (actual time=150169.943..150169.943 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18255225.75 rows=144466917 width=0) (actual time=116204.213..148679.467 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..16268496.64 rows=144466917 width=8) (actual time=116199.100..142194.089 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1304602.38..14282060.28 rows=144466917 width=16) (actual time=116198.315..136974.075 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..12294047.17 rows=144466917 width=16) (actual time=116170.982..127694.770 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=90510.702..105042.860 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=68309.748..83545.843 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.980..4714.501 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.851..2044.834 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.086..1.087 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.069..1.071 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50114.257..50114.257 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.230..8086.045 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.784..231.785 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.715..96.734 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2884.316..2884.316 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.960..521.319 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.046..27.046 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.545..13.083 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.761..0.761 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.547..0.645 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.789..4.789 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.593..2.656 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:12:31.953 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,545,"",2021-03-21 14:47:00 CET,4/553,0,LOG,00000,"duration: 106762.819 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=101799.115..101799.115 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=101792.798..106762.681 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=101737.377..101737.378 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=88629.811..100358.872 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9975.174..17058.216 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9973.236..15125.265 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.433..5565.204 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.461..2861.440 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.930..0.931 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.698..0.810 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1326.889..1326.889 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.957..526.161 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.869..1.869 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.847..1.849 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63054.491..63054.491 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13852.858..28556.056 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.432..6038.146 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=437.948..437.949 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=52.524..310.948 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.893..88.791 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.251..51.251 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.850..37.894 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.616..10.081 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.085..6.085 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.488..3.057 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:14:25.417 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,546,"",2021-03-21 14:47:00 CET,4/554,0,LOG,00000,"duration: 113425.786 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=11348123.75..11348123.76 rows=1 width=8) (actual time=110183.243..110183.243 rows=1 loops=1)
  ->  Gather  (cost=11348123.53..11348123.74 rows=2 width=8) (actual time=110179.756..113425.330 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11347123.53..11347123.54 rows=1 width=8) (actual time=110121.541..110121.541 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..10985956.24 rows=144466918 width=0) (actual time=101807.914..108872.277 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..8428207.78 rows=144466918 width=8) (actual time=55567.018..89547.661 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=55565.858..84127.106 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55564.541..78810.950 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55557.725..71448.260 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11970.550..37229.994 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11949.116..26015.447 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.753..5905.104 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=292.368..292.369 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.827..105.261 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.101..21.101 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.655..11.107 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7492.399..7492.399 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.983..2680.236 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.668..6.668 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.701..3.362 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.229..1.229 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.885..1.038 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.082..1.083 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.053..1.055 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4940.589..4940.590 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.901..497.938 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 06:16:12.123 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,547,"",2021-03-21 14:47:00 CET,4/555,0,LOG,00000,"duration: 106697.759 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=101847.280..101847.280 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=101839.033..106696.133 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=101788.326..101788.326 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=88322.877..100404.365 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8691.307..15958.375 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8689.688..14096.111 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.631..4522.113 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.519..1866.420 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.070..1.071 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.795..0.955 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1302.576..1302.576 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.423..530.144 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.559..1.559 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.537..1.539 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63345.083..63345.083 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13602.152..28336.146 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.904..6169.979 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=410.183..410.183 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.984..289.077 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.926..86.813 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.777..40.778 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.017..30.668 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.525..8.173 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.406..4.406 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.616..2.555 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:18:12.852 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,548,"",2021-03-21 14:47:00 CET,4/556,0,LOG,00000,"duration: 120697.599 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12877830.88..12877830.89 rows=1 width=8) (actual time=117091.634..117091.634 rows=1 loops=1)
  ->  Gather  (cost=12877830.67..12877830.88 rows=2 width=8) (actual time=117087.635..120696.893 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12876830.67..12876830.68 rows=1 width=8) (actual time=117032.419..117032.419 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12515663.37 rows=144466918 width=0) (actual time=76849.040..115267.480 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10528934.25 rows=144466918 width=8) (actual time=76844.170..108171.832 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8540921.13 rows=144466918 width=8) (actual time=76820.037..99230.879 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=529552.00..3424347.38 rows=24077820 width=16) (actual time=76819.363..94682.094 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=76818.625..89335.047 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=46721.081..62183.900 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23773.208..39003.494 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.639..6923.212 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7066.067..7066.067 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.393..2535.762 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.489..247.489 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..97.570 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5574.357..5574.357 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.926..479.900 rows=1666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.714..0.714 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.542..0.621 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.646..0.646 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.629..0.630 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.852..23.852 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.496..12.148 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.598..4.598 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.463..2.507 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:19:57.799 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,549,"",2021-03-21 14:47:00 CET,4/557,0,LOG,00000,"duration: 104937.890 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96624.326..96624.326 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96619.303..104935.944 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96569.814..96569.814 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84025.739..95265.096 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9005.128..15645.266 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9003.420..13845.535 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.674..4376.076 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.590..1797.109 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.041..1.042 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.761..0.895 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1699.501..1699.502 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.557..495.687 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.617..1.617 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.595..1.598 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58791.399..58791.399 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12792.861..27274.011 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.860..5728.545 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=414.169..414.169 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.004..296.778 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.677..83.103 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.002..52.002 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.794..37.863 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.560..10.715 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.125..5.126 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.524..2.718 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:21:50.430 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,550,"",2021-03-21 14:47:00 CET,4/558,0,LOG,00000,"duration: 112598.833 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16843623.15..16843623.16 rows=1 width=8) (actual time=108887.023..108887.023 rows=1 loops=1)
  ->  Gather  (cost=16843622.93..16843623.14 rows=2 width=8) (actual time=108881.622..112598.708 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16842622.93..16842622.94 rows=1 width=8) (actual time=108830.454..108830.454 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16481455.64 rows=144466917 width=0) (actual time=75636.310..107378.710 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14494726.53 rows=144466917 width=8) (actual time=75631.096..101192.314 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..12506713.42 rows=144466917 width=8) (actual time=75606.465..92702.263 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=529572.75..10520277.06 rows=144466917 width=16) (actual time=75605.551..87654.744 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=507852.75..7867232.09 rows=150000000 width=16) (actual time=53037.579..69740.928 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=53036.736..64389.807 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25011.394..41730.202 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.024..7067.509 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7047.864..7047.864 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.100..2542.174 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1346.295..1346.295 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.869..486.941 rows=1666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.801..0.801 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.788..0.789 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=227.358..227.359 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.994..100.272 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.874..0.874 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.690..0.772 rows=500 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.357..24.357 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.683..12.232 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.946..4.946 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.589..2.693 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:23:34.019 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,551,"",2021-03-21 14:47:00 CET,4/559,0,LOG,00000,"duration: 103571.117 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98172.220..98172.220 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98163.451..103570.986 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98112.692..98112.693 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85092.727..96783.662 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8529.592..15148.451 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8527.484..13355.124 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.347..4406.156 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.392..1807.267 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.900..0.900 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.721..0.800 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1267.278..1267.278 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.721..502.245 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.014..2.015 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.984..1.987 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60501.717..60501.717 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12564.829..26952.660 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.850..5802.675 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=416.468..416.468 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.078..292.564 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.779..87.053 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.819..41.819 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.467..31.130 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.530..8.274 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.816..4.816 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.539..2.536 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:25:28.412 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,552,"",2021-03-21 14:47:00 CET,4/560,0,LOG,00000,"duration: 114364.463 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19083828.44..19083828.45 rows=1 width=8) (actual time=111151.658..111151.659 rows=1 loops=1)
  ->  Gather  (cost=19083828.23..19083828.44 rows=2 width=8) (actual time=111147.697..114363.640 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19082828.23..19082828.24 rows=1 width=8) (actual time=111095.767..111095.767 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18721660.94 rows=144466917 width=0) (actual time=84194.574..109813.242 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..16734931.83 rows=144466917 width=8) (actual time=84189.448..103481.561 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..14746918.72 rows=144466917 width=8) (actual time=84165.411..94834.415 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432907.63..11907008.27 rows=144466917 width=16) (actual time=61271.868..74479.491 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=411187.63..9253963.29 rows=150000000 width=16) (actual time=24896.752..51554.166 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24895.709..45575.094 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24894.921..39895.140 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.801..7045.999 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7832.950..7832.951 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.928..2690.829 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.759..0.760 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.751..0.752 rows=4 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.995..0.995 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.807..0.887 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3339.617..3339.617 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.763..108.756 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1304.933..1304.933 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.403..495.109 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.759..23.759 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.635..12.135 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.824..4.824 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.627..2.652 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:27:12.841 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,553,"",2021-03-21 14:47:00 CET,4/561,0,LOG,00000,"duration: 104419.109 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96592.633..96592.634 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96587.899..104417.205 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96539.697..96539.698 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=84371.449..95335.251 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8706.378..15354.733 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8704.890..13544.784 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.756..4480.856 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.658..1837.655 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.058..1.059 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.849..0.940 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1339.659..1339.660 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.494..520.295 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.427..1.428 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.406..1.409 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60169.198..60169.198 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12567.447..26551.996 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.960..5546.341 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=476.899..476.900 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.849..306.764 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.875..85.305 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.622..43.622 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.469..32.378 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.502..8.305 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.873..4.873 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.513..2.550 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:29:00.716 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,554,"",2021-03-21 14:47:00 CET,4/562,0,LOG,00000,"duration: 107842.743 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14781427.15..14781427.16 rows=1 width=8) (actual time=103878.250..103878.250 rows=1 loops=1)
  ->  Gather  (cost=14781426.94..14781427.15 rows=2 width=8) (actual time=103874.473..107841.861 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14780426.94..14780426.95 rows=1 width=8) (actual time=103825.672..103825.673 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..14419259.64 rows=144466918 width=0) (actual time=88670.834..102612.694 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=637627.57..12432530.52 rows=144466918 width=8) (actual time=88665.188..97202.323 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=540946.19..9592620.06 rows=144466918 width=16) (actual time=47242.277..78994.136 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=539353.19..7604606.94 rows=144466918 width=16) (actual time=47218.452..67438.154 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=47217.880..61874.304 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26045.974..40064.012 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.420..6995.145 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8875.146..8875.146 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.583..4391.707 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.709..1852.155 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.826..0.826 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.567..0.677 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.212..228.212 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.532..96.238 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.541..0.542 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.531..0.532 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.492..23.492 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.681..11.851 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1908.702..1908.702 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.832..491.225 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.310..5.310 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.482..2.807 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:30:50.024 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,555,"",2021-03-21 14:47:00 CET,4/563,0,LOG,00000,"duration: 109298.062 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100750.646..100750.646 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100741.434..109296.020 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100690.115..100690.116 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87936.590..99371.922 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9255.245..16112.344 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9252.855..14259.028 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.306..4758.135 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.380..1958.066 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.887..0.887 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.665..0.759 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1382.711..1382.715 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.035..528.427 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.324..2.324 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.288..2.291 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62615.779..62615.779 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13006.355..27988.983 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.748..6100.509 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=442.141..442.141 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.630..312.730 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.831..95.568 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.414..45.414 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.443..34.016 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.613..9.304 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.742..4.742 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.490..2.576 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:32:42.031 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,556,"",2021-03-21 14:47:00 CET,4/564,0,LOG,00000,"duration: 111970.231 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9351045.02..9351045.03 rows=1 width=8) (actual time=108291.571..108291.571 rows=1 loops=1)
  ->  Gather  (cost=9351044.80..9351045.01 rows=2 width=8) (actual time=108286.987..111969.798 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9350044.80..9350044.81 rows=1 width=8) (actual time=108226.897..108226.897 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..8988877.51 rows=144466918 width=0) (actual time=94334.080..106963.306 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Parallel Hash Join  (cost=531454.00..3872303.76 rows=24077820 width=8) (actual time=94332.951..102376.356 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434772.63..3311634.03 rows=24077820 width=16) (actual time=55158.478..85004.521 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434756.38..2980547.76 rows=24077820 width=24) (actual time=55157.246..78774.763 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55152.401..71413.674 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11314.039..36917.720 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11291.729..25521.671 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.037..5569.137 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=225.232..225.236 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.880..95.736 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.985..21.985 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.690..11.319 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7262.695..7262.696 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.045..2560.464 rows=6666667 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.726..4.726 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.602..2.575 rows=10000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.190..1.190 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.926..1.045 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1524.389..1524.389 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.190..489.405 rows=1666667 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.759..0.759 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.725..0.728 rows=4 loops=3)",,,,,,,,,""
2021-03-22 06:34:31.940 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,557,"",2021-03-21 14:47:00 CET,4/565,0,LOG,00000,"duration: 109899.413 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=102903.707..102903.707 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=102895.441..109899.292 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=102839.439..102839.439 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=89686.034..101486.407 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9105.784..16174.428 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9103.851..14257.239 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.519..4698.782 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.549..1942.470 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.898..0.899 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.714..0.792 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1337.493..1337.493 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.849..539.607 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.871..1.871 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.852..1.855 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63515.090..63515.090 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13083.841..28434.574 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.000..6177.876 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=414.700..414.701 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.965..299.613 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.876..89.682 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.678..45.678 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.688..34.270 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.546..8.967 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.975..5.975 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.604..3.087 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:36:03.619 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,558,"",2021-03-21 14:47:00 CET,4/566,0,LOG,00000,"duration: 91647.396 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10354897.41..10354897.42 rows=1 width=8) (actual time=88247.258..88247.258 rows=1 loops=1)
  ->  Gather  (cost=10354897.19..10354897.40 rows=2 width=8) (actual time=88243.778..91646.827 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10353897.19..10353897.20 rows=1 width=8) (actual time=88189.629..88189.629 rows=1 loops=3)
              ->  Hash Join  (cost=542542.35..9992729.90 rows=144466918 width=0) (actual time=68451.089..86955.146 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=542526.10..8006293.53 rows=144466918 width=8) (actual time=68450.069..81925.447 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=542489.10..2889719.78 rows=24077820 width=16) (actual time=68449.485..77480.262 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=445807.72..2282024.05 rows=24077820 width=24) (actual time=42285.059..58044.472 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=13558.235..25647.479 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.688..6609.583 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=1148.156..1148.157 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                                  ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=27.960..485.953 rows=333333 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=22.693..343.221 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.715..90.814 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.602..21.602 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..10.943 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.149..5.149 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.842..2.868 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7304.580..7304.580 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.159..2576.241 rows=6666667 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2071.498..2071.498 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.881..514.625 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.555..0.555 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.530..0.532 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.802..0.802 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.542..0.659 rows=500 loops=3)",,,,,,,,,""
2021-03-22 06:37:53.036 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,559,"",2021-03-21 14:47:00 CET,4/567,0,LOG,00000,"duration: 109407.438 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=102716.536..102716.536 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=102708.391..109407.282 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=102646.505..102646.505 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=89669.944..101328.014 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9446.203..16568.427 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9444.170..14644.204 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.944..4583.348 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.688..1898.646 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.179..1.179 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.939..1.042 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1585.215..1585.215 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.576..535.176 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.975..1.975 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.944..1.947 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=64267.385..64267.385 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14183.569..29107.449 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.796..6125.056 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=447.939..447.939 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.230..319.096 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.967..92.252 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.937..51.937 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.927..37.855 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.522..10.841 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.256..5.256 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.492..2.917 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:39:50.169 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,560,"",2021-03-21 14:47:00 CET,4/568,0,LOG,00000,"duration: 117090.948 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14411149.31..14411149.32 rows=1 width=8) (actual time=114022.334..114022.334 rows=1 loops=1)
  ->  Gather  (cost=14411149.10..14411149.31 rows=2 width=8) (actual time=114018.606..117090.349 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14410149.10..14410149.11 rows=1 width=8) (actual time=113968.115..113968.115 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14048981.80 rows=144466918 width=0) (actual time=73352.041..112002.735 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12062252.68 rows=144466918 width=8) (actual time=73346.936..104852.344 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..10075816.31 rows=144466918 width=16) (actual time=73346.223..99671.819 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8087803.18 rows=144466918 width=16) (actual time=73323.104..90290.973 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..2971229.43 rows=24077820 width=24) (actual time=73322.450..85435.461 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=44109.201..60682.060 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=12868.994..26589.542 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.772..6806.769 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.650..235.651 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.935..99.915 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7566.912..7566.912 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.685..2665.203 rows=6666667 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3133.560..3133.560 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.867..471.997 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.618..0.618 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.605..0.606 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.803..22.803 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..11.783 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.692..0.692 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.495..0.592 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.789..4.789 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.466..2.568 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:41:35.290 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,561,"",2021-03-21 14:47:00 CET,4/569,0,LOG,00000,"duration: 105111.664 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100784.822..100784.822 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100778.974..105111.539 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100724.499..100724.499 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87709.421..99401.862 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8982.882..16166.154 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8980.586..14205.768 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.714..4655.171 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.682..1920.028 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.990..0.990 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.756..0.852 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1327.018..1327.019 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.142..536.950 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.139..2.140 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.103..2.106 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62688.523..62688.523 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14408.274..29364.375 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.907..6959.482 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=420.086..420.086 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.004..297.209 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.861..89.739 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.806..42.807 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.336..32.440 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.659..8.733 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.563..4.563 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.593..2.585 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:43:04.274 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,562,"",2021-03-21 14:47:00 CET,4/570,0,LOG,00000,"duration: 88943.255 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM category as cat
JOIN subcategory as sub
ON sub.category_id = cat.id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=10644558.37..10644558.38 rows=1 width=8) (actual time=85368.710..85368.710 rows=1 loops=1)
  ->  Gather  (cost=10644558.16..10644558.37 rows=2 width=8) (actual time=85364.866..88942.840 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10643558.16..10643558.17 rows=1 width=8) (actual time=85276.360..85276.367 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=537500.68..10282390.86 rows=144466918 width=0) (actual time=76475.692..84029.887 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=440819.30..7724642.41 rows=144466918 width=8) (actual time=39715.380..64915.669 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=440782.30..2608068.66 rows=24077820 width=16) (actual time=39714.715..59446.758 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=440766.05..2276982.38 rows=24077820 width=24) (actual time=39714.015..53858.138 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12144.204..24031.059 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.705..5863.222 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=430.729..430.729 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=51.475..309.792 rows=333333 loops=3)
                                                        Hash Cond: (prod.subcategory_id = sub.id)
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.849..89.644 rows=333333 loops=3)
                                                        ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=50.289..50.289 rows=50000 loops=3)
                                                              Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                              ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.013..37.223 rows=50000 loops=3)
                                                                    Hash Cond: (sub.category_id = cat.id)
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.489..9.927 rows=50000 loops=3)
                                                                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.433..5.434 rows=10000 loops=3)
                                                                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.484..2.732 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6689.428..6689.428 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.028..2414.812 rows=6666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.678..0.678 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.518..0.588 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.631..0.632 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.622..0.624 rows=4 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4725.509..4725.509 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.981..486.404 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 06:44:49.077 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,563,"",2021-03-21 14:47:00 CET,4/571,0,LOG,00000,"duration: 104792.764 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM category as cat
JOIN subcategory as sub
ON sub.category_id = cat.id
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99859.902..99859.902 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99853.461..104792.623 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99799.546..99799.546 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86365.676..98466.988 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8275.318..15092.905 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8273.927..13243.626 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.726..4251.605 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.750..1760.315 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.911..0.911 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.667..0.771 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1330.603..1330.604 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.724..535.398 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.342..1.343 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.316..1.321 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62205.730..62205.730 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12910.285..27352.964 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.922..5864.327 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=442.417..442.417 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.994..317.782 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.818..95.394 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.875..45.875 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.679..33.831 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.505..8.865 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.075..5.076 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.483..2.629 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:46:51.563 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,564,"",2021-03-21 14:47:00 CET,4/572,0,LOG,00000,"duration: 122449.271 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12877830.88..12877830.89 rows=1 width=8) (actual time=119309.770..119309.771 rows=1 loops=1)
  ->  Gather  (cost=12877830.67..12877830.88 rows=2 width=8) (actual time=119305.625..122449.089 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12876830.67..12876830.68 rows=1 width=8) (actual time=119250.172..119250.173 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12515663.37 rows=144466918 width=0) (actual time=76912.470..117492.703 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10528934.25 rows=144466918 width=8) (actual time=76906.849..110219.164 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..8542497.88 rows=144466918 width=16) (actual time=76905.880..105129.689 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=76905.174..99686.292 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=76881.109..89634.150 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47570.507..63209.868 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24635.670..39672.606 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.353..6887.908 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7459.096..7459.097 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.925..2675.825 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.299..240.299 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.047..100.599 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4695.721..4695.721 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.915..508.089 rows=1666667 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.757..23.757 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..12.255 rows=50000 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.678..0.678 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.664..0.665 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.941..0.941 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.718..0.820 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.294..5.294 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.580..2.835 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:48:37.688 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,565,"",2021-03-21 14:47:00 CET,4/573,0,LOG,00000,"duration: 106117.754 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100841.429..100841.430 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100833.358..106115.979 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100781.183..100781.184 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=88224.104..99472.662 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8366.689..15338.714 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8364.712..13471.508 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=4.252..4165.072 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.998..1702.753 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.138..1.139 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.855..0.984 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1477.984..1477.984 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.321..519.834 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.916..1.916 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.887..1.890 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63614.160..63614.160 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13606.838..27820.977 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.799..5831.399 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=459.859..459.859 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=40.700..321.209 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.928..104.434 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=39.437..39.437 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.768..29.819 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..8.356 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.119..4.119 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.525..2.373 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:50:33.715 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,566,"",2021-03-21 14:47:00 CET,4/574,0,LOG,00000,"duration: 115990.967 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=112324.648..112324.649 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=112318.629..115990.433 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=112261.759..112261.759 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=77874.451..110740.331 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..17056575.86 rows=144466917 width=8) (actual time=77869.512..104323.707 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..15070139.50 rows=144466917 width=16) (actual time=77868.657..99271.230 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=77845.281..89930.420 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=61240.894..71472.568 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=28119.924..50885.434 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=28119.066..44187.742 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.461..6999.088 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10933.325..10933.326 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.272..2686.826 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.815..0.816 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.794..0.796 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1475.463..1475.463 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.827..482.284 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=228.945..228.945 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.062..98.060 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.093..23.093 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.609..12.069 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.831..0.831 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.641..0.729 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.661..4.661 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.674..2.673 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:52:17.726 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,567,"",2021-03-21 14:47:00 CET,4/575,0,LOG,00000,"duration: 104001.209 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98316.744..98316.744 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98311.556..103998.872 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98263.450..98263.450 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85383.852..96934.393 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8661.803..15482.433 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8659.895..13634.269 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.338..4231.123 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.459..1741.634 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.839..0.840 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.649..0.734 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1676.516..1676.516 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.497..494.072 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.824..1.824 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.800..1.803 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60610.042..60610.042 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12731.518..27103.849 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.001..5587.079 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=442.816..442.816 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.900..315.474 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.834..95.333 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.720..45.720 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.277..33.665 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.511..8.981 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.675..4.675 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.475..2.527 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:54:59.564 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,568,"",2021-03-21 14:47:00 CET,4/576,0,LOG,00000,"duration: 161796.360 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=18617393.26..18617393.27 rows=1 width=8) (actual time=151957.990..151957.990 rows=1 loops=1)
  ->  Gather  (cost=18617393.04..18617393.25 rows=2 width=8) (actual time=151953.267..161796.232 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18616393.04..18616393.05 rows=1 width=8) (actual time=151900.326..151900.326 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18255225.75 rows=144466917 width=0) (actual time=129922.079..150662.493 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=1304911.38..16268789.39 rows=144466917 width=8) (actual time=129920.925..145542.568 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=1304602.38..14282060.28 rows=144466917 width=16) (actual time=129915.815..139969.560 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=91534.492..117313.331 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91504.925..106071.211 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69582.908..84553.659 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.659..4736.025 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.731..2050.599 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.867..0.867 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.848..0.850 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51663.403..51663.405 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.615..7933.625 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=233.120..233.121 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.840..101.062 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.003..29.003 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.705..14.509 rows=50000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4483.355..4483.355 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.003..472.063 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.983..4.983 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.631..2.683 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.946..0.946 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.704..0.797 rows=500 loops=3)",,,,,,,,,""
2021-03-22 06:56:43.393 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,569,"",2021-03-21 14:47:00 CET,4/577,0,LOG,00000,"duration: 103809.561 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97458.644..97458.644 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97454.103..103807.611 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97371.381..97371.381 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85517.209..96192.952 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9072.125..15639.865 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9070.537..13864.797 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.276..4458.505 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.652..1815.360 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.576..1.577 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.339..1.452 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1343.526..1343.526 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.555..534.173 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.495..1.495 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.474..1.476 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60814.349..60814.349 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12463.825..26731.900 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.660..5843.255 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=677.027..677.027 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.258..320.985 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.835..94.689 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.094..42.094 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.923..31.521 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..8.626 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.309..4.310 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.508..2.440 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 06:58:33.882 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,570,"",2021-03-21 14:47:00 CET,4/578,0,LOG,00000,"duration: 110454.352 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=13003473.85..13003473.86 rows=1 width=8) (actual time=107017.232..107017.233 rows=1 loops=1)
  ->  Gather  (cost=13003473.63..13003473.84 rows=2 width=8) (actual time=107013.153..110453.914 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=13002473.63..13002473.64 rows=1 width=8) (actual time=106961.826..106961.826 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=531491.00..12641306.34 rows=144466918 width=0) (actual time=98515.832..105732.706 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=434809.63..10083557.88 rows=144466918 width=8) (actual time=57033.584..90128.327 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=434500.63..8096828.76 rows=144466918 width=16) (actual time=57029.222..83238.431 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Hash Join  (cost=434463.63..2980255.01 rows=24077820 width=24) (actual time=57028.599..78577.751 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=57027.823..72591.638 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11993.100..37490.594 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11969.491..26142.156 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.743..5864.411 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=356.308..356.313 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.671..117.712 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.236..23.236 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.769..12.200 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8936.131..8936.132 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.880..2539.384 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.744..0.744 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.577..0.651 rows=500 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.598..0.598 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.587..0.588 rows=4 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.260..4.260 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.808..2.450 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.347..1309.347 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.814..501.060 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 07:00:17.808 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,571,"",2021-03-21 14:47:00 CET,4/579,0,LOG,00000,"duration: 103917.830 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98160.456..98160.456 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98151.525..103917.711 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98096.061..98096.061 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85607.509..96816.915 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9422.078..16123.799 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9420.414..14320.584 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.868..4380.470 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.773..1788.537 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.052..1.053 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.796..0.903 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1600.565..1600.565 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.572..531.977 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.572..1.573 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.554..1.556 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60251.218..60251.219 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12351.415..26710.787 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.962..5490.613 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1236.491..1236.491 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=49.466..344.210 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.881..110.661 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=48.204..48.204 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.351..35.467 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.597..9.935 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.627..4.628 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.614..2.603 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:02:14.359 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,572,"",2021-03-21 14:47:00 CET,4/580,0,LOG,00000,"duration: 116511.603 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19300718.55..19300718.56 rows=1 width=8) (actual time=112193.309..112193.309 rows=1 loops=1)
  ->  Gather  (cost=19300718.34..19300718.55 rows=2 width=8) (actual time=112189.262..116510.681 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19299718.34..19299718.35 rows=1 width=8) (actual time=112130.652..112130.652 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18938551.05 rows=144466917 width=0) (actual time=95940.618..110900.363 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=531182.00..16951821.94 rows=144466917 width=8) (actual time=95934.837..105172.391 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434500.63..14111911.49 rows=144466917 width=16) (actual time=56254.166..86958.699 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=434484.38..12125475.13 rows=144466917 width=24) (actual time=56253.237..80571.281 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=432891.38..10137462.02 rows=144466917 width=24) (actual time=56224.737..70170.272 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24512.494..46005.748 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24511.734..39806.961 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.961..7066.606 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6790.567..6790.567 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.193..2437.481 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.714..0.714 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.701..0.703 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=2461.731..2461.731 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.873..92.548 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.109..28.110 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.447..13.278 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.880..0.880 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.635..0.750 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1313.815..1313.815 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.028..494.185 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.364..5.364 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.665..2.975 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:03:58.088 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,573,"",2021-03-21 14:47:00 CET,4/581,0,LOG,00000,"duration: 103719.317 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98883.105..98883.105 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98876.743..103719.215 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98826.036..98826.037 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=86217.774..97538.235 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8652.604..15416.497 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8651.153..13588.447 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.837..4479.499 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.696..1825.684 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.091..1.092 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.849..0.954 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1292.994..1292.995 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.389..521.877 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.391..1.391 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.357..1.360 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61984.465..61984.465 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13079.152..27475.075 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.833..5552.039 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=411.060..411.060 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.284..296.574 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.922..86.723 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.030..42.031 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.233..31.271 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.547..8.340 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.598..4.598 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.466..2.497 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:06:01.682 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,574,"",2021-03-21 14:47:00 CET,4/582,0,LOG,00000,"duration: 123554.156 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14533180.98..14533180.99 rows=1 width=8) (actual time=119781.830..119781.830 rows=1 loops=1)
  ->  Gather  (cost=14533180.77..14533180.98 rows=2 width=8) (actual time=119777.762..123553.945 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14532180.77..14532180.78 rows=1 width=8) (actual time=119723.925..119723.925 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14171013.47 rows=144466918 width=0) (actual time=78526.350..117961.892 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..12184284.35 rows=144466918 width=8) (actual time=78520.731..110864.537 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=531165.75..10197847.98 rows=144466918 width=16) (actual time=78520.002..105655.301 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=529572.75..8209834.85 rows=144466918 width=16) (actual time=78495.056..96175.329 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3093261.10 rows=24077820 width=24) (actual time=78494.088..91305.473 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48593.771..64342.938 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25322.271..40546.840 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.364..7058.406 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7619.039..7619.039 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.345..2698.049 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.127..239.127 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.895..102.607 rows=333333 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4632.531..4632.531 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.919..516.142 rows=1666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.940..0.940 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.928..0.929 rows=4 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.633..24.634 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.465..12.362 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.708..0.709 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.480..0.582 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.315..5.315 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.480..2.883 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:07:45.397 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,575,"",2021-03-21 14:47:00 CET,4/583,0,LOG,00000,"duration: 103704.640 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98674.362..98674.363 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98667.141..103704.458 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98613.635..98613.635 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85864.689..97310.506 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8566.958..15245.438 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8565.050..13430.304 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.905..4382.404 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.868..1792.052 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.986..0.991 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.747..0.856 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1336.152..1336.153 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.528..542.124 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.808..1.808 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.741..1.744 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61230.428..61230.428 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13437.661..27555.298 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.846..5753.289 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=434.540..434.541 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.316..303.519 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.079..85.705 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.875..42.876 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.985..32.157 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.691..8.255 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.172..5.173 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.702..2.869 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:09:28.264 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,576,"",2021-03-21 14:47:00 CET,4/584,0,LOG,00000,"duration: 102833.016 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=10797796.48..10797796.49 rows=1 width=8) (actual time=99791.317..99791.317 rows=1 loops=1)
  ->  Gather  (cost=10797796.26..10797796.47 rows=2 width=8) (actual time=99784.620..102832.571 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10796796.26..10796796.27 rows=1 width=8) (actual time=99731.106..99731.106 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10435628.97 rows=144466918 width=0) (actual time=59261.820..98057.108 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=721798.79..8449192.59 rows=144466918 width=8) (actual time=59260.731..92286.881 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721761.79..3332618.84 rows=24077820 width=16) (actual time=59260.065..87914.001 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=721452.79..3001239.82 rows=24077820 width=24) (actual time=59254.989..81331.414 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=59230.512..71848.884 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34463.944..48525.759 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.052..7104.032 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17267.533..17267.533 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=6790.785..11809.519 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=2.076..2449.860 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1382.507..1382.507 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.793..481.451 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3920.061..3920.061 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.020..104.911 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.142..24.142 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.565..12.557 rows=50000 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.986..4.986 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.634..2.764 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.636..0.636 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.614..0.615 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.850..0.850 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.649..0.739 rows=500 loops=3)",,,,,,,,,""
2021-03-22 07:11:11.586 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,577,"",2021-03-21 14:47:00 CET,4/585,0,LOG,00000,"duration: 103307.401 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97978.499..97978.499 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97973.347..103305.576 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97923.180..97923.181 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85892.180..96717.173 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8538.737..15168.641 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8537.011..13362.171 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.970..4124.246 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.751..1689.933 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.174..1.175 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.976..1.062 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1699.046..1699.046 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.237..522.735 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.610..1.610 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.582..1.584 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61808.413..61808.413 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13075.685..27694.973 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.785..5563.324 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=377.704..377.704 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.006..269.800 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.952..84.096 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.579..40.579 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.217..30.270 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.480..7.673 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.603..5.603 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.825..3.073 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:12:55.619 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,578,"",2021-03-21 14:47:00 CET,4/586,0,LOG,00000,"duration: 103991.104 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14897807.09..14897807.10 rows=1 width=8) (actual time=100580.529..100580.529 rows=1 loops=1)
  ->  Gather  (cost=14897806.88..14897807.09 rows=2 width=8) (actual time=100576.657..103990.515 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14896806.88..14896806.89 rows=1 width=8) (actual time=100524.337..100524.337 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14535639.58 rows=144466918 width=0) (actual time=78840.605..99275.648 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=536911.18..12548910.46 rows=144466918 width=8) (actual time=78833.887..93365.704 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Parallel Hash Join  (cost=536894.93..10562474.09 rows=144466918 width=16) (actual time=78832.819..88512.140 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=46847.716..69064.189 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=46846.809..62550.012 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=11908.579..25830.320 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.625..5769.024 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=429.416..429.416 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.190..300.300 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.778..97.594 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.089..22.089 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.445..11.379 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=10851.292..10851.292 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.375..2681.602 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.861..0.862 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.847..0.849 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1282.042..1282.042 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.104..465.644 rows=1666667 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.023..1.023 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.808..0.905 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.368..6.368 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.662..3.281 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:14:41.488 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,579,"",2021-03-21 14:47:00 CET,4/587,0,LOG,00000,"duration: 105861.351 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=101166.037..101166.037 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=101159.527..105861.196 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=101072.918..101072.918 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87850.015..99700.790 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8960.250..15979.652 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8958.515..14093.878 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.744..4558.507 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.739..1899.984 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.956..0.957 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.712..0.807 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1369.156..1369.156 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.373..539.729 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.641..1.641 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.623..1.625 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62966.807..62966.807 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13814.698..28798.792 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.928..6193.949 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=431.543..431.543 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.071..311.616 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.802..97.096 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.913..45.913 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.327..34.093 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.549..9.372 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.677..4.677 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.678 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:16:40.687 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,580,"",2021-03-21 14:47:00 CET,4/588,0,LOG,00000,"duration: 119165.537 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11100449.12..11100449.13 rows=1 width=8) (actual time=115171.015..115171.015 rows=1 loops=1)
  ->  Gather  (cost=11100448.90..11100449.11 rows=2 width=8) (actual time=115167.559..119165.405 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11099448.90..11099448.91 rows=1 width=8) (actual time=115112.547..115112.547 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10738281.61 rows=144466918 width=0) (actual time=85571.442..113453.445 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8751552.48 rows=144466918 width=8) (actual time=85565.580..106934.341 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3634978.73 rows=24077820 width=16) (actual time=85564.841..102201.411 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=85563.905..96735.851 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=54914.632..71467.967 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11948.878..37579.354 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11919.463..26184.823 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.567..5920.738 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.413..247.414 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.793..115.544 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.990..28.990 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.665..14.132 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6952.403..6952.404 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.964..2533.429 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4762.740..4762.741 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.099..510.629 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.891..0.891 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.672..0.773 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.719..0.719 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.700..0.701 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.442..5.442 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.577..2.966 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:18:27.467 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,581,"",2021-03-21 14:47:00 CET,4/589,0,LOG,00000,"duration: 106771.432 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=101447.138..101447.139 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=101440.610..106771.298 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=101387.057..101387.057 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=88003.099..100030.979 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9268.258..16540.448 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9266.689..14633.652 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.335..4619.381 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.335..1914.851 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.942..0.943 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.673..0.809 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1548.809..1548.809 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.246..696.170 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.493..1.494 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.476..1.478 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62633.438..62633.438 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12350.694..27605.088 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.965..5784.823 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=425.735..425.735 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=47.283..303.371 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.826..95.360 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=46.013..46.014 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.571..33.947 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.554..9.274 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.839..4.839 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.653 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:21:09.789 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,582,"",2021-03-21 14:47:00 CET,4/590,0,LOG,00000,"duration: 162276.774 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18617393.26..18617393.27 rows=1 width=8) (actual time=152429.952..152429.952 rows=1 loops=1)
  ->  Gather  (cost=18617393.04..18617393.25 rows=2 width=8) (actual time=152424.267..162276.620 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18616393.04..18616393.05 rows=1 width=8) (actual time=152371.153..152371.154 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..18255225.75 rows=144466917 width=0) (actual time=118615.362..150880.707 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..16268496.64 rows=144466917 width=8) (actual time=118610.237..144433.590 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1304602.38..14282060.28 rows=144466917 width=16) (actual time=118609.305..139223.544 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..12294047.17 rows=144466917 width=16) (actual time=118584.989..129948.521 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=95027.124..109126.874 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=73240.374..88259.116 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.564..4711.559 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.578..2026.694 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.936..0.936 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.917..0.919 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=55071.008..55071.008 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.508..7913.958 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=252.808..252.808 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.078..106.119 rows=333333 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1386.753..1386.753 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.190..538.466 rows=1666667 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.012..24.012 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.667..12.266 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.913..0.913 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.714..0.804 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.793..4.794 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.588..2.641 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:22:55.246 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,583,"",2021-03-21 14:47:00 CET,4/591,0,LOG,00000,"duration: 105439.480 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97817.505..97817.506 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97810.382..105439.357 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97757.316..97757.317 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85386.195..96465.936 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8510.715..15072.602 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8509.167..13268.208 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.168..4413.904 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.848..1825.557 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.270..1.271 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.009..1.117 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1256.246..1256.246 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.357..502.162 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.477..1.477 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.444..1.447 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61162.393..61162.393 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12756.053..26478.026 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.671..5711.717 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=413.639..413.639 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.410..291.531 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.941..81.016 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.082..43.082 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.255..32.139 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.726..8.307 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.426..4.426 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.678..2.502 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:25:27.804 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,584,"",2021-03-21 14:47:00 CET,4/592,0,LOG,00000,"duration: 152515.808 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=18053069.26..18053069.27 rows=1 width=8) (actual time=146743.088..146743.088 rows=1 loops=1)
  ->  Gather  (cost=18053069.04..18053069.25 rows=2 width=8) (actual time=146739.001..152515.023 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18052069.04..18052069.05 rows=1 width=8) (actual time=146679.756..146679.756 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..17690901.75 rows=144466917 width=0) (actual time=137336.569..145393.395 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..15133153.30 rows=144466917 width=8) (actual time=91034.444..128542.287 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=91028.736..121451.019 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=91027.873..115780.849 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91002.450..105147.098 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69412.527..84134.831 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.877..4797.232 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.673..2062.991 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.147..1.148 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.131..1.133 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51216.989..51216.990 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.422..8003.954 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=231.928..231.928 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.631..97.599 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.997..24.998 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.553..12.521 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.813..0.814 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.562..0.674 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.604..5.604 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.754..3.025 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2001.603..2001.603 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.920..508.875 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 07:27:17.561 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,585,"",2021-03-21 14:47:00 CET,4/593,0,LOG,00000,"duration: 109738.899 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=101658.304..101658.305 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=101651.795..109738.733 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=101599.692..101599.692 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=88976.427..100299.282 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8538.497..15252.946 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8536.567..13443.283 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.325..4417.716 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.447..1814.177 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.831..0.832 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.652..0.736 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.266..1279.266 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.672..498.185 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.862..1.862 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.842..1.844 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=64869.839..64869.839 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=16630.112..30798.217 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.931..5769.042 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=5007.528..5007.528 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=46.494..291.300 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.956..88.052 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=45.168..45.169 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.182..33.183 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.491..8.855 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.587..4.587 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.541..2.484 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:29:42.862 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,586,"",2021-03-21 14:47:00 CET,4/594,0,LOG,00000,"duration: 145273.374 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=16363524.52..16363524.53 rows=1 width=8) (actual time=135546.054..135546.054 rows=1 loops=1)
  ->  Gather  (cost=16363524.31..16363524.52 rows=2 width=8) (actual time=135541.391..145273.217 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16362524.31..16362524.32 rows=1 width=8) (actual time=135482.127..135482.127 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1304927.63..16001357.02 rows=144466917 width=0) (actual time=126826.831..134303.660 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=1208246.25..13443608.57 rows=144466917 width=8) (actual time=88270.171..118900.523 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=1207937.25..11456879.46 rows=144466917 width=16) (actual time=88265.732..111810.369 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206344.25..9468866.35 rows=144466917 width=16) (actual time=88242.834..101528.650 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1184624.25..6815821.38 rows=150000000 width=16) (actual time=67299.272..81925.585 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Hash Join  (cost=53.25..2708392.00 rows=50000100 width=16) (actual time=3.580..6646.078 rows=6666667 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=1.845..4455.449 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.037..2072.875 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.762..0.763 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.735..0.737 rows=4 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.677..1.678 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.464..1.560 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50064.054..50064.054 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.207..7990.316 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=221.201..221.201 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.677..92.138 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.616..22.616 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.531..11.691 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.333..4.333 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.706..2.498 rows=10000 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1201.433..1201.433 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.077..477.157 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 07:31:27.717 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,587,"",2021-03-21 14:47:00 CET,4/595,0,LOG,00000,"duration: 104840.454 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97409.046..97409.046 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97401.534..104840.264 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97353.853..97353.854 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=84758.000..96053.295 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8203.270..14766.593 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8201.836..12980.906 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.528..4248.845 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.601..1793.694 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.884..0.885 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.709..0.788 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1255.203..1255.203 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.197..485.624 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.371..1.372 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.352..1.354 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60053.161..60053.161 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11910.344..25695.208 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.515..5625.138 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=405.527..405.527 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.045..290.204 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.758..90.397 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.991..40.992 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.802..30.664 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.505..8.163 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.209..4.209 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.349 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:33:22.668 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,588,"",2021-03-21 14:47:00 CET,4/596,0,LOG,00000,"duration: 114924.934 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=110864.861..110864.861 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=110860.894..114924.385 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=110810.207..110810.207 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=95580.808..109456.313 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12592382.06 rows=144466918 width=8) (actual time=95579.734..104257.083 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=57907.952..86010.307 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=57903.321..78864.730 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=57902.728..73414.975 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11889.277..38125.961 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11857.131..26452.497 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.897..5867.620 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=213.590..213.590 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.624..95.104 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.759..31.759 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.684..14.917 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=8384.731..8384.731 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.893..3350.519 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.567..0.567 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.557..0.558 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.515..4.515 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.897..2.646 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2112.585..2112.585 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.870..498.566 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.763..0.764 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.525..0.637 rows=500 loops=3)",,,,,,,,,""
2021-03-22 07:35:05.889 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,589,"",2021-03-21 14:47:00 CET,4/597,0,LOG,00000,"duration: 103210.849 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96282.511..96282.511 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96275.462..103208.369 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96225.981..96225.982 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83626.494..94925.361 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8786.574..15260.812 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8784.637..13484.733 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.477..4644.269 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.519..2006.126 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.912..0.912 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.658..0.765 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1236.397..1236.397 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.642..500.719 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.878..1.878 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.842..1.848 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59397.958..59397.958 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12289.978..26028.550 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.896..5786.050 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=427.829..427.829 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.429..302.313 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.875..93.704 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.222..44.222 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.345..32.880 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.512..9.013 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.730..4.730 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.541..2.581 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:36:46.084 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,590,"",2021-03-21 14:47:00 CET,4/598,0,LOG,00000,"duration: 100163.863 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10797796.48..10797796.49 rows=1 width=8) (actual time=97360.572..97360.572 rows=1 loops=1)
  ->  Gather  (cost=10797796.26..10797796.47 rows=2 width=8) (actual time=97355.348..100163.213 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10796796.26..10796796.27 rows=1 width=8) (actual time=97301.095..97301.095 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10435628.97 rows=144466918 width=0) (actual time=56230.847..95596.434 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8448899.84 rows=144466918 width=8) (actual time=56225.755..88628.403 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3332326.09 rows=24077820 width=16) (actual time=56225.149..84184.665 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=721452.79..3001239.82 rows=24077820 width=24) (actual time=56224.412..78533.195 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=56196.392..68893.985 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34958.156..49144.245 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.269..6845.579 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=18597.853..18597.853 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=8639.470..14023.835 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.368..2406.903 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3221.301..3221.302 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.799..512.708 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.582..230.582 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.851..101.099 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.744..27.744 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..13.678 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.716..0.716 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.536..0.619 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.588..0.588 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.573..0.574 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.775..4.776 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.520..2.573 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:38:28.795 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,591,"",2021-03-21 14:47:00 CET,4/599,0,LOG,00000,"duration: 102697.655 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM customer as cus
JOIN ""order"" as ord
ON ord.customer_id = cus.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97522.922..97522.922 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97514.227..102697.496 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97465.889..97465.889 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84923.988..96164.523 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8578.077..15259.240 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8576.598..13443.696 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.445..4424.491 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.425..1820.380 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.980..0.981 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.782..0.868 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1335.696..1335.696 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.277..523.852 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.411..1.411 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.386..1.388 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60599.144..60599.144 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12248.856..26293.421 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.815..5574.218 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=394.080..394.080 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.698..287.170 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.660..78.177 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.647..49.647 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.162..35.001 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.378..9.515 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.661..4.661 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.372..2.334 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:40:03.772 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,592,"",2021-03-21 14:47:00 CET,4/600,0,LOG,00000,"duration: 94940.759 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10499930.01..10499930.02 rows=1 width=8) (actual time=91597.663..91597.663 rows=1 loops=1)
  ->  Gather  (cost=10499929.80..10499930.01 rows=2 width=8) (actual time=91589.433..94940.338 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10498929.80..10498929.81 rows=1 width=8) (actual time=91537.608..91537.608 rows=1 loops=3)
              ->  Hash Join  (cost=811984.61..10137762.50 rows=144466918 width=0) (actual time=57856.859..90081.784 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=811675.61..8151033.38 rows=144466918 width=8) (actual time=57851.925..83730.035 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=811638.61..3034459.63 rows=24077820 width=16) (actual time=57851.334..79129.859 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=810045.61..2701796.61 rows=24077820 width=16) (actual time=57829.326..69836.334 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=788325.60..2239825.27 rows=25000000 width=16) (actual time=37975.596..51777.583 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.482..7009.881 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=643467.73..643467.73 rows=8333350 width=16) (actual time=21121.564..21121.565 rows=6666667 loops=3)
                                                  Buckets: 131072  Batches: 512  Memory Usage: 2912kB
                                                  ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=12176.971..16696.279 rows=6666667 loops=3)
                                                        Hash Cond: (ord.customer_id = cus.id)
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.598..4314.093 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.850..1754.258 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.708..0.708 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.522..0.607 rows=500 loops=3)
                                                        ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4850.693..4850.693 rows=1666667 loops=3)
                                                              Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                              ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.915..502.602 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=257.126..257.126 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.915..100.094 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=21.729..21.729 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.517..11.471 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.568..0.569 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.551..0.553 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.661..4.661 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.530..2.566 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:41:51.185 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,593,"",2021-03-21 14:47:00 CET,4/601,0,LOG,00000,"duration: 107403.433 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98860.487..98860.487 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98854.972..107400.898 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98803.973..98803.973 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86209.382..97505.457 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8554.854..15291.562 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8552.895..13465.464 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.512..4419.858 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.585..1816.234 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.882..0.883 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.704..0.782 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1259.270..1259.270 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.790..501.058 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.896..1.896 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.875..1.877 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=62234.077..62234.077 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13539.058..27492.813 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.915..5819.122 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=407.372..407.372 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.884..292.210 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.864..88.425 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.739..44.739 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.511..33.593 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..8.898 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.830..5.830 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.983 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:44:15.811 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,594,"",2021-03-21 14:47:00 CET,4/602,0,LOG,00000,"duration: 144589.748 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=17930127.07..17930127.08 rows=1 width=8) (actual time=139438.340..139438.340 rows=1 loops=1)
  ->  Gather  (cost=17930126.86..17930127.07 rows=2 width=8) (actual time=139433.308..144589.621 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=17929126.86..17929126.87 rows=1 width=8) (actual time=139384.271..139384.271 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17567959.57 rows=144466917 width=0) (actual time=112563.481..138129.238 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..15581230.46 rows=144466917 width=8) (actual time=112557.546..131936.455 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..13593217.35 rows=144466917 width=8) (actual time=112526.202..123501.476 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Hash Join  (cost=1281305.63..11233140.38 rows=150000000 width=8) (actual time=98373.871..106994.515 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=67671.105..89783.418 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=67670.101..83161.222 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.989..4739.721 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.776..2047.688 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.170..1.170 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.149..1.155 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49337.667..49337.667 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.950..7891.578 rows=20000000 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.961..0.962 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.780..0.858 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2004.527..2004.527 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.093..480.560 rows=1666667 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=339.265..339.265 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.029..109.327 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.006..31.006 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.542..15.188 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.582..5.582 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.563..2.966 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:46:06.424 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,595,"",2021-03-21 14:47:00 CET,4/603,0,LOG,00000,"duration: 110599.315 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=103670.077..103670.077 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=103662.339..110597.370 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=103608.843..103608.843 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=91049.884..102306.505 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9469.285..16132.930 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9467.607..14315.018 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.270..4122.375 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.401..1669.554 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.831..0.832 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.629..0.724 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1464.059..1464.059 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.540..535.534 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.620..1.620 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.598..1.601 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=66280.574..66280.574 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=16285.109..29934.465 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.884..5742.780 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=4702.472..4702.472 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.975..304.818 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.766..87.281 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.861..42.861 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.025..31.667 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.475..8.238 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.463..4.463 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.510..2.405 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:48:30.739 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,596,"",2021-03-21 14:47:00 CET,4/604,0,LOG,00000,"duration: 144275.220 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16253789.43..16253789.44 rows=1 width=8) (actual time=134449.758..134449.758 rows=1 loops=1)
  ->  Gather  (cost=16253789.22..16253789.43 rows=2 width=8) (actual time=134443.794..144272.961 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16252789.22..16252789.23 rows=1 width=8) (actual time=134388.022..134388.022 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..15891621.93 rows=144466917 width=0) (actual time=100361.323..132934.482 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..13904892.82 rows=144466917 width=8) (actual time=100355.927..126606.693 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=1304602.38..11918456.46 rows=144466917 width=16) (actual time=100355.122..121535.905 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1303009.38..9930443.35 rows=144466917 width=16) (actual time=100331.629..112350.788 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=79758.369..94325.186 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8590.477..13953.493 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.531..4514.193 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.610..2015.246 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.873..0.873 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.854..0.857 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1310.749..1310.749 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.468..506.351 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=52912.414..52912.414 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.745..8051.250 rows=20000000 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=230.924..230.924 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.924..99.455 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.206..23.206 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.524..11.902 rows=50000 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.784..0.784 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.569..0.670 rows=500 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.037..5.037 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.565..2.723 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:50:13.754 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,597,"",2021-03-21 14:47:00 CET,4/605,0,LOG,00000,"duration: 102993.268 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=94289.005..94289.005 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=94283.864..102991.085 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=94234.923..94234.923 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=82031.221..92983.278 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8636.560..15251.837 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8634.332..13436.865 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.011..4229.251 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.696..1725.740 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.266..1.266 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.060..1.152 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1296.150..1296.151 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.448..508.585 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.171..2.171 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.153..2.154 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58216.444..58216.444 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11997.888..25693.233 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.654..5762.196 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=394.163..394.163 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.925..280.139 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.857..84.601 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.780..43.780 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.936..32.840 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.609..8.711 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.236..5.236 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.507..2.698 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:52:04.992 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,598,"",2021-03-21 14:47:00 CET,4/606,0,LOG,00000,"duration: 111199.607 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=12765088.18..12765088.19 rows=1 width=8) (actual time=107131.216..107131.216 rows=1 loops=1)
  ->  Gather  (cost=12765087.96..12765088.17 rows=2 width=8) (actual time=107125.403..111199.478 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12764087.96..12764087.97 rows=1 width=8) (actual time=107066.141..107066.142 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..12402920.67 rows=144466918 width=0) (actual time=74107.407..105575.869 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..10416191.55 rows=144466918 width=8) (actual time=74100.308..99267.543 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..8428178.42 rows=144466918 width=8) (actual time=74066.904..90643.207 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=529552.00..3311604.67 rows=24077820 width=16) (actual time=74065.708..85936.339 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507832.00..2849633.34 rows=25000000 width=16) (actual time=58170.691..68233.628 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25126.240..48148.156 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25125.359..41008.355 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.705..7114.287 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7510.635..7510.635 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.105..2668.816 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.838..0.839 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.674..0.752 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1478.040..1478.041 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.755..503.738 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=220.237..220.237 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.025..97.302 rows=333333 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.169..1.169 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.146..1.148 rows=4 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=32.908..32.908 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.633..15.307 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.665..6.666 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.501..3.283 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:53:48.297 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,599,"",2021-03-21 14:47:00 CET,4/607,0,LOG,00000,"duration: 103296.487 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=94755.067..94755.067 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=94748.880..103293.919 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=94697.965..94697.965 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=82172.679..93372.772 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8469.768..15132.950 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8468.151..13322.835 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.462..4390.538 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.499..1795.348 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.916..0.920 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.739..0.817 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1242.150..1242.151 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.587..495.290 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.540..1.540 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.516..1.518 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58551.538..58551.538 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11979.800..25940.798 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.044..5624.702 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=426.336..426.336 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.185..303.428 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.780..89.941 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.091..43.091 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.727..31.730 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.484..8.291 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.126..4.126 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.442..2.263 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:55:52.852 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,600,"",2021-03-21 14:47:00 CET,4/608,0,LOG,00000,"duration: 124523.910 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=119992.899..119992.900 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=119988.317..124523.771 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=119904.914..119904.914 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=91101.136..118394.882 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8873584.15 rows=144466918 width=8) (actual time=91095.800..112105.156 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=91095.138..107575.237 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=91094.180..102269.345 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=50983.118..79526.412 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=50953.428..66936.245 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24404.818..41925.633 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.649..7125.757 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7137.003..7137.003 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.291..2579.147 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.641..229.641 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.679..98.680 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=29.221..29.221 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.662..14.538 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1447.514..1447.514 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.912..492.607 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.923..0.923 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.653..0.774 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.629..0.629 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.604..0.607 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.050..5.050 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.569..2.729 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:57:38.162 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,601,"",2021-03-21 14:47:00 CET,4/609,0,LOG,00000,"duration: 105300.637 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97315.630..97315.630 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97306.862..105300.495 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97254.486..97254.486 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84488.774..95953.804 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8612.413..15346.519 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8610.414..13516.278 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.472..4388.504 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.420..1786.720 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.005..1.005 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.665..0.803 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1326.832..1326.832 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.612..498.288 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.891..1.891 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.867..1.869 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60557.472..60557.472 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12833.089..26706.608 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.832..5830.715 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=405.924..405.924 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.734..293.852 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.940..87.234 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.458..47.458 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.260..35.365 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.538..9.458 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.608..5.608 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.541..2.984 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 07:59:31.497 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,602,"",2021-03-21 14:47:00 CET,4/610,0,LOG,00000,"duration: 113307.614 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=108968.011..108968.011 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=108963.641..113307.224 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=108911.433..108911.433 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=84003.723..107681.719 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=83999.119..101681.896 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..12259426.29 rows=144466918 width=8) (actual time=83973.110..93628.776 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=43971.019..72284.095 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=43970.101..65877.087 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43969.609..60060.518 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11994.255..25725.971 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=2.000..5897.864 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.735..238.735 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.821..104.329 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7466.984..7466.984 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.886..2680.609 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.467..0.467 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.456..0.457 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.879..0.879 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.698..0.776 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=2862.450..2862.450 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.971..471.859 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.711..25.711 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.549..12.967 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.322..4.322 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.414 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:01:12.921 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,603,"",2021-03-21 14:47:00 CET,4/611,0,LOG,00000,"duration: 101414.717 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96361.405..96361.405 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96356.441..101414.599 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96306.735..96306.735 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83678.598..95006.581 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8306.860..15023.206 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8304.901..13208.796 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.513..4256.613 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.377..1743.639 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.083..1.084 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.845..0.948 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1303.532..1303.532 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.589..524.325 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.888..1.889 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.867..1.872 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59399.569..59399.569 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12641.780..26522.860 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.788..5815.211 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=401.186..401.186 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.015..287.222 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.860..89.421 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.834..41.835 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.480..31.311 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.533..8.169 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.857..4.857 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.546..2.627 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:02:42.492 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,604,"",2021-03-21 14:47:00 CET,4/612,0,LOG,00000,"duration: 89539.257 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=12304950.14..12304950.15 rows=1 width=8) (actual time=85637.837..85637.837 rows=1 loops=1)
  ->  Gather  (cost=12304949.92..12304950.13 rows=2 width=8) (actual time=85632.937..89538.893 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=12303949.92..12303949.93 rows=1 width=8) (actual time=85545.368..85545.368 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=542542.35..11942782.63 rows=144466918 width=0) (actual time=77221.402..84370.876 rows=20000000 loops=3)
                    Hash Cond: (ord.customer_id = cus.id)
                    ->  Hash Join  (cost=445860.97..9385034.17 rows=144466918 width=8) (actual time=40185.179..65989.903 rows=20000000 loops=3)
                          Hash Cond: (ord.discount_id = dis.id)
                          ->  Hash Join  (cost=445844.72..7398597.80 rows=144466918 width=16) (actual time=40184.227..60015.536 rows=20000000 loops=3)
                                Hash Cond: (ord.deliverer_id = del.id)
                                ->  Parallel Hash Join  (cost=445807.72..2282024.05 rows=24077820 width=24) (actual time=40183.692..54693.021 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.order_id = ord.id)
                                      ->  Parallel Hash Join  (cost=34673.35..1224517.68 rows=24077820 width=8) (actual time=12380.068..23924.875 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.777..5990.827 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=27837.01..27837.01 rows=416667 width=8) (actual time=552.743..552.743 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                                  ->  Hash Join  (cost=1902.00..27837.01 rows=416667 width=8) (actual time=34.863..432.821 rows=333333 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=29.406..308.752 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.483..91.547 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=28.596..28.596 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.451..13.608 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.362..5.363 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.691..2.813 rows=10000 loops=3)
                                      ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7301.413..7301.413 rows=6666667 loops=3)
                                            Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                            ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.010..2623.399 rows=6666667 loops=3)
                                ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.515..0.515 rows=4 loops=3)
                                      Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                      ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.501..0.502 rows=4 loops=3)
                          ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.904..0.905 rows=500 loops=3)
                                Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.737..0.815 rows=500 loops=3)
                    ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4558.488..4558.488 rows=1666667 loops=3)
                          Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                          ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.866..512.799 rows=1666667 loops=3)",,,,,,,,,""
2021-03-22 08:04:25.528 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,605,"",2021-03-21 14:47:00 CET,4/613,0,LOG,00000,"duration: 103026.602 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN category as cat
ON cat.id = sub.category_id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97291.854..97291.854 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97283.658..103024.353 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97229.726..97229.727 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84868.031..95960.435 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8516.400..15268.291 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8514.810..13463.695 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=5.213..4304.821 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.752..1757.911 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=3.350..3.351 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=3.013..3.151 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1297.888..1297.888 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.273..493.682 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.504..1.504 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.481..1.483 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60815.884..60815.885 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13548.700..27595.758 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.982..6353.615 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=493.078..493.078 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=45.164..354.255 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.837..106.411 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=44.033..44.033 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.924..32.422 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.535..8.655 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.289..4.289 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.533..2.367 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:07:06.106 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,606,"",2021-03-21 14:47:00 CET,4/614,0,LOG,00000,"duration: 160539.356 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18118341.15..18118341.16 rows=1 width=8) (actual time=150494.333..150494.333 rows=1 loops=1)
  ->  Gather  (cost=18118340.93..18118341.14 rows=2 width=8) (actual time=150489.821..160538.569 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18117340.93..18117340.94 rows=1 width=8) (actual time=150407.688..150407.688 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17756173.64 rows=144466917 width=0) (actual time=134679.020..149206.376 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=1304618.63..15769444.53 rows=144466917 width=8) (actual time=134674.141..143678.388 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1207937.25..12929534.08 rows=144466917 width=16) (actual time=102247.535..126119.043 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=1206344.25..10941520.97 rows=144466917 width=16) (actual time=102215.246..115511.102 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=1184624.25..8288476.00 rows=150000000 width=16) (actual time=71705.986..92615.107 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=71704.589..86543.324 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.949..4789.025 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.907..2054.396 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.993..0.993 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.977..0.979 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=53091.932..53091.932 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.339..8729.658 rows=20000000 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.324..1.325 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.091..1.190 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3408.198..3408.199 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.632..103.569 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.849..31.849 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.623..15.334 rows=50000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1240.078..1240.079 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.884..472.231 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.579..4.579 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.565..2.564 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:08:50.813 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,607,"",2021-03-21 14:47:00 CET,4/615,0,LOG,00000,"duration: 104693.382 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99805.129..99805.129 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99800.877..104692.424 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99748.348..99748.349 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=87225.310..98455.002 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8819.356..15514.967 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8817.667..13680.625 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.500..4347.611 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.501..1781.096 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.955..0.956 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.720..0.818 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1242.177..1242.177 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.421..499.035 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.607..1.608 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.582..1.584 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61775.747..61775.747 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12928.291..26864.673 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.645..6204.057 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=417.125..417.126 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.953..299.337 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.971..83.324 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.628..43.628 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.709..32.778 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.655..8.295 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.945..5.945 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.599..3.068 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:10:45.452 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,608,"",2021-03-21 14:47:00 CET,4/616,0,LOG,00000,"duration: 114597.000 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11109738.08..11109738.09 rows=1 width=8) (actual time=110893.613..110893.613 rows=1 loops=1)
  ->  Gather  (cost=11109737.87..11109738.08 rows=2 width=8) (actual time=110888.876..114596.865 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11108737.87..11108737.88 rows=1 width=8) (actual time=110837.550..110837.550 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10747570.57 rows=144466918 width=0) (actual time=76997.972..109228.862 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8760841.45 rows=144466918 width=8) (actual time=76992.159..102831.605 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3644267.70 rows=24077820 width=16) (actual time=76991.503..98220.750 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=529552.00..3311604.67 rows=24077820 width=16) (actual time=76963.709..88977.483 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507832.00..2849633.34 rows=25000000 width=16) (actual time=61501.811..71314.774 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411150.63..2222676.29 rows=25000000 width=24) (actual time=25936.054..48608.549 rows=20000000 loops=3)
                                                  Hash Cond: (ord.discount_id = dis.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25935.008..41567.751 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.716..8107.525 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7619.580..7619.581 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.349..2702.124 rows=6666667 loops=3)
                                                  ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.005..1.005 rows=500 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                        ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.832..0.911 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4579.591..4579.591 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.796..498.616 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=238.486..238.487 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.014..100.625 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.445..27.445 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.618..13.329 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.636..0.636 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.613..0.614 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.536..5.536 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.715..3.009 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:12:29.097 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,609,"",2021-03-21 14:47:00 CET,4/617,0,LOG,00000,"duration: 103635.889 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95016.096..95016.096 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95007.595..103633.758 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=94953.254..94953.255 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83362.297..93773.468 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8540.658..15184.509 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8537.977..13356.723 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.510..4285.424 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.460..1731.808 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.007..1.012 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.783..0.879 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1455.061..1455.061 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.130..521.055 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.605..2.605 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.578..2.581 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59299.127..59299.127 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13021.785..26674.824 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.063..5628.369 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=478.957..478.957 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=50.754..344.903 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.835..96.638 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=49.552..49.552 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.887..36.176 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.525..9.706 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.257..5.258 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.509..2.739 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:14:11.168 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,610,"",2021-03-21 14:47:00 CET,4/618,0,LOG,00000,"duration: 102024.389 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=17119636.01..17119636.02 rows=1 width=8) (actual time=98425.132..98425.132 rows=1 loops=1)
  ->  Gather  (cost=17119635.79..17119636.00 rows=2 width=8) (actual time=98419.018..102022.575 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=17118635.79..17118635.80 rows=1 width=8) (actual time=98359.363..98359.363 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..16757468.50 rows=144466917 width=0) (actual time=72935.195..97160.163 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=637627.57..14770739.39 rows=144466917 width=8) (actual time=72929.733..91150.845 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=636034.57..12782726.28 rows=144466917 width=8) (actual time=72903.740..82798.311 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=539353.19..9942815.83 rows=144466917 width=16) (actual time=51543.314..64367.719 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=517633.19..7289770.86 rows=150000000 width=16) (actual time=25418.290..45490.973 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=25417.433..39767.758 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.510..6921.901 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8527.051..8527.052 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=1.972..4232.784 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.123..1789.899 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.813..0.814 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.596..0.699 rows=500 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.802..0.803 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.782..0.783 rows=4 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=235.390..235.390 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.776..101.268 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1374.300..1374.300 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.144..489.784 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.696..25.696 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.693..12.990 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.195..5.195 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.726..2.895 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:15:53.897 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,611,"",2021-03-21 14:47:00 CET,4/619,0,LOG,00000,"duration: 102719.555 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97432.476..97432.476 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97429.477..102719.419 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97372.521..97372.522 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=84968.082..96073.314 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8827.883..15572.267 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8826.399..13731.221 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.355..4397.644 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.464..1809.698 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.850..0.850 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.669..0.748 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1432.665..1432.665 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.082..534.624 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.432..1.432 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.416..1.417 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60843.669..60843.669 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13217.183..27059.927 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.721..5844.022 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=432.285..432.285 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=55.452..312.533 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.841..83.650 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=54.229..54.230 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.764..39.314 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.555..10.441 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.097..6.097 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.605..3.059 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:18:35.430 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,612,"",2021-03-21 14:47:00 CET,4/620,0,LOG,00000,"duration: 161497.940 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18335231.26..18335231.27 rows=1 width=8) (actual time=151905.361..151905.361 rows=1 loops=1)
  ->  Gather  (cost=18335231.04..18335231.25 rows=2 width=8) (actual time=151900.599..161496.894 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18334231.04..18334231.05 rows=1 width=8) (actual time=151840.956..151840.956 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17973063.75 rows=144466917 width=0) (actual time=136112.796..150623.781 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=1304618.63..15986334.64 rows=144466917 width=8) (actual time=136105.687..145087.096 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=96663.249..127404.667 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=96662.241..121057.071 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=96638.881..110688.481 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=70180.355..85325.292 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.556..4762.747 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.703..2061.188 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.778..1.782 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.758..1.760 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=51361.903..51361.903 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.690..8018.058 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3392.776..3392.776 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.588..104.701 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.997..22.998 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.480..11.625 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.962..0.963 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.725..0.828 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1293.314..1293.314 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.930..495.494 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.644..6.644 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.643..3.404 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:20:19.452 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,613,"",2021-03-21 14:47:00 CET,4/621,0,LOG,00000,"duration: 104007.761 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98962.132..98962.132 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98955.408..104007.637 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98902.791..98902.791 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85965.858..97602.855 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8511.321..15416.584 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8509.372..13555.478 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.006..4060.269 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.801..1650.381 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.159..1.159 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.843..0.984 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1763.735..1763.739 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.088..508.861 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.855..1.855 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.836..1.838 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61242.654..61242.654 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13846.368..27754.874 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.589..5523.680 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1386.771..1386.772 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=54.272..347.865 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.051..105.142 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=52.857..52.858 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.159..38.265 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.559..11.354 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.481..4.481 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.535..2.530 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:22:19.761 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,614,"",2021-03-21 14:47:00 CET,4/622,0,LOG,00000,"duration: 120257.402 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9539364.01..9539364.02 rows=1 width=8) (actual time=116282.800..116282.800 rows=1 loops=1)
  ->  Gather  (cost=9539363.79..9539364.00 rows=2 width=8) (actual time=116279.116..120257.271 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9538363.79..9538363.80 rows=1 width=8) (actual time=116194.898..116194.898 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..9177196.50 rows=144466918 width=0) (actual time=74706.011..114489.716 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=531454.00..4060622.75 rows=24077820 width=8) (actual time=74705.197..108981.114 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=531145.00..3729243.72 rows=24077820 width=16) (actual time=74700.445..102965.514 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=531128.75..3398157.45 rows=24077820 width=24) (actual time=74699.408..97192.875 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=529535.75..3065494.42 rows=24077820 width=24) (actual time=74675.747..87569.538 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=507815.75..2554695.09 rows=25000000 width=24) (actual time=56553.789..67809.150 rows=20000000 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25038.192..42012.334 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.833..7026.083 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7767.656..7767.656 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.361..2750.152 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5022.884..5022.885 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.824..502.186 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.251..240.251 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.197..94.349 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.143..23.143 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.636..11.763 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.002..1.002 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.700..0.827 rows=500 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.643..4.643 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.570..2.551 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.596..0.596 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.564..0.566 rows=4 loops=3)",,,,,,,,,""
2021-03-22 08:24:08.057 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,615,"",2021-03-21 14:47:00 CET,4/623,0,LOG,00000,"duration: 108287.999 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99457.499..99457.499 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99450.156..108287.780 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99393.419..99393.420 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86691.047..98096.057 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9848.251..16511.841 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9846.329..14700.785 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.934..4228.147 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.681..1732.390 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.205..1.206 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.946..1.062 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1628.056..1628.056 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.623..506.234 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.835..1.836 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.815..1.817 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60511.212..60511.212 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12656.223..26707.659 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.009..5741.585 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=504.999..504.999 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.776..304.071 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.902..88.540 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.461..57.461 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.887..41.604 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.581..11.254 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.160..6.160 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.554..3.115 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:26:06.093 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,616,"",2021-03-21 14:47:00 CET,4/624,0,LOG,00000,"duration: 117997.431 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11175452.79..11175452.80 rows=1 width=8) (actual time=113482.051..113482.052 rows=1 loops=1)
  ->  Gather  (cost=11175452.57..11175452.78 rows=2 width=8) (actual time=113478.285..117997.247 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11174452.57..11174452.58 rows=1 width=8) (actual time=113424.988..113424.988 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10813285.28 rows=144466918 width=0) (actual time=93277.637..112203.790 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..8826848.90 rows=144466918 width=8) (actual time=93276.531..107108.557 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=531437.75..3710275.15 rows=24077820 width=16) (actual time=93275.948..102672.821 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434756.38..3102579.43 rows=24077820 width=24) (actual time=48398.019..83632.682 rows=20000000 loops=3)
                                      Hash Cond: (sub.category_id = cat.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48393.758..75253.621 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=48370.377..63803.540 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=25121.873..40214.702 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.867..7099.104 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7684.367..7684.367 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.822..2681.014 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=247.421..247.421 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.151..102.639 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.082..23.082 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.521..11.907 rows=50000 loops=3)
                                      ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.160..4.163 rows=10000 loops=3)
                                            Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                            ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.730..2.396 rows=10000 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1309.134..1309.134 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.119..482.463 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.563..0.563 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.542..0.544 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.829..0.829 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.582..0.686 rows=500 loops=3)",,,,,,,,,""
2021-03-22 08:27:47.118 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,617,"",2021-03-21 14:47:00 CET,4/625,0,LOG,00000,"duration: 101017.173 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95949.545..95949.546 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95945.059..101016.993 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95892.606..95892.606 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83220.714..94654.204 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8590.809..15301.366 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8589.256..13484.298 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.064..4421.888 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.831..1800.866 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.176..1.177 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.938..1.050 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1289.876..1289.876 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.254..515.087 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.482..1.482 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.462..1.464 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58984.536..58984.536 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11927.184..25822.348 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.749..5710.568 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=385.120..385.120 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.877..274.721 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.864..84.278 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.720..40.720 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.982..30.589 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.545..8.213 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.346..4.347 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.634..2.499 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:29:31.584 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,618,"",2021-03-21 14:47:00 CET,4/626,0,LOG,00000,"duration: 104420.182 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=9142446.38..9142446.39 rows=1 width=8) (actual time=101671.841..101671.841 rows=1 loops=1)
  ->  Gather  (cost=9142446.16..9142446.37 rows=2 width=8) (actual time=101665.320..104420.054 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=9141446.16..9141446.17 rows=1 width=8) (actual time=101612.241..101612.241 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..8780278.87 rows=144466918 width=0) (actual time=59331.226..99848.955 rows=20000000 loops=3)
                    Hash Cond: (ord.deliverer_id = del.id)
                    ->  Hash Join  (cost=721778.04..3663705.12 rows=24077820 width=8) (actual time=59330.336..94288.142 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Hash Join  (cost=721469.04..3332326.09 rows=24077820 width=16) (actual time=59325.173..87955.219 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Hash Join  (cost=719876.04..2999663.07 rows=24077820 width=16) (actual time=59299.923..78275.320 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=59298.931..72466.663 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=38074.113..52259.115 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.644..7013.707 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=20977.647..20977.647 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=10830.969..15920.160 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.593..2595.631 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4978.253..4978.253 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.878..516.038 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.948..242.948 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.004..106.029 rows=333333 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.954..0.954 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.786..0.865 rows=500 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.893..24.893 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.688..12.633 rows=50000 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.057..5.057 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.606..2.731 rows=10000 loops=3)
                    ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.682..0.682 rows=4 loops=3)
                          Buckets: 2048  Batches: 1  Memory Usage: 17kB
                          ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.659..0.661 rows=4 loops=3)",,,,,,,,,""
2021-03-22 08:31:15.522 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,619,"",2021-03-21 14:47:00 CET,4/627,0,LOG,00000,"duration: 103922.133 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99238.008..99238.009 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99232.698..103921.929 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99184.950..99184.950 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87432.689..98019.270 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9112.815..15672.071 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9110.967..13869.113 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.566..4411.710 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.511..1803.365 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.011..1.016 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.727..0.849 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1491.335..1491.335 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.638..530.167 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.769..1.769 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.746..1.751 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61878.825..61878.825 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13266.512..27201.669 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.009..5705.128 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=393.788..393.789 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.706..281.625 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.713..84.291 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.609..42.609 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.601..31.329 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.427..8.241 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.031..5.032 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.409..2.492 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:33:20.117 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,620,"",2021-03-21 14:47:00 CET,4/628,0,LOG,00000,"duration: 124558.438 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=11222480.79..11222480.80 rows=1 width=8) (actual time=120570.194..120570.195 rows=1 loops=1)
  ->  Gather  (cost=11222480.57..11222480.78 rows=2 width=8) (actual time=120566.286..124557.403 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11221480.57..11221480.58 rows=1 width=8) (actual time=120511.434..120511.434 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10860313.28 rows=144466918 width=0) (actual time=92327.911..119043.162 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..8873584.15 rows=144466918 width=8) (actual time=92322.671..112958.686 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531145.00..3757010.40 rows=24077820 width=16) (actual time=92321.957..108528.378 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=531128.75..3425924.13 rows=24077820 width=24) (actual time=92321.001..103378.019 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=48015.656..76862.163 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=47992.973..64240.338 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24869.966..40175.033 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.640..7148.780 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7559.959..7559.959 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.338..2706.612 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.309..242.309 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.809..102.737 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.264..22.264 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.929..11.693 rows=50000 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4855.809..4855.810 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.993..520.521 rows=1666667 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.929..0.929 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.601..0.747 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.686..0.686 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.670..0.671 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.908..4.908 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.614..2.673 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:35:03.661 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,621,"",2021-03-21 14:47:00 CET,4/629,0,LOG,00000,"duration: 103533.756 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98087.149..98087.149 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98078.630..103531.961 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98029.036..98029.036 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85958.279..96817.271 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8608.660..15264.999 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8607.017..13467.579 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.192..4424.349 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.624..1818.265 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.506..1.507 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.246..1.358 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1289.986..1289.986 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.585..511.010 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.571..1.571 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.543..1.546 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61576.901..61576.901 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=14224.033..28122.729 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.835..5697.701 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=443.395..443.395 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=53.197..319.935 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.092..87.860 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=51.759..51.760 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.543..37.982 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.610..10.697 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.799..5.799 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.907..3.239 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:37:46.940 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,622,"",2021-03-21 14:47:00 CET,4/630,0,LOG,00000,"duration: 163244.665 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=18335231.26..18335231.27 rows=1 width=8) (actual time=152811.423..152811.424 rows=1 loops=1)
  ->  Gather  (cost=18335231.04..18335231.25 rows=2 width=8) (actual time=152806.339..163243.431 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=18334231.04..18334231.05 rows=1 width=8) (actual time=152754.227..152754.227 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..17973063.75 rows=144466917 width=0) (actual time=136183.121..151448.055 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=1304618.63..15986334.64 rows=144466917 width=8) (actual time=136178.620..145623.586 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=1207937.25..13146424.19 rows=144466917 width=16) (actual time=91800.757..123444.719 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=1207921.00..11159987.83 rows=144466917 width=24) (actual time=91799.768..116894.599 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=1206328.00..9171974.72 rows=144466917 width=24) (actual time=91765.932..106199.387 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=1184608.00..6225959.75 rows=150000000 width=24) (actual time=69233.600..84665.190 rows=20000000 loops=3)
                                                  Hash Cond: (ord.id = ord_det.order_id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=3.009..4788.792 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.694..2070.727 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.260..1.260 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.235..1.237 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=50556.638..50556.638 rows=20000000 loops=3)
                                                        Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.470..8051.752 rows=20000000 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=237.084..237.084 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.240..103.604 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=33.415..33.416 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.472..15.347 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.937..0.937 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.698..0.796 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4921.228..4921.229 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.991..522.477 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.226..4.226 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.517..2.380 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:39:30.113 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,623,"",2021-03-21 14:47:00 CET,4/631,0,LOG,00000,"duration: 103156.718 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98432.536..98432.537 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98425.487..103156.535 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98372.040..98372.040 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=85829.524..97073.986 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9622.826..16338.917 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9620.791..14500.056 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.579..4305.881 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.682..1764.818 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.855..0.856 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.668..0.754 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1765.970..1765.970 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.339..524.041 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.938..1.938 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.914..1.916 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60304.846..60304.846 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12824.791..26735.514 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.928..5700.133 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=445.680..445.680 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.044..315.920 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.072..100.720 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=42.646..42.646 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.254..32.003 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.589..8.669 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.565..4.566 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.590..2.608 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:41:17.198 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,624,"",2021-03-21 14:47:00 CET,4/632,0,LOG,00000,"duration: 107048.082 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14615645.09..14615645.10 rows=1 width=8) (actual time=103155.405..103155.405 rows=1 loops=1)
  ->  Gather  (cost=14615644.88..14615645.09 rows=2 width=8) (actual time=103150.690..107047.511 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14614644.88..14614644.89 rows=1 width=8) (actual time=103093.049..103093.049 rows=1 loops=3)
              ->  Hash Join  (cost=537220.18..14253477.58 rows=144466918 width=0) (actual time=86791.235..101799.537 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Parallel Hash Join  (cost=536911.18..12266748.46 rows=144466918 width=8) (actual time=86784.266..95908.048 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=440229.80..9426838.00 rows=144466918 width=16) (actual time=44377.365..72498.062 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=440213.55..7440401.63 rows=144466918 width=24) (actual time=44376.425..66158.010 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=440176.55..2323827.88 rows=24077820 width=32) (actual time=44375.943..60423.362 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Parallel Hash Join  (cost=29042.18..1219293.51 rows=24077820 width=16) (actual time=12254.799..25428.221 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.926..5954.901 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=21798.84..21798.84 rows=416667 width=16) (actual time=418.900..418.900 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Hash Join  (cost=1593.00..21798.84 rows=416667 width=16) (actual time=23.151..291.807 rows=333333 loops=3)
                                                              Hash Cond: (prod.subcategory_id = sub.id)
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.716..94.446 rows=333333 loops=3)
                                                              ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.042..22.042 rows=50000 loops=3)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                                    ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.546..11.280 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7630.638..7630.638 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.031..2740.865 rows=6666667 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.448..0.448 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.439..0.440 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.896..0.897 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.674..0.768 rows=500 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5037.760..5037.760 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.871..501.727 rows=1666667 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.568..6.568 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.540..3.352 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:43:01.882 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,625,"",2021-03-21 14:47:00 CET,4/633,0,LOG,00000,"duration: 104675.036 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM subcategory as sub
JOIN product as prod
ON prod.subcategory_id = sub.id
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99890.863..99890.863 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99882.465..104672.917 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99830.729..99830.729 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=87179.332..98533.716 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8405.692..15188.329 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8403.615..13376.604 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.585..4301.813 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.522..1755.116 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.007..1.008 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.767..0.870 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1300.920..1300.922 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.147..523.310 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.999..2.000 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.972..1.974 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61888.614..61888.614 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13295.469..27516.190 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.911..5814.827 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=449.524..449.524 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=69.250..327.882 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.007..96.029 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=67.794..67.794 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.585..48.661 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.629..13.820 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.812..6.813 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.778..3.529 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:44:45.469 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,626,"",2021-03-21 14:47:00 CET,4/634,0,LOG,00000,"duration: 103551.867 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14108496.67..14108496.68 rows=1 width=8) (actual time=100650.959..100650.959 rows=1 loops=1)
  ->  Gather  (cost=14108496.46..14108496.67 rows=2 width=8) (actual time=100645.194..103551.392 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14107496.46..14107496.47 rows=1 width=8) (actual time=100593.033..100593.033 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..13746329.16 rows=144466918 width=0) (actual time=60635.439..98919.320 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..11759600.04 rows=144466918 width=8) (actual time=60630.757..92028.333 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=719913.04..9771586.92 rows=144466918 width=8) (actual time=60607.178..83318.669 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=719896.79..7785150.54 rows=144466918 width=16) (actual time=60606.254..78556.255 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=60605.612..73439.284 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34516.842..48729.373 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.524..7027.008 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=16897.962..16897.962 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7057.059..12022.960 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.543..2568.299 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.956..1279.957 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.857..481.423 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=4163.700..4163.700 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.911..113.927 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.614..0.614 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.596..0.598 rows=4 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.887..0.887 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.648..0.752 rows=500 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=23.265..23.266 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.470..11.947 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.381..4.381 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.511..2.452 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:46:31.007 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,627,"",2021-03-21 14:47:00 CET,4/635,0,LOG,00000,"duration: 105528.851 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97195.950..97195.951 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97191.671..105526.597 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97140.235..97140.235 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84428.283..95844.947 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8645.193..15522.994 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8643.577..13719.442 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.477..4459.840 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.485..1816.091 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.949..0.950 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.729..0.823 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1279.126..1279.126 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.305..525.467 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.537..1.537 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.508..1.510 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59659.181..59659.181 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12287.239..26448.722 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.796..5539.519 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=422.726..422.726 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.755..305.663 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.838..88.426 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.597..41.597 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.110..30.901 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.544..8.168 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.477..4.477 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.520..2.449 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:48:10.952 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,628,"",2021-03-21 14:47:00 CET,4/636,0,LOG,00000,"duration: 99903.680 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10761648.45..10761648.46 rows=1 width=8) (actual time=96863.611..96863.612 rows=1 loops=1)
  ->  Gather  (cost=10761648.24..10761648.45 rows=2 width=8) (actual time=96856.675..99903.562 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10760648.24..10760648.25 rows=1 width=8) (actual time=96801.155..96801.155 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10399480.94 rows=144466918 width=0) (actual time=62934.878..95209.617 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8412751.82 rows=144466918 width=8) (actual time=62928.671..88739.348 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3296178.07 rows=24077820 width=16) (actual time=62928.118..84075.124 rows=20000000 loops=3)
                                Hash Cond: (prod.subcategory_id = sub.id)
                                ->  Parallel Hash Join  (cost=719876.04..2963515.04 rows=24077820 width=16) (actual time=62902.583..74782.415 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=698156.04..2501543.71 rows=25000000 width=16) (actual time=35668.082..56415.153 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=35666.875..50198.076 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.588..7124.254 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17177.536..17177.537 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7355.126..12529.541 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.756..2606.596 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1514.541..1514.542 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.860..523.387 rows=1666667 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.162..1.162 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.989..1.067 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.775..240.775 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.892..113.152 rows=333333 loops=3)
                                ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.176..25.176 rows=50000 loops=3)
                                      Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                      ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.572..12.868 rows=50000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.532..0.532 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.515..0.516 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.868..5.868 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.521..3.087 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:49:55.068 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,629,"",2021-03-21 14:47:00 CET,4/637,0,LOG,00000,"duration: 104106.967 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=99396.309..99396.309 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=99389.886..104104.024 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=99334.694..99334.694 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86647.411..98043.897 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9354.422..16007.706 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9352.202..14189.111 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.434..4414.587 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.401..1830.023 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.980..0.980 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.744..0.844 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1478.090..1478.090 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=2.015..669.469 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.144..2.144 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.124..2.126 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61473.040..61473.040 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12825.133..26963.030 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.941..5860.751 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1030.687..1030.687 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.745..307.873 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.832..95.247 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.595..41.595 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=4.839..31.070 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.518..8.285 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.220..4.220 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.526..2.386 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:51:54.950 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,630,"",2021-03-21 14:47:00 CET,4/638,0,LOG,00000,"duration: 119846.042 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=11100449.12..11100449.13 rows=1 width=8) (actual time=116049.371..116049.371 rows=1 loops=1)
  ->  Gather  (cost=11100448.90..11100449.11 rows=2 width=8) (actual time=116044.624..119845.472 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=11099448.90..11099448.91 rows=1 width=8) (actual time=115989.863..115989.863 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..10738281.61 rows=144466918 width=0) (actual time=87936.494..114482.505 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..8751845.23 rows=144466918 width=8) (actual time=87935.266..109068.285 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=531437.75..3635271.48 rows=24077820 width=16) (actual time=87934.586..104556.705 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Parallel Hash Join  (cost=531128.75..3303892.46 rows=24077820 width=24) (actual time=87928.951..98591.278 rows=20000000 loops=3)
                                      Hash Cond: (ord.customer_id = cus.id)
                                      ->  Parallel Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=55468.294..72166.901 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.order_id = ord.id)
                                            ->  Hash Join  (cost=23313.00..1544634.36 rows=24077820 width=16) (actual time=11916.004..37365.895 rows=20000000 loops=3)
                                                  Hash Cond: (prod.subcategory_id = sub.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11889.405..26017.961 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.649..5893.346 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=242.079..242.080 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.010..108.989 rows=333333 loops=3)
                                                  ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=26.233..26.233 rows=50000 loops=3)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.781..12.992 rows=50000 loops=3)
                                            ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7324.765..7324.766 rows=6666667 loops=3)
                                                  Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                  ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.395..2592.737 rows=6666667 loops=3)
                                      ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5130.307..5130.307 rows=1666667 loops=3)
                                            Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                            ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.837..495.202 rows=1666667 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.498..5.498 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.614..2.934 rows=10000 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.650..0.650 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.618..0.623 rows=4 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.926..0.926 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.659..0.770 rows=500 loops=3)",,,,,,,,,""
2021-03-22 08:53:37.996 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,631,"",2021-03-21 14:47:00 CET,4/639,0,LOG,00000,"duration: 103035.037 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98046.770..98046.770 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98041.832..103034.887 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97983.153..97983.154 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=86153.589..96794.264 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8598.149..15292.291 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8596.277..13469.616 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.389..4451.286 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.488..1836.212 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.854..0.855 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.634..0.728 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1300.505..1300.505 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.569..545.477 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.788..1.788 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.766..1.769 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61900.630..61900.630 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12927.603..27073.675 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.921..5732.940 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=416.480..416.480 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.519..294.298 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.074..91.775 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.086..43.086 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.342..32.077 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.677..8.758 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.528..4.528 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.626..2.611 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:55:27.034 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,632,"",2021-03-21 14:47:00 CET,4/640,0,LOG,00000,"duration: 109003.950 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=14781427.15..14781427.16 rows=1 width=8) (actual time=105033.514..105033.515 rows=1 loops=1)
  ->  Gather  (cost=14781426.94..14781427.15 rows=2 width=8) (actual time=105029.606..109003.849 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14780426.94..14780426.95 rows=1 width=8) (actual time=104967.672..104967.672 rows=1 loops=3)
              ->  Hash Join  (cost=637936.57..14419259.64 rows=144466918 width=0) (actual time=79144.865..103701.099 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=637627.57..12432530.52 rows=144466918 width=8) (actual time=79138.511..97551.346 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=636034.57..10444517.40 rows=144466918 width=8) (actual time=79110.515..89150.976 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=539353.19..7604606.94 rows=144466918 width=16) (actual time=47296.533..66689.629 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Parallel Hash Join  (cost=539316.19..2488033.19 rows=24077820 width=24) (actual time=47295.711..60614.291 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=517596.19..1977233.86 rows=25000000 width=24) (actual time=26147.287..40248.065 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.450..7097.625 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=364600.31..364600.31 rows=8333350 width=24) (actual time=8551.536..8551.536 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.469..4257.802 rows=6666667 loops=3)
                                                              Hash Cond: (ord.discount_id = dis.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.647..1797.411 rows=6666667 loops=3)
                                                              ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.786..0.787 rows=500 loops=3)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                                    ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.576..0.669 rows=500 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=261.851..261.852 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.818..109.403 rows=333333 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.777..0.777 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.763..0.765 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5046.722..5046.722 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.078..475.480 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.661..27.661 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.678..13.840 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.004..6.004 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.643..3.147 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:57:10.421 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,633,"",2021-03-21 14:47:00 CET,4/641,0,LOG,00000,"duration: 103379.864 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM discount as dis
JOIN ""order"" as ord
ON ord.discount_id = dis.id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98380.690..98380.690 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98375.884..103379.736 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98320.455..98320.456 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=85913.916..97063.042 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8650.337..15235.429 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8648.209..13443.875 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.691..4364.319 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.565..1771.469 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.082..1.083 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.783..0.904 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1487.049..1487.050 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.781..514.639 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.052..2.052 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=2.031..2.033 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=61045.272..61045.272 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=11386.891..25654.931 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.919..5332.737 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=409.530..409.530 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=43.345..294.060 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.093..89.339 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.879..41.879 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.183..31.429 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.590..8.645 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.503..4.504 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.562..2.543 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 08:59:08.396 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,634,"",2021-03-21 14:47:00 CET,4/642,0,LOG,00000,"duration: 117938.063 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15223147.94..15223147.95 rows=1 width=8) (actual time=114952.450..114952.450 rows=1 loops=1)
  ->  Gather  (cost=15223147.73..15223147.94 rows=2 width=8) (actual time=114948.727..117937.935 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15222147.73..15222147.74 rows=1 width=8) (actual time=114895.180..114895.181 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14860980.43 rows=144466918 width=0) (actual time=93336.149..113634.714 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Hash Join  (cost=531474.75..12874544.06 rows=144466918 width=8) (actual time=93334.867..108490.748 rows=20000000 loops=3)
                          Hash Cond: (sub.category_id = cat.id)
                          ->  Parallel Hash Join  (cost=531165.75..10887814.94 rows=144466918 width=16) (actual time=93330.037..102908.491 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=43601.443..79248.306 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=43600.594..72809.782 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43574.284..60992.690 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11872.649..25511.890 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.771..5897.956 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=239.282..239.282 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.956..96.708 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7742.884..7742.885 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.994..2676.663 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.946..25.946 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.513..12.819 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.811..0.812 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.792..0.794 rows=4 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=5554.818..5554.818 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.886..523.188 rows=1666667 loops=3)
                          ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.713..4.713 rows=10000 loops=3)
                                Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.551..2.605 rows=10000 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.071..1.071 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.781..0.907 rows=500 loops=3)",,,,,,,,,""
2021-03-22 09:00:53.935 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,635,"",2021-03-21 14:47:00 CET,4/643,0,LOG,00000,"duration: 105529.076 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96771.833..96771.833 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96765.050..105528.891 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96715.245..96715.246 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84207.711..95420.038 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8877.857..15626.180 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8875.792..13795.391 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.302..4412.960 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.798..1792.511 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.448..1.449 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=1.243..1.336 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1578.452..1578.452 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.839..492.569 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=2.001..2.001 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.980..1.981 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59569.354..59569.354 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12381.409..26394.783 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.722..5554.205 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=384.112..384.112 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.277..274.405 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.872..81.637 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.087..41.087 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.136..30.634 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.502..8.102 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.512..4.512 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.512..2.440 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:02:49.441 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,636,"",2021-03-21 14:47:00 CET,4/644,0,LOG,00000,"duration: 115479.279 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=15063017.61..15063017.62 rows=1 width=8) (actual time=112058.247..112058.248 rows=1 loops=1)
  ->  Gather  (cost=15063017.40..15063017.61 rows=2 width=8) (actual time=112053.885..115479.112 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=15062017.40..15062017.41 rows=1 width=8) (actual time=112002.375..112002.375 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14700850.10 rows=144466918 width=0) (actual time=97698.402..110826.733 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12714413.73 rows=144466918 width=8) (actual time=97697.370..106084.582 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9874503.28 rows=144466918 width=16) (actual time=49386.247..88887.345 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7887774.15 rows=144466918 width=24) (actual time=49379.219..81478.624 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2771200.40 rows=24077820 width=32) (actual time=49378.477..75912.419 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2438537.38 rows=24077820 width=32) (actual time=49355.210..64618.258 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.product_id = prod.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24964.703..40926.248 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.382..7255.882 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7164.886..7164.886 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.288..2552.530 rows=6666667 loops=3)
                                                  ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=240.960..240.960 rows=333333 loops=3)
                                                        Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                        ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.085..99.635 rows=333333 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.905..22.905 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.780..11.776 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.707..0.708 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.685..0.687 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.870..6.870 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.974..3.659 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1228.834..1228.834 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.075..476.680 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.834..0.835 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.642..0.727 rows=500 loops=3)",,,,,,,,,""
2021-03-22 09:04:30.427 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,637,"",2021-03-21 14:47:00 CET,4/645,0,LOG,00000,"duration: 100977.105 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96422.584..96422.585 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96415.524..100976.960 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96358.717..96358.718 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83876.649..95108.203 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8192.894..14928.873 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8191.156..13104.806 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.377..4118.858 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.423..1673.252 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.909..0.910 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.661..0.767 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1425.808..1425.808 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.459..518.998 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.688..1.688 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.675..1.677 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59831.997..59831.997 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=13032.223..26864.104 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.886..5773.734 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=417.746..417.746 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=42.410..299.701 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.875..84.350 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=41.210..41.210 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.162..30.670 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.630..8.087 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.429..4.429 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.602..2.466 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:06:14.139 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,638,"",2021-03-21 14:47:00 CET,4/646,0,LOG,00000,"duration: 103673.323 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=10797796.48..10797796.49 rows=1 width=8) (actual time=100930.959..100930.959 rows=1 loops=1)
  ->  Gather  (cost=10797796.26..10797796.47 rows=2 width=8) (actual time=100923.743..103672.812 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=10796796.26..10796796.27 rows=1 width=8) (actual time=100868.287..100868.288 rows=1 loops=3)
              ->  Hash Join  (cost=721815.04..10435628.97 rows=144466918 width=0) (actual time=59439.769..99134.318 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=721506.04..8448899.84 rows=144466918 width=8) (actual time=59434.820..92095.556 rows=20000000 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Hash Join  (cost=721469.04..3332326.09 rows=24077820 width=16) (actual time=59434.183..87613.494 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Hash Join  (cost=721452.79..3001239.82 rows=24077820 width=24) (actual time=59433.292..81913.399 rows=20000000 loops=3)
                                      Hash Cond: (prod.subcategory_id = sub.id)
                                      ->  Parallel Hash Join  (cost=719859.79..2668576.79 rows=24077820 width=24) (actual time=59407.588..72226.998 rows=20000000 loops=3)
                                            Hash Cond: (ord_det.product_id = prod.id)
                                            ->  Parallel Hash Join  (cost=698139.79..2157777.46 rows=25000000 width=24) (actual time=34853.783..48927.814 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.843..7038.882 rows=20000000 loops=3)
                                                  ->  Parallel Hash  (cost=545143.92..545143.92 rows=8333350 width=24) (actual time=17276.015..17276.016 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 2688kB
                                                        ->  Parallel Hash Join  (cost=96681.38..545143.92 rows=8333350 width=24) (actual time=7066.476..12054.013 rows=6666667 loops=3)
                                                              Hash Cond: (ord.customer_id = cus.id)
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.433..2544.014 rows=6666667 loops=3)
                                                              ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1318.285..1318.286 rows=1666667 loops=3)
                                                                    Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                                    ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.803..474.670 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=3897.784..3897.784 rows=333333 loops=3)
                                                  Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                  ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.022..109.196 rows=333333 loops=3)
                                      ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.395..25.396 rows=50000 loops=3)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                            ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.507..13.103 rows=50000 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.873..0.873 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.665..0.759 rows=500 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.597..0.597 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.582..0.584 rows=4 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.639..4.639 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.484..2.547 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:07:57.413 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,639,"",2021-03-21 14:47:00 CET,4/647,0,LOG,00000,"duration: 103258.183 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=96399.833..96399.833 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=96394.711..103257.428 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=96343.721..96343.722 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=84230.246..95101.503 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=9437.860..15913.070 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=9436.110..14137.094 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.720..5198.121 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.529..2639.818 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.151..1.152 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.915..1.016 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1413.568..1413.568 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.538..521.938 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.653..1.654 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.632..1.635 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58973.460..58973.460 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12114.007..26283.158 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.107..5473.270 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1106.571..1106.572 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=58.236..322.258 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.744..93.447 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=57.034..57.034 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.303..40.771 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.731..11.859 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.410..5.410 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.638..2.973 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:09:53.258 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,640,"",2021-03-21 14:47:00 CET,4/648,0,LOG,00000,"duration: 115810.393 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=14940985.94..14940985.95 rows=1 width=8) (actual time=111830.906..111830.906 rows=1 loops=1)
  ->  Gather  (cost=14940985.73..14940985.94 rows=2 width=8) (actual time=111826.836..115810.287 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=14939985.73..14939985.74 rows=1 width=8) (actual time=111776.021..111776.021 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..14578818.43 rows=144466918 width=0) (actual time=98128.525..110589.059 rows=20000000 loops=3)
                    Hash Cond: (ord.discount_id = dis.id)
                    ->  Parallel Hash Join  (cost=531474.75..12592382.06 rows=144466918 width=8) (actual time=98127.468..105897.926 rows=20000000 loops=3)
                          Hash Cond: (ord.customer_id = cus.id)
                          ->  Hash Join  (cost=434793.38..9752471.61 rows=144466918 width=16) (actual time=43755.325..86603.700 rows=20000000 loops=3)
                                Hash Cond: (sub.category_id = cat.id)
                                ->  Hash Join  (cost=434484.38..7765742.48 rows=144466918 width=24) (actual time=43749.994..78779.926 rows=20000000 loops=3)
                                      Hash Cond: (ord.deliverer_id = del.id)
                                      ->  Hash Join  (cost=434447.38..2649168.73 rows=24077820 width=32) (actual time=43749.494..73060.268 rows=20000000 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=43723.854..60876.067 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11916.894..25448.374 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.657..5904.054 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=229.958..229.959 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.877..97.916 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7010.644..7010.644 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.973..2513.647 rows=6666667 loops=3)
                                            ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=25.328..25.328 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                                  ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.447..12.679 rows=50000 loops=3)
                                      ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.472..0.472 rows=4 loops=3)
                                            Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                            ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.462..0.463 rows=4 loops=3)
                                ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.218..5.218 rows=10000 loops=3)
                                      Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                      ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.752..2.824 rows=10000 loops=3)
                          ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=3180.558..3180.558 rows=1666667 loops=3)
                                Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.773..528.221 rows=1666667 loops=3)
                    ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.842..0.842 rows=500 loops=3)
                          Buckets: 1024  Batches: 1  Memory Usage: 28kB
                          ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.586..0.705 rows=500 loops=3)",,,,,,,,,""
2021-03-22 09:11:37.846 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,641,"",2021-03-21 14:47:00 CET,4/649,0,LOG,00000,"duration: 104581.172 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM order_details as ord_det
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN category as cat
ON cat.id = sub.category_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN discount as dis
ON dis.id = ord.discount_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95485.101..95485.102 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95478.419..104581.019 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95428.028..95428.028 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83091.995..94138.183 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8508.109..15101.686 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8506.299..13287.303 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=3.064..4331.938 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.875..1769.175 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.140..1.140 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.845..0.962 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1321.490..1321.491 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.846..526.487 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.747..1.747 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.726..1.728 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=58925.401..58925.401 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12204.849..25768.177 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.862..5729.361 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=392.881..392.881 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=41.423..278.125 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.852..84.380 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=40.250..40.250 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.000..30.320 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.599..8.075 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.315..4.315 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.550..2.416 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:13:50.982 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,642,"",2021-03-21 14:47:00 CET,4/650,0,LOG,00000,"duration: 133096.516 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16036901.32..16036901.33 rows=1 width=8) (actual time=127845.606..127845.606 rows=1 loops=1)
  ->  Gather  (cost=16036901.11..16036901.32 rows=2 width=8) (actual time=127841.295..133096.346 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16035901.11..16035901.12 rows=1 width=8) (actual time=127791.540..127791.540 rows=1 loops=3)
              ->  Hash Join  (cost=1304927.63..15674733.82 rows=144466917 width=0) (actual time=101275.135..126566.996 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=1304618.63..13688004.71 rows=144466917 width=8) (actual time=101270.147..120481.967 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=1303025.63..11699991.60 rows=144466917 width=8) (actual time=101247.383..112179.575 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Hash Join  (cost=1281305.63..9339914.63 rows=150000000 width=8) (actual time=75656.533..95596.724 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Hash Join  (cost=1281289.38..7277398.38 rows=150000000 width=16) (actual time=75655.482..90039.265 rows=20000000 loops=3)
                                            Hash Cond: (ord.id = ord_det.order_id)
                                            ->  Parallel Hash Join  (cost=96718.38..3169969.00 rows=50000100 width=16) (actual time=8296.211..13428.121 rows=6666667 loops=3)
                                                  Hash Cond: (ord.customer_id = cus.id)
                                                  ->  Hash Join  (cost=37.00..2020874.38 rows=50000100 width=24) (actual time=2.339..4263.154 rows=6666667 loops=3)
                                                        Hash Cond: (ord.deliverer_id = del.id)
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.434..1712.663 rows=6666667 loops=3)
                                                        ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.849..0.850 rows=4 loops=3)
                                                              Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                              ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.829..0.831 rows=4 loops=3)
                                                  ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1287.023..1287.024 rows=1666667 loops=3)
                                                        Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                        ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.526..514.174 rows=1666667 loops=3)
                                            ->  Parallel Hash  (cost=750000.00..750000.00 rows=25000000 width=16) (actual time=49896.994..49896.995 rows=20000000 loops=3)
                                                  Buckets: 131072  Batches: 1024  Memory Usage: 3872kB
                                                  ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.172..7988.174 rows=20000000 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.020..1.020 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.804..0.896 rows=500 loops=3)
                                ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=214.383..214.383 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 4032kB
                                      ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.853..93.310 rows=333333 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=22.470..22.470 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.656..11.603 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=4.699..4.700 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.519..2.523 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:15:36.201 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,643,"",2021-03-21 14:47:00 CET,4/651,0,LOG,00000,"duration: 105200.668 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM deliverer as del
JOIN ""order"" as ord
ON ord.deliverer_id = del.id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=100302.985..100302.986 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=100297.584..105200.534 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=100246.074..100246.074 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=87650.700..98950.203 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8597.263..15172.564 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8595.476..13379.403 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.490..4491.340 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.434..1833.324 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.005..1.006 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.828..0.907 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1246.318..1246.318 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.508..507.203 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.727..1.727 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.707..1.710 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=63466.158..63466.158 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=16550.578..30429.730 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.427..5827.070 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=447.328..447.328 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=44.900..290.706 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.812..87.679 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=43.791..43.792 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=5.776..32.724 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.577..8.596 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.086..5.086 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.640..2.758 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:17:30.330 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,644,"",2021-03-21 14:47:00 CET,4/652,0,LOG,00000,"duration: 114093.198 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19083828.44..19083828.45 rows=1 width=8) (actual time=110644.516..110644.516 rows=1 loops=1)
  ->  Gather  (cost=19083828.23..19083828.44 rows=2 width=8) (actual time=110639.062..114091.972 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19082828.23..19082828.24 rows=1 width=8) (actual time=110584.979..110584.979 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..18721660.94 rows=144466917 width=0) (actual time=83962.544..109246.358 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..16734931.83 rows=144466917 width=8) (actual time=83956.775..102972.726 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..14746918.72 rows=144466917 width=8) (actual time=83924.560..94463.566 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Parallel Hash Join  (cost=432907.63..11907008.27 rows=144466917 width=16) (actual time=58608.585..71749.781 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Hash Join  (cost=411187.63..9253963.29 rows=150000000 width=16) (actual time=23907.757..50990.343 rows=20000000 loops=3)
                                            Hash Cond: (ord.discount_id = dis.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=23906.814..44929.698 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=23906.343..39157.752 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.561..7100.366 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=6914.811..6914.812 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.046..2504.911 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.449..0.449 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.440..0.441 rows=4 loops=3)
                                            ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.902..0.903 rows=500 loops=3)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                                  ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.732..0.808 rows=500 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=224.170..224.171 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.605..92.877 rows=333333 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4805.193..4805.193 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.869..483.248 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=31.868..31.868 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.596..15.240 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.410..5.410 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.502..2.858 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:19:15.094 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,645,"",2021-03-21 14:47:00 CET,4/653,0,LOG,00000,"duration: 104756.428 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=98645.978..98645.979 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=98640.429..104755.347 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=98581.254..98581.254 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=86126.021..97285.278 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8827.140..15454.635 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8825.570..13655.827 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.976..4256.592 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.866..1726.402 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.057..1.057 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.727..0.861 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1296.271..1296.275 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.631..523.823 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.507..1.507 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.486..1.488 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=60838.203..60838.203 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12313.763..26149.746 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.821..5531.477 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1054.921..1054.921 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=61.164..335.976 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.913..94.588 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=59.835..59.835 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.424..43.282 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.619..11.814 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.678..6.678 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=1.033..3.606 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:21:07.988 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,646,"",2021-03-21 14:47:00 CET,4/654,0,LOG,00000,"duration: 112861.054 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=19405472.48..19405472.49 rows=1 width=8) (actual time=109512.648..109512.648 rows=1 loops=1)
  ->  Gather  (cost=19405472.26..19405472.47 rows=2 width=8) (actual time=109506.074..112860.943 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=19404472.26..19404472.27 rows=1 width=8) (actual time=109451.383..109451.383 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..19043304.97 rows=144466917 width=0) (actual time=76629.831..107978.568 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..17056575.86 rows=144466917 width=8) (actual time=76623.356..101797.521 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Hash Join  (cost=529589.00..15068562.75 rows=144466917 width=8) (actual time=76594.905..93296.479 rows=20000000 loops=3)
                                Hash Cond: (ord.discount_id = dis.id)
                                ->  Parallel Hash Join  (cost=529572.75..13082126.39 rows=144466917 width=16) (actual time=76593.684..88263.199 rows=20000000 loops=3)
                                      Hash Cond: (ord_det.product_id = prod.id)
                                      ->  Parallel Hash Join  (cost=507852.75..10429081.42 rows=150000000 width=16) (actual time=60086.331..70200.600 rows=20000000 loops=3)
                                            Hash Cond: (ord.customer_id = cus.id)
                                            ->  Hash Join  (cost=411171.38..7191447.04 rows=150000000 width=24) (actual time=24873.351..47616.284 rows=20000000 loops=3)
                                                  Hash Cond: (ord.deliverer_id = del.id)
                                                  ->  Parallel Hash Join  (cost=411134.38..1878910.04 rows=25000000 width=32) (actual time=24872.600..40949.166 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.order_id = ord.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.411..6889.290 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7547.662..7547.663 rows=6666667 loops=3)
                                                              Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                              ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.078..2715.753 rows=6666667 loops=3)
                                                  ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.705..0.705 rows=4 loops=3)
                                                        Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                        ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.683..0.686 rows=4 loops=3)
                                            ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=4074.357..4074.357 rows=1666667 loops=3)
                                                  Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                                  ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.832..472.383 rows=1666667 loops=3)
                                      ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=282.453..282.453 rows=333333 loops=3)
                                            Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=1.259..125.601 rows=333333 loops=3)
                                ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.189..1.189 rows=500 loops=3)
                                      Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                      ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.980..1.069 rows=500 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=27.976..27.976 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.684..13.273 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.107..6.107 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.579..3.120 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:22:53.597 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,647,"",2021-03-21 14:47:00 CET,4/655,0,LOG,00000,"duration: 105600.762 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM ""order"" as ord
JOIN order_details as ord_det
ON ord_det.order_id = ord.id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN product as prod
ON prod.id = ord_det.product_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=97136.661..97136.661 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=97133.291..105600.503 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=97077.573..97077.573 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466917 width=0) (actual time=84439.367..95786.468 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8542.061..15260.470 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8540.140..13441.721 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.691..4408.780 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.597..1806.612 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=1.046..1.047 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.803..0.909 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1286.158..1286.159 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.557..508.325 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.838..1.838 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.810..1.813 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59862.567..59862.567 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12831.872..26623.110 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.966..5679.428 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=403.918..403.918 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3520kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=48.961..285.903 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.861..85.756 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=47.747..47.747 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=6.810..35.579 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.558..9.407 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.125..6.126 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.540..3.103 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:24:41.121 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,648,"",2021-03-21 14:47:00 CET,4/656,0,LOG,00000,"duration: 107493.455 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 1;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=16596336.04..16596336.05 rows=1 width=8) (actual time=104066.204..104066.204 rows=1 loops=1)
  ->  Gather  (cost=16596335.83..16596336.04 rows=2 width=8) (actual time=104061.529..107492.922 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=16595335.83..16595335.84 rows=1 width=8) (actual time=103976.720..103976.720 rows=1 loops=3)
              ->  Hash Join  (cost=531491.00..16234168.53 rows=144466918 width=0) (actual time=79244.178..102725.285 rows=20000000 loops=3)
                    Hash Cond: (sub.category_id = cat.id)
                    ->  Hash Join  (cost=531182.00..14247439.41 rows=144466918 width=8) (actual time=79237.837..96761.720 rows=20000000 loops=3)
                          Hash Cond: (prod.subcategory_id = sub.id)
                          ->  Parallel Hash Join  (cost=529589.00..12259426.29 rows=144466918 width=8) (actual time=79213.266..88788.851 rows=20000000 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=432907.63..9419515.83 rows=144466918 width=16) (actual time=42627.396..70012.286 rows=20000000 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Hash Join  (cost=432891.38..7433079.46 rows=144466918 width=24) (actual time=42626.478..63794.388 rows=20000000 loops=3)
                                            Hash Cond: (ord.deliverer_id = del.id)
                                            ->  Parallel Hash Join  (cost=432854.38..2316505.71 rows=24077820 width=32) (actual time=42625.957..58178.322 rows=20000000 loops=3)
                                                  Hash Cond: (ord_det.order_id = ord.id)
                                                  ->  Parallel Hash Join  (cost=21720.00..1211971.33 rows=24077820 width=16) (actual time=11780.286..25448.409 rows=20000000 loops=3)
                                                        Hash Cond: (ord_det.product_id = prod.id)
                                                        ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=1.578..5863.327 rows=20000000 loops=3)
                                                        ->  Parallel Hash  (cost=14476.67..14476.67 rows=416667 width=16) (actual time=234.984..234.985 rows=333333 loops=3)
                                                              Buckets: 131072  Batches: 16  Memory Usage: 4000kB
                                                              ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.717..104.197 rows=333333 loops=3)
                                                  ->  Parallel Hash  (cost=250000.50..250000.50 rows=8333350 width=32) (actual time=7272.362..7272.362 rows=6666667 loops=3)
                                                        Buckets: 65536  Batches: 512  Memory Usage: 3008kB
                                                        ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=0.908..2587.514 rows=6666667 loops=3)
                                            ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=0.488..0.488 rows=4 loops=3)
                                                  Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                                  ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=0.478..0.479 rows=4 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.881..0.882 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.661..0.757 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1245.037..1245.037 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2592kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=0.998..495.211 rows=1666667 loops=3)
                          ->  Hash  (cost=968.00..968.00 rows=50000 width=16) (actual time=24.222..24.222 rows=50000 loops=3)
                                Buckets: 65536  Batches: 1  Memory Usage: 2856kB
                                ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.597..12.366 rows=50000 loops=3)
                    ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=5.934..5.934 rows=10000 loops=3)
                          Buckets: 16384  Batches: 1  Memory Usage: 519kB
                          ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.588..3.142 rows=10000 loops=3)",,,,,,,,,""
2021-03-22 09:26:21.376 CET,"postgres","shop_db",9788,"127.0.0.1:60483",60574e54.263c,649,"",2021-03-21 14:47:00 CET,4/657,0,LOG,00000,"duration: 100245.301 ms  plan:
Query Text: BEGIN;
SET LOCAL join_collapse_limit = 8;
SELECT count(*) FROM product as prod
JOIN order_details as ord_det
ON ord_det.product_id = prod.id
JOIN ""order"" as ord
ON ord.id = ord_det.order_id
JOIN deliverer as del
ON del.id = ord.deliverer_id
JOIN discount as dis
ON dis.id = ord.discount_id
JOIN customer as cus
ON cus.id = ord.customer_id
JOIN subcategory as sub
ON sub.id = prod.subcategory_id
JOIN category as cat
ON cat.id = sub.category_id;
COMMIT;
Finalize Aggregate  (cost=7102640.62..7102640.63 rows=1 width=8) (actual time=95328.420..95328.420 rows=1 loops=1)
  ->  Gather  (cost=7102640.40..7102640.61 rows=2 width=8) (actual time=95319.912..100242.745 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=7101640.40..7101640.41 rows=1 width=8) (actual time=95261.662..95261.662 rows=1 loops=3)
              ->  Parallel Hash Join  (cost=1711237.38..6740473.11 rows=144466918 width=0) (actual time=83068.242..93980.403 rows=20000000 loops=3)
                    Hash Cond: (ord.id = ord_det.order_id)
                    ->  Hash Join  (cost=96734.63..2414341.60 rows=50000100 width=8) (actual time=8387.742..15038.984 rows=6666667 loops=3)
                          Hash Cond: (ord.deliverer_id = del.id)
                          ->  Parallel Hash Join  (cost=96697.63..643467.73 rows=8333350 width=16) (actual time=8385.782..13227.485 rows=6666667 loops=3)
                                Hash Cond: (ord.customer_id = cus.id)
                                ->  Hash Join  (cost=16.25..364600.31 rows=8333350 width=24) (actual time=2.404..4360.257 rows=6666667 loops=3)
                                      Hash Cond: (ord.discount_id = dis.id)
                                      ->  Parallel Seq Scan on ""order"" ord  (cost=0.00..250000.50 rows=8333350 width=32) (actual time=1.490..1777.666 rows=6666667 loops=3)
                                      ->  Hash  (cost=10.00..10.00 rows=500 width=8) (actual time=0.855..0.856 rows=500 loops=3)
                                            Buckets: 1024  Batches: 1  Memory Usage: 28kB
                                            ->  Seq Scan on discount dis  (cost=0.00..10.00 rows=500 width=8) (actual time=0.634..0.730 rows=500 loops=3)
                                ->  Parallel Hash  (cost=62500.50..62500.50 rows=2083350 width=8) (actual time=1261.581..1261.581 rows=1666667 loops=3)
                                      Buckets: 131072  Batches: 128  Memory Usage: 2624kB
                                      ->  Parallel Seq Scan on customer cus  (cost=0.00..62500.50 rows=2083350 width=8) (actual time=1.760..483.782 rows=1666667 loops=3)
                          ->  Hash  (cost=22.00..22.00 rows=1200 width=8) (actual time=1.855..1.855 rows=4 loops=3)
                                Buckets: 2048  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on deliverer del  (cost=0.00..22.00 rows=1200 width=8) (actual time=1.839..1.841 rows=4 loops=3)
                    ->  Parallel Hash  (cost=1219476.01..1219476.01 rows=24077820 width=8) (actual time=59290.906..59290.906 rows=20000000 loops=3)
                          Buckets: 131072  Batches: 1024  Memory Usage: 3392kB
                          ->  Parallel Hash Join  (cost=29631.68..1219476.01 rows=24077820 width=8) (actual time=12241.860..26227.532 rows=20000000 loops=3)
                                Hash Cond: (ord_det.product_id = prod.id)
                                ->  Parallel Seq Scan on order_details ord_det  (cost=0.00..750000.00 rows=25000000 width=16) (actual time=0.980..5419.908 rows=20000000 loops=3)
                                ->  Parallel Hash  (cost=22795.34..22795.34 rows=416667 width=8) (actual time=1300.406..1300.406 rows=333333 loops=3)
                                      Buckets: 131072  Batches: 16  Memory Usage: 3552kB
                                      ->  Hash Join  (cost=2589.50..22795.34 rows=416667 width=8) (actual time=64.993..311.030 rows=333333 loops=3)
                                            Hash Cond: (prod.subcategory_id = sub.id)
                                            ->  Parallel Seq Scan on product prod  (cost=0.00..14476.67 rows=416667 width=16) (actual time=0.805..89.009 rows=333333 loops=3)
                                            ->  Hash  (cost=1964.50..1964.50 rows=50000 width=8) (actual time=63.806..63.806 rows=50000 loops=3)
                                                  Buckets: 65536  Batches: 1  Memory Usage: 2466kB
                                                  ->  Hash Join  (cost=309.00..1964.50 rows=50000 width=8) (actual time=7.226..45.862 rows=50000 loops=3)
                                                        Hash Cond: (sub.category_id = cat.id)
                                                        ->  Seq Scan on subcategory sub  (cost=0.00..968.00 rows=50000 width=16) (actual time=0.532..12.690 rows=50000 loops=3)
                                                        ->  Hash  (cost=184.00..184.00 rows=10000 width=8) (actual time=6.552..6.552 rows=10000 loops=3)
                                                              Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                              ->  Seq Scan on category cat  (cost=0.00..184.00 rows=10000 width=8) (actual time=0.543..3.319 rows=10000 loops=3)",,,,,,,,,""
